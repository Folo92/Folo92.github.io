{"version":3,"file":"js/491.1d4e6567.js","mappings":"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","sources":["webpack://yun-admin/./src/utils/indexedDB.js","webpack://yun-admin/./src/views/article/BookList.vue","webpack://yun-admin/./src/views/article/BookList.vue?71a6"],"sourcesContent":["if (!window.indexedDB) {\r\n  window.alert(\"你的浏览器不支持IndexedDB的稳定版本。书籍缓存功能将不可用。\")\r\n}\r\n\r\nlet db //全局IDBDatabase对象实例\r\n\r\n/**\r\n * 开启一个读写的事务\r\n * @param {string} dbName 数据库名称\r\n * @param {number} dbVersion 数据库版本\r\n * @param {Array} stores 对象仓库数组\r\n * * [{\r\n * * * storeName: 对象仓库名称\r\n * * * idName: 主键名称\r\n * * * indexName: 索引名称\r\n * * * propName: 索引对应的属性名称(可以是数组)\r\n * * * unique: 是否可以重复\r\n * * },...],\r\n * @returns IDBDatabase对象实例\r\n */\r\nexport function dbInit(dbName = \"db_default\", dbVersion = 1, stores) {\r\n  return new Promise((resolve, reject) => {\r\n    //打开数据库\r\n    const request = window.indexedDB.open(dbName, dbVersion)\r\n    //成功事件，返回数据库对象实例（IDBDatabase对象的实例）\r\n    request.onsuccess = function (event) {\r\n      db = event.target.result\r\n      resolve(event.target.result)\r\n    }\r\n    //数据库升级事件，仅在创建数据库或数据库升级时触发\r\n    request.onupgradeneeded = function (event) {\r\n      //缓存IDBDatabase接口，用于后续创建/删除对象存储空间（对象仓库，类比于关系型数据库的表）\r\n      db = event.target.result\r\n      //创建/删除对象存储空间的操作\r\n      if (stores)\r\n        stores.forEach((item) => {\r\n          if (!db.objectStoreNames.contains(item.storeName)) {\r\n            // 为数据库创建一个对象仓库\r\n            const objectStore = db.createObjectStore(item.storeName, {\r\n              keyPath: item.idName,\r\n              autoIncrement: true,\r\n            })\r\n            //创建索引，第一个参数为索引名称，第二个参数为索引所在的属性，可以使用数组将多个属性设置为一个索引\r\n            //第三个参数为可选参数，指定该属性的值是否要求唯一\r\n            objectStore.createIndex(item.indexName, item.propName, { unique: item.unique })\r\n          }\r\n        })\r\n    }\r\n    request.onerror = function (err) {\r\n      reject(err)\r\n    }\r\n  })\r\n}\r\n\r\nexport async function dbOperation(store, method, data) {\r\n  const methodList = [\"add\", \"get\", \"getAll\", \"put\", \"delete\", \"getByIndex\"]\r\n  if (!methodList.includes(method)) {\r\n    throw new Error(`操作类型错误, 仅支持: ${methodList.toString()} 方法`)\r\n  }\r\n  const readType = [\"get\", \"getAll\", \"getByIndex\"].includes(method) ? \"readonly\" : \"readwrite\"\r\n  const objectStore = db.transaction(store, readType).objectStore(store)\r\n  alert(\"objectStore.name: \" + objectStore.name)\r\n  // 返回值\r\n  return new Promise((resolve, reject) => {\r\n    //获取IDBIndex对象，参数为索引的名称\r\n    let request\r\n    switch (method) {\r\n      case \"add\":\r\n        request = objectStore.add(data)\r\n        break\r\n      case \"get\":\r\n        request = objectStore.get(data)\r\n        break\r\n      case \"getAll\":\r\n        request = objectStore.getAll(data)\r\n        break\r\n      case \"put\":\r\n        request = objectStore.put(data)\r\n        break\r\n      case \"delete\":\r\n        request = objectStore.delete(data)\r\n        break\r\n      case \"getByIndex\": {\r\n        const index = objectStore.index(data.name)\r\n        request = index.get(data.value)\r\n        break\r\n      }\r\n    }\r\n    // if (method == \"getByIndex\") {\r\n    //   const index = objectStore.index(data.name)\r\n    //   request = index.get(data.value)\r\n    // } else {\r\n    //   request = objectStore[method](data)\r\n    // }\r\n    // alert(store + \",\" + method + \",\" + JSON.stringify(data) + \", request,\", JSON.stringify(request))\r\n    request.onsuccess = (res) => {\r\n      // alert(\"success, \", res.target.result) //调试\r\n      resolve(res.target.result)\r\n    }\r\n    request.onerror = (err) => {\r\n      // console.log(err) //调试\r\n      reject(err)\r\n    }\r\n  })\r\n}\r\n\r\n// export async function dbAdd(store, data) {\r\n//   return new Promise((resolve, reject) => {\r\n//     dbOperation(store, \"add\", data).then((response) => {\r\n//       console.log(\"add\", response)\r\n//       resolve(response)\r\n//     })\r\n//   })\r\n// }\r\n// export async function dbGet(store, key) {\r\n//   return new Promise((resolve, reject) => {\r\n//     dbOperation(store, \"get\", key).then((response) => {\r\n//       console.log(\"get\", response)\r\n//       resolve(response)\r\n//     })\r\n//   })\r\n// }\r\n// export async function dbGetByIndex(store, indexValue) {\r\n//   return new Promise((resolve, reject) => {\r\n//     dbOperation(store, \"getByIndex\", indexValue).then((response) => {\r\n//       console.log(\"getByIndex\", response)\r\n//       resolve(response)\r\n//     })\r\n//   })\r\n// }\r\n// export async function dbGetAll(store) {\r\n//   return new Promise((resolve, reject) => {\r\n//     dbOperation(store, \"getAll\").then((response) => {\r\n//       console.log(\"getAll\", response)\r\n//       resolve(response)\r\n//     })\r\n//   })\r\n// }\r\n","<template>\r\n  <div class=\"app-container\">\r\n    <!-- ////////// 目录模块 ////////// -->\r\n    <div v-show=\"!inReader\" style=\"width: 800px; margin: 0 auto\">\r\n      <!-- ////////// 文件选择 ////////// -->\r\n      <el-upload\r\n        v-model=\"fileList\"\r\n        ref=\"upload\"\r\n        class=\"upload-demo\"\r\n        action=\"#\"\r\n        :auto-upload=\"false\"\r\n        drag\r\n        :on-change=\"onChange\"\r\n      >\r\n        <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\r\n        <div class=\"el-upload__text\">Drop file here or <em>click to upload</em></div>\r\n        <template #tip>\r\n          <div class=\"el-upload__tip\">txt files with a size less than 50mb</div>\r\n        </template>\r\n      </el-upload>\r\n      <br />\r\n      <!-- ////////// 书籍列表 ////////// -->\r\n      <el-row :gutter=\"30\">\r\n        <el-col v-for=\"(item, index) in bookList\" :key=\"item\" :span=\"6\" style=\"margin-bottom: 30px\">\r\n          <el-card :body-style=\"{ padding: '0px', height: '240px' }\">\r\n            <img\r\n              src=\"https://img.fevte.com/data/attachment/portal/201407/31/112644t4u445t4ttch57mu.jpg?x-oss-process=image/auto-orient,1/quality,q_80\"\r\n              class=\"image\"\r\n            />\r\n            <div style=\"padding: 14px\">\r\n              <div class=\"link-type\" style=\"font-size: 14px; height: 50px\" @click=\"readBook(item)\">\r\n                {{ item.bookName }}\r\n              </div>\r\n              <div class=\"bottom\">\r\n                <!-- <time class=\"time\">{{ new Date() }}</time> -->\r\n                <el-button text class=\"button link-type\" @click=\"showCatalog(item)\">目录</el-button>\r\n                <el-button text class=\"button link-type\" @click=\"deleteBook(item, index)\"\r\n                  >删除</el-button\r\n                >\r\n              </div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n      <br />\r\n\r\n      <div v-show=\"catalogVisible\">\r\n        <!-- ////////// 页头 ////////// -->\r\n        <el-page-header\r\n          :icon=\"isAsc ? 'SortUp' : 'SortDown'\"\r\n          @back=\"sortChange\"\r\n          style=\"color: #4490f1; font-size: 16px\"\r\n        >\r\n          <template #title>\r\n            <span style=\"color: #4490f1; font-size: 16px\"> {{ isAsc ? \"升序\" : \"降序\" }} </span>\r\n          </template>\r\n          <template #content>\r\n            <div class=\"flex items-center\">\r\n              <span style=\"color: var(--el-text-color-regular); font-size: 16px\">\r\n                {{ bookName }}\r\n              </span>\r\n              &emsp;\r\n              <span\r\n                v-show=\"bookName != ''\"\r\n                class=\"link-type\"\r\n                style=\"font-size: 14px\"\r\n                @click=\"readArticle()\"\r\n                >继续阅读</span\r\n              >\r\n              &emsp;\r\n              <span\r\n                class=\"link-type\"\r\n                style=\"font-size: 14px; right: 0\"\r\n                @click=\"catalogVisible = false\"\r\n                >关闭</span\r\n              >\r\n            </div>\r\n          </template>\r\n          <!-- <template #extra>\r\n            <el-button>关闭</el-button>\r\n          </template> -->\r\n        </el-page-header>\r\n        <br />\r\n        <!-- ////////// 表格 ////////// -->\r\n        <el-table\r\n          :key=\"tableKey\"\r\n          :data=\"list\"\r\n          border\r\n          table-layout=\"fixed\"\r\n          :max-height=\"1000\"\r\n          style=\"width: 800px\"\r\n          @sort-change=\"sortChange\"\r\n        >\r\n          <!-- 序号列 -->\r\n          <el-table-column label=\"序号\" width=\"60px\" align=\"center\">\r\n            <template v-slot=\"props\">\r\n              {{ props.$index + (listPagination.pageIndex - 1) * listPagination.pageSize + 1 }}\r\n              <!-- {{ props.$index + 1 }} -->\r\n            </template>\r\n          </el-table-column>\r\n          <!-- 章节目录列 -->\r\n          <el-table-column prop=\"title\" label=\"章节目录\" minWidth=\"160px\" align=\"left\">\r\n            <template v-slot=\"{ row }\">\r\n              <span class=\"link-type\" @click=\"readArticle(row)\">\r\n                {{ row.title }}\r\n              </span>\r\n            </template>\r\n          </el-table-column>\r\n          <!-- 操作列 -->\r\n          <el-table-column\r\n            label=\"操作\"\r\n            align=\"center\"\r\n            width=\"120\"\r\n            class-name=\"small-padding fixed-width\"\r\n          >\r\n            <template v-slot=\"{ row }\">\r\n              <el-button type=\"primary\" size=\"small\" @click=\"readArticle(row)\"> 阅读 </el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n\r\n        <!-- ////////// 底部分页栏 ////////// -->\r\n        <pagination\r\n          v-show=\"total > 0\"\r\n          :total=\"total\"\r\n          :autoScroll=\"false\"\r\n          v-model:page=\"listPagination.pageIndex\"\r\n          v-model:limit=\"listPagination.pageSize\"\r\n          @pagination=\"getList\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- ////////// 阅读模块 ////////// -->\r\n    <div v-show=\"inReader\" class=\"filter-container\">\r\n      <YunReader\r\n        ref=\"reader\"\r\n        :changeMode=\"changeMode\"\r\n        :inReader=\"inReader\"\r\n        :bookId=\"bookId\"\r\n        :bookName=\"bookName\"\r\n        :articleData=\"articleData\"\r\n        :chapterList=\"chapterList\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Pagination from \"@/components/Pagination\"\r\nimport YunReader from \"@/components/YunReader/YunReader.vue\"\r\nimport { dbInit, dbOperation } from \"@/utils/indexedDB\"\r\n\r\nexport default {\r\n  name: \"BookList\",\r\n  components: { Pagination, YunReader },\r\n  data() {\r\n    return {\r\n      fileList: [],\r\n      file: null,\r\n      bookList: [],\r\n      bookText: \"\",\r\n      chapterList: [], //章节数组{ id: 0, title: \"\", content: \"\" }\r\n      bookName: \"\", //书名\r\n      bookId: \"\", //书Id\r\n      articleData: \"\", //{ id: \"\", title: \"\", content: \"\" },\r\n      // 分页条件\r\n      listPagination: {\r\n        sort: \"id\", // 默认按id排序（首字母不要大写）\r\n        sortType: \"desc\",\r\n        pageIndex: 1,\r\n        pageSize: 10,\r\n      },\r\n      tableKey: 0, //如果修改表格参数，key值加1即可更新表格显示\r\n      list: [], //表格数据\r\n      total: 0, //总行数\r\n      isAsc: true, //表格是否升序\r\n      inReader: false,\r\n      catalogVisible: false,\r\n    }\r\n  },\r\n  mounted() {\r\n    const stores = [\r\n      {\r\n        storeName: \"book\",\r\n        idName: \"id\",\r\n        indexName: \"bookId\",\r\n        propName: \"bookId\",\r\n        unique: true,\r\n      },\r\n      {\r\n        storeName: \"brief\",\r\n        idName: \"id\",\r\n        indexName: \"bookId\",\r\n        propName: \"bookId\",\r\n        unique: true,\r\n      },\r\n    ]\r\n    dbInit(\"db_YunReader\", 1, stores).then((response) => {\r\n      console.log(\"db\", response)\r\n      dbOperation(\"brief\", \"getAll\").then((response) => {\r\n        if (response) {\r\n          this.bookList = response\r\n        }\r\n      })\r\n    })\r\n  },\r\n  methods: {\r\n    extractTitles(str) {\r\n      const reg =\r\n        /(正文){0,1}(第)([零〇一二三四五六七八九十百千万a-zA-Z0-9]{1,7})[章节卷集部篇回]((?! {4}).)((?!\\t{1,4}).){0,30}\\r?\\n/g\r\n      let list = []\r\n      let result = null\r\n      result = str.match(reg)\r\n      result && list.push(...result)\r\n      for (let i = 0; i < list.length; i++) {\r\n        list[i] = list[i].replace(\"\\r\", \"\").replace(\"\\n\", \"\").replace(\"\\t\", \"\")\r\n      }\r\n      return list\r\n    },\r\n    getChapters() {\r\n      var timeStart = performance.now()\r\n      const debug = false //调试总开关\r\n      this.list = [] //清空\r\n      // const regex =\r\n      //   /^第(.*?)章|^第(.*?)回|^第(.*?)集|^第(.*?)卷|^第(.*?)部|^第(.*?)篇|^第(.*?)节|^第(.*?)季|^【(.*?)】/\r\n      const regex =\r\n        /^(第)([零〇一二三四五六七八九十百千万a-zA-Z0-9]{1,7})[章节卷集部篇回季](.){0,30}|^【(.{1,30})】$/\r\n      const text = this.bookText\r\n      // console.log(this.extractTitles(text))\r\n      let paraList = text\r\n        .replaceAll(\"\\r\\n\", \"\\n\")\r\n        .replaceAll(\"\\r\", \"\\n\")\r\n        .split(\"\\n\")\r\n        .map((item) => item.trim())\r\n        .filter((item) => item.length > 0)\r\n      // if (debug) console.log(\"paraList\", paraList) //调试\r\n      let start = 0\r\n      let chapters = []\r\n      let titles = []\r\n      //按段落分析，生成临时的标题和章节数组\r\n      for (let i = 0; i < paraList.length; i++) {\r\n        //如果是标题\r\n        // if (regex.test(paraList[i]) && paraList[i].length < 40) {\r\n        if (regex.test(paraList[i])) {\r\n          if (i == 0) {\r\n            //如果第一段就是标题\r\n            titles.push(paraList[i])\r\n          } else {\r\n            const content = paraList.slice(start, i)\r\n            if (titles.length == 0 && start == 0) titles.push(\"前言\")\r\n            titles.push(paraList[i])\r\n            chapters.push(content)\r\n            start = i\r\n          }\r\n        }\r\n        //如果到最后一段了\r\n        if (i == paraList.length - 1) {\r\n          const endChapter = paraList.slice(start, i + 1)\r\n          if (titles.length == 0) titles.push(endChapter[0].slice(0, 10))\r\n          chapters.push(endChapter)\r\n        }\r\n      }\r\n      if (debug) console.log(\"chapters\", chapters) //调试\r\n      if (debug) console.log(\"titles\", titles) //调试\r\n      this.chapterList = [] //清空\r\n      //生成最终的完整章节数据\r\n      for (let i = 0; i < chapters.length; i++) {\r\n        this.chapterList.push({\r\n          id: i,\r\n          title: titles[i],\r\n          content: chapters[i],\r\n          // content: chapters[i].join(\"\\n\"),\r\n        })\r\n      }\r\n\r\n      this.updateBookList()\r\n\r\n      var timeEnd = performance.now()\r\n      console.log(\"getChapters 耗时\", `${timeEnd - timeStart}ms`)\r\n    },\r\n\r\n    updateBookList() {\r\n      dbOperation(\"brief\", \"getByIndex\", { name: \"bookId\", value: this.bookId }).then(\r\n        (response) => {\r\n          if (!response) {\r\n            const newBook = {\r\n              bookId: this.bookId,\r\n              bookName: this.bookName,\r\n              chapterList: JSON.stringify(this.chapterList),\r\n            }\r\n            const newBrief = {\r\n              bookId: this.bookId,\r\n              bookName: this.bookName,\r\n            }\r\n            dbOperation(\"book\", \"add\", newBook)\r\n            dbOperation(\"brief\", \"add\", newBrief)\r\n            this.bookList.push(newBrief)\r\n          } else {\r\n            this.$message({ message: \"选择的书已在列表中\", type: \"info\", duration: 1000 })\r\n          }\r\n        }\r\n      )\r\n    },\r\n\r\n    //阅读文章\r\n    readArticle(row) {\r\n      // this.articleData = row\r\n      this.$refs.reader.turnLocked = true //翻页动画锁定\r\n      // this.$refs.reader.currentPage = 0\r\n      this.inReader = !this.inReader\r\n      this.$nextTick(() => {\r\n        if (row) {\r\n          this.$refs.reader.currentChapter = row.id\r\n        }\r\n      })\r\n      setTimeout(() => {\r\n        this.$refs.reader.turnLocked = false //翻页动画打开\r\n      }, 100)\r\n    },\r\n    readBook(item) {\r\n      dbOperation(\"book\", \"getByIndex\", { name: \"bookId\", value: item.bookId }).then((response) => {\r\n        if (response) {\r\n          this.bookId = item.bookId\r\n          this.bookName = response.bookName\r\n          this.chapterList = JSON.parse(response.chapterList)\r\n          this.listPagination.pageIndex = 1 //重置到列表第一页\r\n          this.getList() //生成列表\r\n          this.$refs.reader.turnLocked = true //翻页动画锁定\r\n          this.inReader = !this.inReader\r\n          setTimeout(() => {\r\n            this.$refs.reader.turnLocked = false //翻页动画打开\r\n          }, 100)\r\n        }\r\n      })\r\n    },\r\n    showCatalog(item, val = true) {\r\n      this.catalogVisible = val\r\n      if (val) {\r\n        dbOperation(\"book\", \"getByIndex\", { name: \"bookId\", value: item.bookId }).then(\r\n          (response) => {\r\n            if (response) {\r\n              this.bookId = item.bookId\r\n              this.bookName = response.bookName\r\n              this.chapterList = JSON.parse(response.chapterList)\r\n              this.listPagination.pageIndex = 1 //重置到列表第一页\r\n              this.getList() //生成列表\r\n            }\r\n          }\r\n        )\r\n      }\r\n    },\r\n    deleteBook(item, index) {\r\n      dbOperation(\"brief\", \"getByIndex\", { name: \"bookId\", value: item.bookId }).then(\r\n        (response) => {\r\n          //刚添加的书没有id，获取数据库自动生成的id后再执行删除\r\n          dbOperation(\"brief\", \"delete\", response.id)\r\n          dbOperation(\"book\", \"delete\", response.id).then(() => {\r\n            this.bookList.splice(index, 1)\r\n          })\r\n        }\r\n      )\r\n    },\r\n\r\n    //选了文件\r\n    onChange() {\r\n      this.$refs.upload.abort() //取消上传请求\r\n      this.$refs.upload.clearFiles() //清空已上传的文件列表\r\n      var event = event || window.event\r\n      var file = event.target.files[0]\r\n      // var file = this.fileList[0]\r\n      this.file = file\r\n      this.bookName = file.name.split(\".\").slice(0, -1).join(\".\")\r\n      this.bookId = this.encode(this.bookName)\r\n      this.beforeAnalysis(file)\r\n\r\n      var reader = new FileReader()\r\n      reader.onload = (e) => {\r\n        const content = e.target.result\r\n        // 使用FileReader以utf-8格式读取文件，根据文件内容是否包含乱码字符�，来判断文件是否为utf-8。\r\n        // 如果存在�，即文件编码非utf-8，反之为utf-8。\r\n        if (content.indexOf(\"�\") === -1) {\r\n          // console.log(\"UTF-8 , getChapters start\")\r\n          this.bookText = content\r\n          this.getChapters()\r\n        } else {\r\n          // console.log(\"Not UTF-8, readAsText gb2312\")\r\n          reader.readAsText(file, \"gb2312\")\r\n        }\r\n      }\r\n      reader.readAsText(file) //默认编码UTF-8\r\n    },\r\n    beforeAnalysis(file) {\r\n      const isTxt = file.type == \"text/plain\"\r\n      const isLimit50M = file.size / 1024 / 1024 < 50\r\n      // console.log(file.type)\r\n      if (!isTxt) {\r\n        this.$message.error(\"选择的文件只能是 txt 格式!\")\r\n      }\r\n      if (!isLimit50M) {\r\n        this.$message.error(\"选择的文件大小不能超过 50MB!\")\r\n      }\r\n      return isTxt && isLimit50M\r\n    },\r\n    //字符串转base64\r\n    encode(str) {\r\n      let encode = encodeURI(str) // 对字符串进行编码\r\n      let base64 = btoa(encode) // 对编码的字符串转化base64\r\n      // console.log(encode)\r\n      // console.log(base64)\r\n      return base64\r\n    },\r\n    //改变模式（列表或阅读）\r\n    changeMode() {\r\n      this.inReader = !this.inReader\r\n    },\r\n    //获取列表数据\r\n    getList() {\r\n      this.list = [] //清空\r\n      this.total = this.chapterList.length\r\n      const index = this.listPagination.pageIndex\r\n      const size = this.listPagination.pageSize\r\n      if (this.isAsc) {\r\n        const start = (index - 1) * size\r\n        const end = start + size\r\n        for (let i = start; i < end && i < this.total; i++) {\r\n          this.list.push({\r\n            id: this.chapterList[i].id,\r\n            title: this.chapterList[i].title,\r\n          })\r\n        }\r\n      } else {\r\n        const start = this.total - 1 - (index - 1) * size\r\n        const end = start - size\r\n        for (let i = start; i > end && i >= 0; i--) {\r\n          this.list.push({\r\n            id: this.chapterList[i].id,\r\n            title: this.chapterList[i].title,\r\n          })\r\n        }\r\n      }\r\n    },\r\n    sortChange() {\r\n      this.isAsc = !this.isAsc\r\n      this.getList()\r\n      this.listPagination.pageIndex = 1\r\n    },\r\n    goBack() {\r\n      //\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.el-card {\r\n  &:hover {\r\n    box-shadow: 0 0 20px 10px rgb(150 150 150 / 30%);\r\n  }\r\n}\r\n\r\n.time {\r\n  font-size: 12px;\r\n  color: #999;\r\n}\r\n\r\n.bottom {\r\n  margin-top: 10px;\r\n  line-height: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.button {\r\n  padding: 5px 10px;\r\n  min-height: auto;\r\n}\r\n\r\n.image {\r\n  width: 100%;\r\n  display: block;\r\n}\r\n</style>\r\n","import { render } from \"./BookList.vue?vue&type=template&id=2d20f6a5\"\nimport script from \"./BookList.vue?vue&type=script&lang=js\"\nexport * from \"./BookList.vue?vue&type=script&lang=js\"\n\nimport \"./BookList.vue?vue&type=style&index=0&id=2d20f6a5&lang=scss\"\n\nimport exportComponent from \"D:\\\\WorkSpace\\\\Dev\\\\Projects\\\\YunAdmin\\\\YunAdmin.Web\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["db","dbInit","dbName","dbVersion","stores","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","event","target","result","onupgradeneeded","forEach","item","objectStoreNames","contains","storeName","objectStore","createObjectStore","keyPath","idName","autoIncrement","createIndex","indexName","propName","unique","onerror","err","async","dbOperation","store","method","data","methodList","includes","Error","toString","readType","transaction","alert","name","add","get","getAll","put","delete","index","value","res","class","style","_createElementVNode","src","_createElementBlock","_createVNode","_component_el_upload","$data","$event","ref","action","drag","$options","tip","_hoisted_4","_component_el_icon","_component_upload_filled","_hoisted_3","_hoisted_5","_component_el_row","gutter","_Fragment","_renderList","_createBlock","_component_el_col","key","span","_component_el_card","padding","height","_hoisted_6","onClick","bookName","_hoisted_8","_component_el_button","text","_hoisted_12","_component_el_page_header","icon","onBack","title","_toDisplayString","content","_hoisted_18","_component_el_table","border","onSortChange","_component_el_table_column","label","width","align","props","$index","pageIndex","pageSize","prop","minWidth","row","_hoisted_19","type","size","_component_pagination","total","autoScroll","page","limit","onPagination","_component_YunReader","changeMode","inReader","bookId","articleData","chapterList","components","Pagination","YunReader","fileList","file","bookList","bookText","listPagination","sort","sortType","tableKey","list","isAsc","catalogVisible","mounted","then","response","console","log","this","methods","extractTitles","str","reg","match","push","i","length","replace","getChapters","timeStart","performance","now","debug","regex","paraList","replaceAll","split","map","trim","filter","start","chapters","titles","test","slice","endChapter","id","updateBookList","timeEnd","$message","message","duration","newBook","JSON","stringify","newBrief","readArticle","$refs","reader","turnLocked","$nextTick","currentChapter","setTimeout","readBook","parse","getList","showCatalog","val","deleteBook","splice","onChange","upload","abort","clearFiles","files","join","encode","beforeAnalysis","FileReader","onload","e","indexOf","readAsText","isTxt","isLimit50M","error","encodeURI","base64","btoa","end","sortChange","goBack","__exports__","render"],"sourceRoot":""}
{"version":3,"file":"js/674.b0ac1ba7.js","mappings":"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","sources":["webpack://yun-admin/./src/components/Pagination/index.vue","webpack://yun-admin/./src/utils/scroll-to.js","webpack://yun-admin/./src/components/Pagination/index.vue?4b83","webpack://yun-admin/./src/components/YunReader/YunReader.vue","webpack://yun-admin/./src/components/YunReader/mixins/SettingConstants.js","webpack://yun-admin/./src/components/YunReader/mixins/RepageHandler.js","webpack://yun-admin/./src/components/YunReader/mixins/SpeechHandler.js","webpack://yun-admin/./src/components/YunReader/YunReader.vue?6e3f"],"sourcesContent":["<template>\n  <div :class=\"{ hidden: hidden }\" class=\"pagination-container\">\n    <el-pagination\n      :background=\"background\"\n      v-model:current-page=\"currentPage\"\n      v-model:page-size=\"pageSize\"\n      :layout=\"layout\"\n      :page-sizes=\"pageSizes\"\n      :total=\"total\"\n      v-bind=\"$attrs\"\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n    />\n  </div>\n</template>\n\n<script>\nimport { scrollTo } from \"@/utils/scroll-to\"\n\nexport default {\n  name: \"Pagination\",\n  props: {\n    total: {\n      required: true,\n      type: Number,\n    },\n    page: {\n      type: Number,\n      default: 1,\n    },\n    limit: {\n      type: Number,\n      default: 20,\n    },\n    pageSizes: {\n      type: Array,\n      default() {\n        return [10, 20, 30, 50]\n      },\n    },\n    layout: {\n      type: String,\n      default: \"total, sizes, prev, pager, next, jumper\",\n    },\n    background: {\n      type: Boolean,\n      default: true,\n    },\n    autoScroll: {\n      type: Boolean,\n      default: true,\n    },\n    hidden: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    currentPage: {\n      get() {\n        return this.page\n      },\n      set(val) {\n        this.$emit(\"update:page\", val)\n      },\n    },\n    pageSize: {\n      get() {\n        return this.limit\n      },\n      set(val) {\n        this.$emit(\"update:limit\", val)\n      },\n    },\n  },\n  methods: {\n    handleSizeChange(val) {\n      this.$emit(\"pagination\", { page: this.currentPage, limit: val })\n      if (this.autoScroll) {\n        scrollTo(0, 800)\n      }\n    },\n    handleCurrentChange(val) {\n      this.$emit(\"pagination\", { page: val, limit: this.pageSize })\n      if (this.autoScroll) {\n        scrollTo(0, 800)\n      }\n    },\n  },\n}\n</script>\n\n<style scoped>\n.pagination-container {\n  background: #fff;\n  padding: 32px 16px;\n}\n.pagination-container.hidden {\n  display: none;\n}\n</style>\n","Math.easeInOutQuad = function (t, b, c, d) {\n  t /= d / 2\n  if (t < 1) {\n    return (c / 2) * t * t + b\n  }\n  t--\n  return (-c / 2) * (t * (t - 2) - 1) + b\n}\n\n// requestAnimationFrame for Smart Animating http://goo.gl/sx5sts\nvar requestAnimFrame = (function () {\n  return (\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    function (callback) {\n      window.setTimeout(callback, 1000 / 60)\n    }\n  )\n})()\n\n/**\n * Because it's so fucking difficult to detect the scrolling element, just move them all\n * @param {number} amount\n */\nfunction move(amount) {\n  document.documentElement.scrollTop = amount\n  document.body.parentNode.scrollTop = amount\n  document.body.scrollTop = amount\n}\n\nfunction position() {\n  return (\n    document.documentElement.scrollTop ||\n    document.body.parentNode.scrollTop ||\n    document.body.scrollTop\n  )\n}\n\n/**\n * @param {number} to\n * @param {number} duration\n * @param {Function} callback\n */\nexport function scrollTo(to, duration, callback) {\n  const start = position()\n  const change = to - start\n  const increment = 20\n  let currentTime = 0\n  duration = typeof duration === \"undefined\" ? 500 : duration\n  var animateScroll = function () {\n    // increment the time\n    currentTime += increment\n    // find the value with the quadratic in-out easing function\n    var val = Math.easeInOutQuad(currentTime, start, change, duration)\n    // move the document.body\n    move(val)\n    // do the animation unless its over\n    if (currentTime < duration) {\n      requestAnimFrame(animateScroll)\n    } else {\n      if (callback && typeof callback === \"function\") {\n        // the animation is done so lets callback\n        callback()\n      }\n    }\n  }\n  animateScroll()\n}\n","import { render } from \"./index.vue?vue&type=template&id=15ef1945&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=15ef1945&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\WorkSpace\\\\Dev\\\\Projects\\\\YunAdmin\\\\YunAdmin.Web\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-15ef1945\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <!-- 阅读器 -->\r\n    <div\r\n      class=\"reader-container\"\r\n      :style=\"{\r\n        width: pageWidth + 20 + 'px',\r\n        backgroundColor: colorSettings.borderColor,\r\n        '--page-text-color': colorSettings.textColor,\r\n        '--page-bg-color': colorSettings.bgColor,\r\n        '--page-border-color': colorSettings.borderColor,\r\n      }\"\r\n      @mousewheel=\"wheelHandle\"\r\n    >\r\n      <!-- ////////// 头部 ////////// -->\r\n      <div class=\"reader-head\">\r\n        <span class=\"header-text\">{{ getTitle() }}</span>\r\n      </div>\r\n\r\n      <!-- ////////// 目录 ////////// -->\r\n      <transition name=\"catalogFade\">\r\n        <!-- 目录窗体容器 -->\r\n        <div\r\n          v-show=\"catalogVisible\"\r\n          class=\"catalog-container\"\r\n          :style=\"{\r\n            'user-select': 'none',\r\n            height: pageHeight + 'px',\r\n            width: getCatalogWidth() + 'px',\r\n          }\"\r\n        >\r\n          <!-- 目录标题栏 -->\r\n          <div style=\"margin: 10px 0 0 10px; height: 40px\">\r\n            <!-- 返回图标 -->\r\n            <el-icon class=\"catalog-button\" :size=\"24\" @click=\"closeCatalog\"><Back /></el-icon>\r\n            <!-- 标题文字 -->\r\n            <span class=\"catalog-title\" :style=\"'width:' + (getCatalogWidth() - 70) + 'px;'\">\r\n              {{ bookName }}\r\n            </span>\r\n            <!-- 书籍图标 -->\r\n            <!-- <el-icon :size=\"26\"><Notebook /></el-icon> -->\r\n          </div>\r\n          <!-- Tabs -->\r\n          <el-tabs class=\"catalog-tabs\" tab-position=\"bottom\" :stretch=\"true\">\r\n            <!-- tab-pane 目录 -->\r\n            <el-tab-pane>\r\n              <template #label>\r\n                <span class=\"custom-tabs-label\">\r\n                  <el-icon :style=\"'top:2px;font-size:16px'\"><calendar /></el-icon>\r\n                  <span :style=\"'margin-left:4px;font-size:18px'\">目录</span>\r\n                </span>\r\n              </template>\r\n              <!-- 章节列表 -->\r\n              <div ref=\"catalogPane\" :style=\"'overflow: auto; height:' + (pageHeight - 120) + 'px'\">\r\n                <div :style=\"{ height: catalogBeforeHeight + 'px' }\"></div>\r\n                <div\r\n                  v-for=\"(item, index) in chapterListRendered\"\r\n                  :key=\"index\"\r\n                  class=\"catalog-item\"\r\n                  :style=\"\r\n                    'font-weight:' +\r\n                    (item.id === currentChapter ? 'bold' : 'normal') +\r\n                    ';color:' +\r\n                    (item.id === currentChapter ? '#990066' : '#252525')\r\n                  \"\r\n                  @click=\"selectChapter(item.id)\"\r\n                >\r\n                  {{ item.title }}\r\n                </div>\r\n                <div :style=\"{ height: catalogAfterHeight + 'px' }\"></div>\r\n              </div>\r\n              <!-- {{ (\"000\" + item.id).substr(-4) }}&nbsp;-&nbsp;{{ item.title }} -->\r\n            </el-tab-pane>\r\n            <!-- tab-pane 书签 -->\r\n            <el-tab-pane>\r\n              <template #label>\r\n                <span class=\"custom-tabs-label\">\r\n                  <el-icon :style=\"'top:2px;font-size:16px'\"><CollectionTag /></el-icon>\r\n                  <span :style=\"'margin-left:4px;font-size:18px'\">书签</span>\r\n                </span>\r\n              </template>\r\n              <!-- 书签列表 -->\r\n              <div :style=\"'overflow: auto; height:' + (pageHeight - 120) + 'px'\">\r\n                <div\r\n                  v-if=\"!bookmarks.length\"\r\n                  style=\"color: #777777; text-align: center; margin-top: 20px\"\r\n                >\r\n                  暂时没有书签\r\n                </div>\r\n                <div\r\n                  v-for=\"(item, index) in bookmarks\"\r\n                  :key=\"index\"\r\n                  class=\"bookmark-item\"\r\n                  @click=\"jumpToBookmark(index)\"\r\n                >\r\n                  <div class=\"bookmark-item-title\">\r\n                    <span :style=\"'width:' + (getCatalogWidth() - 70) + 'px;'\">{{\r\n                      chapterList[item.chapter].title\r\n                    }}</span>\r\n                    <el-icon\r\n                      class=\"link-type\"\r\n                      style=\"float: right; margin-right: 20px\"\r\n                      :size=\"18\"\r\n                      @click.stop=\"deleteBookmark(index)\"\r\n                      ><Remove\r\n                    /></el-icon>\r\n                  </div>\r\n                  <div class=\"bookmark-item-small-text\">\r\n                    <!-- <el-icon :size=\"14\" style=\"top: 2px\"><Timer /></el-icon> -->\r\n                    <span>{{ item.time }}&emsp;</span>\r\n                    <!-- <svg-icon icon-class=\"list\" style=\"font-size: 10px\" />&nbsp; -->\r\n                    <span>{{ item.chapter + \" / \" + chapterList.length }}</span>\r\n                  </div>\r\n                  <div class=\"bookmark-item-preview\">{{ getBookmarkPreview(index) }}</div>\r\n                </div>\r\n              </div>\r\n            </el-tab-pane>\r\n            <!-- tab-pane 笔记 -->\r\n            <el-tab-pane>\r\n              <template #label>\r\n                <span class=\"custom-tabs-label\">\r\n                  <el-icon :style=\"'top:2px;font-size:16px'\"><Edit /></el-icon>\r\n                  <span :style=\"'margin-left:4px;font-size:18px'\">笔记</span>\r\n                </span>\r\n              </template>\r\n              <div :style=\"'overflow: auto; height:' + (pageHeight - 120) + 'px'\">\r\n                <div\r\n                  v-if=\"!notes.length\"\r\n                  style=\"color: #777777; text-align: center; margin-top: 20px\"\r\n                >\r\n                  暂时没有笔记\r\n                </div>\r\n                <div\r\n                  v-for=\"(item, index) in notes\"\r\n                  :key=\"index\"\r\n                  class=\"bookmark-item\"\r\n                  @click=\"jumpToNote(index)\"\r\n                >\r\n                  <div class=\"bookmark-item-title\">\r\n                    <span :style=\"'width:' + (getCatalogWidth() - 70) + 'px;'\">{{\r\n                      \"评述：\" + (item.remark === \"\" ? \"(空)\" : item.remark)\r\n                    }}</span>\r\n                    <el-icon\r\n                      class=\"link-type\"\r\n                      style=\"float: right; margin-right: 20px\"\r\n                      :size=\"18\"\r\n                      @click.stop=\"deleteNote(index)\"\r\n                      ><Remove\r\n                    /></el-icon>\r\n                  </div>\r\n                  <div class=\"bookmark-item-small-text\">\r\n                    <span>{{ item.time }}&emsp;</span>\r\n                    <span>{{ limitText(chapterList[item.chapter].title, 22) }}</span>\r\n                  </div>\r\n                  <div class=\"bookmark-item-preview\">\r\n                    <span :style=\"'background-color:' + item.color\">{{\r\n                      getNotePreview(index)\r\n                    }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n        </div>\r\n      </transition>\r\n\r\n      <!-- ////////// 页面按钮容器 ////////// -->\r\n      <div\r\n        class=\"body-button-container\"\r\n        :style=\"'width: ' + pageWidth + 'px;visibility:' + (catalogVisible ? 'hidden' : 'inherit')\"\r\n      >\r\n        <!-- 返回 -->\r\n        <span class=\"body-button goback\" @click=\"handleGoBack\">\r\n          <el-icon class=\"body-button-icon\" :size=\"32\"><Back /></el-icon>\r\n        </span>\r\n        <!-- 目录 -->\r\n        <span\r\n          class=\"body-button catalog\"\r\n          :style=\"'bottom: ' + -pageHeight + 'px'\"\r\n          @click=\"openCatalog\"\r\n        >\r\n          <el-icon class=\"body-button-icon\" :size=\"32\"><List /></el-icon>\r\n        </span>\r\n        <!-- 上一章 -->\r\n        <span\r\n          class=\"body-button prevchapter\"\r\n          :style=\"'left: ' + pageWidth / 3 + 'px'\"\r\n          @click=\"handleDebounce(prevChapter)\"\r\n        >\r\n          <el-icon class=\"body-button-icon\" :size=\"32\"><CaretLeft /></el-icon>\r\n        </span>\r\n        <!-- 下一章 -->\r\n        <span\r\n          class=\"body-button nextchapter\"\r\n          :style=\"'left: ' + (pageWidth * 2) / 3 + 'px'\"\r\n          @click=\"handleDebounce(nextChapter)\"\r\n        >\r\n          <el-icon class=\"body-button-icon\" :size=\"32\"><CaretRight /></el-icon>\r\n        </span>\r\n        <!-- 上一页 -->\r\n        <span\r\n          class=\"body-button prevpage\"\r\n          :style=\"'top: ' + pageHeight / 2 + 'px'\"\r\n          @click=\"handleDebounce(prevPage)\"\r\n          @dblclick=\"handleDebounce(firstPage, 50)\"\r\n        >\r\n          <el-icon class=\"body-button-icon\" :size=\"32\"><ArrowLeftBold /></el-icon>\r\n        </span>\r\n        <!-- 下一页 -->\r\n        <span\r\n          class=\"body-button nextpage\"\r\n          :style=\"'top: ' + pageHeight / 2 + 'px'\"\r\n          @click=\"handleDebounce(nextPage)\"\r\n          @dblclick=\"handleDebounce(lastPage, 50)\"\r\n        >\r\n          <el-icon class=\"body-button-icon\" :size=\"32\"><ArrowRightBold /></el-icon>\r\n        </span>\r\n        <!-- 语音朗读 气泡卡片 -->\r\n        <el-popover\r\n          :visible=\"voiceVisible\"\r\n          placement=\"top-end\"\r\n          :show-arrow=\"false\"\r\n          :width=\"popoverWidth\"\r\n        >\r\n          <div style=\"margin: 10px 10px; user-select: none\">\r\n            <div>\r\n              <span style=\"margin-right: 15px\">发音</span>\r\n              <el-select\r\n                v-model=\"voiceIndex\"\r\n                placeholder=\"请选择\"\r\n                no-match-text=\"默认\"\r\n                style=\"width: 252px\"\r\n                @change=\"changeVoice()\"\r\n              >\r\n                <el-option\r\n                  v-for=\"(item, index) in voiceList\"\r\n                  :key=\"index\"\r\n                  :label=\"voiceNameFormat(item)\"\r\n                  :value=\"index\"\r\n                >\r\n                  <span\r\n                    style=\"\r\n                      width: 280px;\r\n                      float: right;\r\n                      color: var(--el-text-color-secondary);\r\n                      font-size: 14px;\r\n                    \"\r\n                    >{{ index + 1 + \" - \" + voiceNameFormat(item) }}</span\r\n                  >\r\n                </el-option>\r\n              </el-select>\r\n            </div>\r\n            <div style=\"margin-top: 20px\">\r\n              <span>语速</span>\r\n              <el-slider\r\n                v-model=\"speechOptions.rate\"\r\n                :min=\"0.1\"\r\n                :max=\"3\"\r\n                :step=\"0.1\"\r\n                show-input\r\n                class=\"setting-slider\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <span>音量</span>\r\n              <el-slider\r\n                v-model=\"speechOptions.volume\"\r\n                :min=\"0\"\r\n                :max=\"1\"\r\n                :step=\"0.05\"\r\n                show-input\r\n                class=\"setting-slider\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <span>音调</span>\r\n              <el-slider\r\n                v-model=\"speechOptions.pitch\"\r\n                :min=\"0\"\r\n                :max=\"2\"\r\n                :step=\"0.1\"\r\n                show-input\r\n                class=\"setting-slider\"\r\n              />\r\n            </div>\r\n            <el-divider border-style=\"dashed\" style=\"margin: 10px 0\"></el-divider>\r\n            <div>\r\n              <span>{{ \"定时 ( \" + speechTimeLeft + \" 分钟 )\" }} </span>\r\n              <el-slider\r\n                v-model=\"speechTimeLeft\"\r\n                show-stops\r\n                :min=\"0\"\r\n                :max=\"120\"\r\n                :step=\"10\"\r\n                class=\"setting-slider\"\r\n              />\r\n              <span style=\"margin-right: 20px\">开关</span>\r\n              <el-switch :disabled=\"!isSpeaking\" v-model=\"timedSpeechOpen\" @change=\"timedSpeech\" />\r\n            </div>\r\n            <el-divider border-style=\"dashed\" style=\"margin: 5px 0\"></el-divider>\r\n            <div style=\"margin-top: 20px\">\r\n              <!-- <span style=\"margin-right: 10px\">控制</span> -->\r\n              <el-button type=\"primary\" plain round @click=\"speechStart(0)\">开始</el-button>\r\n              <el-button type=\"primary\" plain round @click=\"speechResume\">继续</el-button>\r\n              <el-button type=\"primary\" plain round @click=\"speechPause\">暂停</el-button>\r\n              <el-button type=\"primary\" plain round @click=\"speechStop\">停止</el-button>\r\n            </div>\r\n          </div>\r\n          <template #reference>\r\n            <span\r\n              class=\"body-button voice\"\r\n              :style=\"'bottom: ' + -pageHeight + 'px'\"\r\n              @click=\"openVoice\"\r\n            >\r\n              <el-icon class=\"body-button-icon\" :size=\"32\"><VideoPlay /></el-icon>\r\n            </span>\r\n          </template>\r\n        </el-popover>\r\n        <!-- 设置 气泡卡片 -->\r\n        <el-popover\r\n          :visible=\"settingsVisible\"\r\n          popper-class=\"popover-settings\"\r\n          placement=\"bottom-end\"\r\n          :width=\"popoverWidth\"\r\n        >\r\n          <!-- 选项卡 -->\r\n          <el-tabs type=\"border-card\" style=\"min-height: 510px; user-select: none\">\r\n            <!-- 排版 -->\r\n            <el-tab-pane label=\"排版\">\r\n              <span>字号</span>\r\n              <el-slider\r\n                v-model=\"sizeSettings.fontSize\"\r\n                :min=\"12\"\r\n                :max=\"48\"\r\n                :step=\"1\"\r\n                show-input\r\n                class=\"setting-slider\"\r\n              />\r\n              <span>行间距</span>\r\n              <el-slider\r\n                v-model=\"sizeSettings.lineHeight\"\r\n                :min=\"1\"\r\n                :max=\"2\"\r\n                :step=\"0.1\"\r\n                show-input\r\n                class=\"setting-slider\"\r\n              />\r\n              <span>段间距</span>\r\n              <el-slider\r\n                v-model=\"sizeSettings.paraSpace\"\r\n                :min=\"0\"\r\n                :max=\"1\"\r\n                :step=\"0.1\"\r\n                show-input\r\n                class=\"setting-slider\"\r\n              />\r\n              <span>标题放大</span>\r\n              <el-slider\r\n                v-model=\"sizeSettings.titleScale\"\r\n                :min=\"1\"\r\n                :max=\"3\"\r\n                :step=\"0.1\"\r\n                show-input\r\n                class=\"setting-slider\"\r\n              />\r\n              <el-divider border-style=\"dashed\" style=\"margin: 10px 0\" />\r\n              <span>上边距</span>\r\n              <el-slider\r\n                v-model=\"sizeSettings.paddingTop\"\r\n                :min=\"0\"\r\n                :max=\"40\"\r\n                :step=\"2\"\r\n                show-input\r\n                class=\"setting-slider\"\r\n              />\r\n              <span>下边距</span>\r\n              <el-slider\r\n                v-model=\"sizeSettings.paddingBottom\"\r\n                :min=\"0\"\r\n                :max=\"40\"\r\n                :step=\"2\"\r\n                show-input\r\n                class=\"setting-slider\"\r\n              />\r\n              <span>侧边距</span>\r\n              <el-slider\r\n                v-model=\"sizeSettings.paddingLR\"\r\n                :min=\"0\"\r\n                :max=\"40\"\r\n                :step=\"2\"\r\n                show-input\r\n                class=\"setting-slider\"\r\n              />\r\n              <span>阅读器宽度</span>\r\n              <el-slider\r\n                v-model=\"sizeSettings.widthPercent\"\r\n                :min=\"20\"\r\n                :max=\"80\"\r\n                :step=\"5\"\r\n                show-input\r\n                class=\"setting-slider\"\r\n              />\r\n            </el-tab-pane>\r\n            <!-- 字体 -->\r\n            <el-tab-pane label=\"字体\">\r\n              <div>\r\n                <div style=\"margin-bottom: 10px\">字体</div>\r\n                <div\r\n                  style=\"margin: 2px 2px; display: inline-block\"\r\n                  v-for=\"(item, index) in fonts\"\r\n                  :key=\"index\"\r\n                >\r\n                  <el-button\r\n                    :type=\"sizeSettings.fontFamily === item ? 'primary' : 'default'\"\r\n                    @click=\"sizeSettings.fontFamily = item\"\r\n                    >{{ item }}</el-button\r\n                  >\r\n                </div>\r\n                <div style=\"margin-top: 15px\">预览效果</div>\r\n                <div\r\n                  :style=\"{\r\n                    'font-family': sizeSettings.fontFamily,\r\n                    margin: '5px 0',\r\n                    'text-align': 'center',\r\n                  }\"\r\n                >\r\n                  <div style=\"font-size: 30px\">Hello 这是预览</div>\r\n                  <div style=\"font-size: 24px\">Hello 这是预览</div>\r\n                  <div style=\"font-size: 18px\">Hello 这是预览</div>\r\n                </div>\r\n              </div>\r\n            </el-tab-pane>\r\n            <!-- 颜色 -->\r\n            <el-tab-pane label=\"颜色\">\r\n              <div class=\"theme-setbar\">\r\n                <span style=\"margin-right: 10px\">主题</span>\r\n                <div style=\"float: right\">\r\n                  <template\r\n                    v-for=\"(i, index) in [\r\n                      [0, 0],\r\n                      [0, 1],\r\n                      [0, 2],\r\n                      [5, 4],\r\n                      [3, 8],\r\n                      [0, 5],\r\n                      [2, 9],\r\n                      [7, 8],\r\n                    ]\"\r\n                    :key=\"index\"\r\n                  >\r\n                    <span\r\n                      class=\"text-button\"\r\n                      :style=\"'color:' + textColors[i[0]] + ';background-color:' + bgColors[i[1]]\"\r\n                      @click=\"\r\n                        ;(colorSettings.textColor = textColors[i[0]]),\r\n                          (colorSettings.bgColor = bgColors[i[1]])\r\n                      \"\r\n                      >主题{{ index + 1 }}</span\r\n                    >\r\n                    <br v-if=\"index === 3\" /><br v-if=\"index === 3\" />\r\n                  </template>\r\n                </div>\r\n              </div>\r\n              <el-divider border-style=\"dashed\"></el-divider>\r\n              <div>\r\n                <span style=\"margin-right: 10px\">纹理</span>\r\n                <div style=\"float: right\">\r\n                  <span\r\n                    v-for=\"(item, index) in bgTextures\"\r\n                    :key=\"index\"\r\n                    class=\"text-button\"\r\n                    :style=\"{\r\n                      'margin-right': '5px',\r\n                      background: 'url(' + item + ')',\r\n                    }\"\r\n                    @click=\"colorSettings.bgColor = 'url(' + item + ')'\"\r\n                    >&emsp;&ensp;</span\r\n                  >\r\n                </div>\r\n              </div>\r\n              <el-divider border-style=\"dashed\"></el-divider>\r\n              <div class=\"color-setbar\" style=\"clear: right\">\r\n                <span>文字</span\r\n                ><el-color-picker\r\n                  v-model=\"colorSettings.textColor\"\r\n                  show-alpha\r\n                  :predefine=\"predefineColors\"\r\n                />\r\n                <div style=\"float: right; width: 180px; line-height: 30px\">\r\n                  <div>\r\n                    <el-button\r\n                      v-for=\"(item, index) in textColors.slice(0, 5)\"\r\n                      :key=\"index\"\r\n                      size=\"small\"\r\n                      :color=\"item\"\r\n                      @click=\"colorSettings.textColor = item\"\r\n                      class=\"color-button\"\r\n                    ></el-button>\r\n                  </div>\r\n                  <div>\r\n                    <el-button\r\n                      v-for=\"(item, index) in textColors.slice(5, 10)\"\r\n                      :key=\"index\"\r\n                      size=\"small\"\r\n                      :color=\"item\"\r\n                      @click=\"colorSettings.textColor = item\"\r\n                      class=\"color-button\"\r\n                    ></el-button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"color-setbar\" style=\"clear: right\">\r\n                <span>背景</span\r\n                ><el-color-picker\r\n                  v-model=\"colorSettings.bgColor\"\r\n                  show-alpha\r\n                  :predefine=\"predefineColors\"\r\n                />\r\n                <div style=\"float: right; width: 180px; line-height: 30px\">\r\n                  <div>\r\n                    <el-button\r\n                      v-for=\"(item, index) in bgColors.slice(0, 5)\"\r\n                      :key=\"index\"\r\n                      size=\"small\"\r\n                      :color=\"item\"\r\n                      @click=\"colorSettings.bgColor = item\"\r\n                      class=\"color-button\"\r\n                    ></el-button>\r\n                  </div>\r\n                  <div>\r\n                    <el-button\r\n                      v-for=\"(item, index) in bgColors.slice(5, 10)\"\r\n                      :key=\"index\"\r\n                      size=\"small\"\r\n                      :color=\"item\"\r\n                      @click=\"colorSettings.bgColor = item\"\r\n                      class=\"color-button\"\r\n                    ></el-button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"color-setbar\" style=\"clear: right\">\r\n                <span>边框</span\r\n                ><el-color-picker\r\n                  v-model=\"colorSettings.borderColor\"\r\n                  show-alpha\r\n                  :predefine=\"predefineColors\"\r\n                />\r\n                <div style=\"float: right; width: 180px; line-height: 30px\">\r\n                  <div>\r\n                    <el-button\r\n                      v-for=\"(item, index) in bgColors.slice(0, 5)\"\r\n                      :key=\"index\"\r\n                      size=\"small\"\r\n                      :color=\"item\"\r\n                      @click=\"colorSettings.borderColor = item\"\r\n                      class=\"color-button\"\r\n                    ></el-button>\r\n                  </div>\r\n                  <div>\r\n                    <el-button\r\n                      v-for=\"(item, index) in bgColors.slice(5, 10)\"\r\n                      :key=\"index\"\r\n                      size=\"small\"\r\n                      :color=\"item\"\r\n                      @click=\"colorSettings.borderColor = item\"\r\n                      class=\"color-button\"\r\n                    ></el-button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </el-tab-pane>\r\n            <!-- 其他 -->\r\n            <el-tab-pane label=\"其他\">\r\n              <div style=\"margin-bottom: 10px\">\r\n                <div style=\"margin-bottom: 10px\">翻页效果</div>\r\n                <el-radio-group v-model=\"pageTurning\">\r\n                  <el-radio-button\r\n                    v-for=\"(item, index) in pageTurningModes\"\r\n                    :key=\"index\"\r\n                    :label=\"item\"\r\n                  />\r\n                </el-radio-group>\r\n                <div style=\"margin-top: 20px; margin-bottom: 10px\">默认设置</div>\r\n                <el-button @click=\"resetStyle\">恢复默认设置</el-button>\r\n              </div>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n          <template #reference>\r\n            <span class=\"body-button settings\" @click=\"openSettings\">\r\n              <el-icon class=\"body-button-icon\" :size=\"32\"><Tools /></el-icon>\r\n            </span>\r\n          </template>\r\n        </el-popover>\r\n        <!-- 搜索 气泡卡片 -->\r\n        <el-popover\r\n          :visible=\"searchVisible\"\r\n          popper-class=\"popover-search\"\r\n          placement=\"bottom\"\r\n          :show-arrow=\"false\"\r\n          :width=\"popoverWidth\"\r\n          :offset=\"-30\"\r\n          @hide=\"tempParaIndex = null\"\r\n        >\r\n          <div style=\"margin: 10px 10px; user-select: none\">\r\n            <div style=\"display: flex; justify-content: center\">\r\n              <el-button\r\n                style=\"margin: 0 10px; align-self: center\"\r\n                size=\"small\"\r\n                icon=\"ArrowLeftBold\"\r\n                round\r\n                @click=\"handleSearch(keywords, true)\"\r\n              ></el-button>\r\n              <!-- <div style=\"display: inline-block; text-align: center; width: 180px\"> -->\r\n              <el-input\r\n                v-model=\"keywords\"\r\n                placeholder=\"全文搜索\"\r\n                prefix-icon=\"Search\"\r\n                clearable\r\n                @keyup.enter=\"handleSearch(keywords)\"\r\n              ></el-input>\r\n              <!-- </div> -->\r\n              <el-button\r\n                style=\"margin: 0 10px; align-self: center\"\r\n                size=\"small\"\r\n                icon=\"ArrowRightBold\"\r\n                round\r\n                @click=\"handleSearch(keywords)\"\r\n              ></el-button>\r\n            </div>\r\n          </div>\r\n          <template #reference>\r\n            <span\r\n              class=\"body-button search\"\r\n              :style=\"'left: ' + pageWidth / 2 + 'px'\"\r\n              @click=\"openSearch\"\r\n            >\r\n              <el-icon class=\"body-button-icon\" :size=\"30\"><Search /></el-icon>\r\n            </span>\r\n          </template>\r\n        </el-popover>\r\n        <!-- 阅读进度 气泡卡片 -->\r\n        <el-popover\r\n          :visible=\"progressVisible\"\r\n          placement=\"top\"\r\n          :show-arrow=\"false\"\r\n          :width=\"popoverWidth\"\r\n          :offset=\"-30\"\r\n        >\r\n          <div style=\"margin: 5px 10px; user-select: none\">\r\n            <div style=\"text-align: center\">\r\n              <span style=\"color: var(--el-text-color-secondary)\">当前进度：{{ progress }}%</span>\r\n            </div>\r\n            <div style=\"margin: 0\">\r\n              <el-button\r\n                style=\"margin-right: 20px\"\r\n                size=\"small\"\r\n                icon=\"ArrowLeftBold\"\r\n                round\r\n                @click=\"handleDebounce(prevChapter)\"\r\n              ></el-button>\r\n              <div style=\"display: inline-block; text-align: center; width: 180px\">\r\n                <el-slider\r\n                  v-model=\"progress\"\r\n                  :min=\"0\"\r\n                  :max=\"100\"\r\n                  :step=\"0.1\"\r\n                  :show-tooltip=\"false\"\r\n                  @click=\"jumpTo(progress)\"\r\n                  @change=\"jumpTo\"\r\n                />\r\n              </div>\r\n              <el-button\r\n                style=\"margin-left: 20px\"\r\n                size=\"small\"\r\n                icon=\"ArrowRightBold\"\r\n                round\r\n                @click=\"handleDebounce(nextChapter)\"\r\n              ></el-button>\r\n            </div>\r\n            <div style=\"text-align: center; margin-top: 5px\">\r\n              <span class=\"link-type\" style=\"font-size: 16px\" @click=\"addBookmark\">\r\n                <el-icon :size=\"18\" style=\"top: 4px\"><CirclePlus /></el-icon>\r\n                添加书签\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <template #reference>\r\n            <span\r\n              class=\"body-button progress\"\r\n              :style=\"'left: ' + pageWidth / 2 + 'px;bottom: ' + -pageHeight + 'px'\"\r\n              @click=\"openProgress\"\r\n            >\r\n              <el-icon class=\"body-button-icon\" :size=\"32\"><Odometer /></el-icon>\r\n            </span>\r\n          </template>\r\n        </el-popover>\r\n        <!-- Home键 -->\r\n        <span\r\n          class=\"body-button home\"\r\n          :style=\"'left: ' + pageWidth / 2 + 'px;bottom: ' + -pageHeight + 'px;visibility:visible'\"\r\n          @click=\"closePopover\"\r\n        >\r\n          <!-- fullscreen('reader-container') -->\r\n        </span>\r\n        <!-- 弹出菜单 -->\r\n        <el-popover\r\n          :visible=\"menuVisible\"\r\n          popper-class=\"popover-menu\"\r\n          :show-arrow=\"false\"\r\n          :placement=\"menuPlacement\"\r\n          :width=\"195\"\r\n          :offset=\"0\"\r\n        >\r\n          <div style=\"user-select: none\">\r\n            <div class=\"popmenu-title\">\r\n              <span>{{ limitText(getCurrentParaText(), 8) }}</span>\r\n              <el-icon\r\n                class=\"link-type\"\r\n                style=\"float: right; margin-bottom: 10px\"\r\n                :size=\"18\"\r\n                @click=\"menuVisible = false\"\r\n                ><CloseBold\r\n              /></el-icon>\r\n            </div>\r\n            <div style=\"clear: both\">\r\n              <el-button\r\n                class=\"menu-button-short\"\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                plain\r\n                @click=\"speechStart(currentPara), closePopover()\"\r\n                >开始朗读</el-button\r\n              >\r\n              <el-button\r\n                class=\"menu-button-short\"\r\n                style=\"margin-left: 9px\"\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                plain\r\n                @click=\"speechResume(), closePopover()\"\r\n                >继续朗读</el-button\r\n              >\r\n              <el-button\r\n                class=\"menu-button-short\"\r\n                style=\"margin-left: 0\"\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                plain\r\n                @click=\"speechPause(), closePopover()\"\r\n                >暂停朗读</el-button\r\n              >\r\n              <el-button\r\n                class=\"menu-button-short\"\r\n                style=\"margin-left: 9px\"\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                plain\r\n                @click=\"speechStop(), closePopover()\"\r\n                >停止朗读</el-button\r\n              >\r\n            </div>\r\n            <el-divider border-style=\"dashed\" style=\"margin: 5px 0\"></el-divider>\r\n            <el-input\r\n              v-model=\"noteRemark\"\r\n              placeholder=\"输入评论\"\r\n              prefix-icon=\"Edit\"\r\n              clearable\r\n              type=\"textarea\"\r\n              style=\"margin: 5px 0\"\r\n              resize=\"none\"\r\n              :autosize=\"{ minRows: 1, maxRows: 3 }\"\r\n              :maxlength=\"500\"\r\n              @keyup.enter=\"addNote(currentPara, noteRemark, noteColor, true)\"\r\n            ></el-input>\r\n            <el-button\r\n              class=\"menu-button\"\r\n              size=\"small\"\r\n              type=\"primary\"\r\n              icon=\"Plus\"\r\n              plain\r\n              @click=\"addNote(currentPara, noteRemark, noteColor, true)\"\r\n              >{{ searchMarkedPara(currentPara) > -1 ? \"修改\" : \"添加\" }}笔记</el-button\r\n            >\r\n            <el-button\r\n              v-show=\"searchMarkedPara(currentPara) > -1\"\r\n              class=\"menu-button\"\r\n              style=\"margin-left: 0\"\r\n              size=\"small\"\r\n              type=\"primary\"\r\n              icon=\"Minus\"\r\n              plain\r\n              @click=\"handleDeleteNote(currentPara)\"\r\n              >删除笔记</el-button\r\n            >\r\n            <div style=\"line-height: 30px\">\r\n              <div>\r\n                <el-button\r\n                  v-for=\"(item, index) in markedColors.slice(0, 5)\"\r\n                  :key=\"index\"\r\n                  size=\"small\"\r\n                  :color=\"item\"\r\n                  @click=\"noteColor = item\"\r\n                  :style=\"{\r\n                    border: noteColor === item ? '1px dashed #222' : '1px solid #FFF',\r\n                  }\"\r\n                ></el-button>\r\n              </div>\r\n              <div>\r\n                <el-button\r\n                  v-for=\"(item, index) in markedColors.slice(5, 10)\"\r\n                  :key=\"index\"\r\n                  size=\"small\"\r\n                  :color=\"item\"\r\n                  @click=\"noteColor = item\"\r\n                  :style=\"{\r\n                    border: noteColor === item ? '1px dashed #222' : '1px solid #FFF',\r\n                  }\"\r\n                ></el-button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <template #reference>\r\n            <span\r\n              :style=\"{ position: 'absolute', left: menuOffsetX + 'px', top: menuOffsetY + 'px' }\"\r\n            ></span>\r\n          </template>\r\n        </el-popover>\r\n      </div>\r\n\r\n      <!-- ////////// 正文 ////////// -->\r\n      <div\r\n        class=\"reader-body\"\r\n        ref=\"readerBody\"\r\n        :style=\"{\r\n          'font-size': sizeSettings.fontSize + 'px',\r\n          'font-family': sizeSettings.fontFamily,\r\n          'line-height': sizeSettings.lineHeight,\r\n          'padding-top': sizeSettings.paddingTop + 'px',\r\n          'padding-bottom': sizeSettings.paddingBottom + 'px',\r\n          'padding-left': sizeSettings.paddingLR + 'px',\r\n          'padding-right': sizeSettings.paddingLR + 'px',\r\n          height: pageHeight + 'px',\r\n          color: colorSettings.textColor,\r\n          background: colorSettings.bgColor,\r\n          'background-position': Math.floor((currentPage / (pageList.length ?? 1)) * 100) + '%',\r\n          overflow: pageTurning === '滚动' ? 'auto' : 'visible',\r\n        }\"\r\n        @click=\"closePopover\"\r\n        @mousedown=\"handleMouseDown\"\r\n        @mouseup=\"handleMouseup\"\r\n      >\r\n        <!-- 开头段落（判断是否首行缩进） -->\r\n        <p\r\n          v-if=\"hasNoIndentPara()\"\r\n          class=\"main-para\"\r\n          :style=\"{\r\n            margin: sizeSettings.paraSpace * sizeSettings.fontSize + 'px 0',\r\n            'text-indent': 0,\r\n            color: getParaTextColor(0),\r\n            'background-color': getParaBgColor(0),\r\n            'text-shadow': getTextShadow(0),\r\n          }\"\r\n          @click=\"speechFromPara(0)\"\r\n          @mousedown=\"currentPara = 0\"\r\n        >\r\n          {{ noIndentPara }}\r\n        </p>\r\n        <!-- 正常段落 -->\r\n        <p\r\n          v-for=\"(item, index) in indentParas\"\r\n          :key=\"index\"\r\n          class=\"main-para\"\r\n          :style=\"{\r\n            margin: sizeSettings.paraSpace * sizeSettings.fontSize + 'px 0',\r\n            'font-size': getParaFontSize(index) + 'px',\r\n            'font-weight': index === 0 && currentPage === 0 ? 'bold' : 'normal',\r\n            color: hasNoIndentPara() ? getParaTextColor(index + 1) : getParaTextColor(index),\r\n            'background-color': hasNoIndentPara()\r\n              ? getParaBgColor(index + 1)\r\n              : getParaBgColor(index),\r\n            'text-shadow': hasNoIndentPara() ? getTextShadow(index + 1) : getTextShadow(index),\r\n          }\"\r\n          @click=\"speechFromPara(noIndentPara == '' ? index : index + 1)\"\r\n          @mousedown=\"currentPara = noIndentPara == '' ? index : index + 1\"\r\n        >\r\n          {{ item }}\r\n        </p>\r\n      </div>\r\n\r\n      <!-- ////////// 底部 ////////// -->\r\n      <div class=\"reader-foot\">\r\n        <span class=\"footer-text\" style=\"float: left; text-align: left; margin-left: 10px\"\r\n          >{{\r\n            device === \"desktop\"\r\n              ? currentChapter + 1 + \" / \" + (chapterList.length ?? 0) + \" 章&emsp;\"\r\n              : \"\"\r\n          }}{{ currentPage + 1 + \" / \" + (pageList.length ?? 0) + \" 页\" }}</span\r\n        >\r\n        <span\r\n          v-if=\"device === 'desktop'\"\r\n          class=\"footer-text\"\r\n          style=\"float: right; text-align: right; margin-right: 10px\"\r\n          >字数：{{ getPageWordNum() }}/{{ getTotalWordNum() }}</span\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useStore } from \"vuex\"\r\nimport ConstantsMixin from \"./mixins/SettingConstants\"\r\nimport RepageMixin from \"./mixins/RepageHandler\"\r\nimport SpeechMixin from \"./mixins/SpeechHandler\"\r\n\r\nexport default {\r\n  name: \"YunReader\",\r\n  props: [\"changeMode\", \"inReader\", \"bookId\", \"bookName\", \"articleData\", \"chapterList\"],\r\n  mixins: [ConstantsMixin, RepageMixin, SpeechMixin],\r\n  data() {\r\n    return {\r\n      store: useStore(),\r\n      screenWidth: document.body.clientWidth,\r\n      screenHeight: document.body.clientHeight,\r\n      pageWidth: 960, //页面宽度\r\n      pageHeight: 1020, //页面高度\r\n      textareaWidth: 720, //正文内容宽度\r\n      textareaHeight: 900, //正文内容高度\r\n      popoverWidth: 342, //气泡卡片宽度\r\n      pageTurning: \"拟真\", //翻页方式\r\n      sizeSettings: {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 24,\r\n        // fontWeight:'数值+px',\r\n        // fontStyle: 'italic',\r\n        lineHeight: 1.5, //行高（字高倍数）\r\n        paraSpace: 0.5, //段落间距（字高倍数）\r\n        titleScale: 2, //标题字体放大倍数\r\n        paddingTop: 20,\r\n        paddingBottom: 20,\r\n        paddingLR: 20,\r\n        widthPercent: 50,\r\n      },\r\n      colorSettings: {\r\n        textColor: this.textColors[0],\r\n        bgColor: this.bgColors[0],\r\n        borderColor: \"#FAFAFA\",\r\n      },\r\n      //文本内容\r\n      pageList: [], //当前章节分页数组\r\n      noIndent: [], //首段首行不缩进的页\r\n      currentChapter: 0, //当前章，默认为0\r\n      currentPage: 0, //当前页，默认为0\r\n      currentPara: 0, //当前段落(鼠标按下时所在的段落)，默认为0\r\n      //语音朗读位置\r\n      readingChapter: 0, //正在朗读的章，默认为0\r\n      readingPage: 0, //正在朗读的页，默认为0\r\n      readingPara: 0, //正在朗读的段落，默认为0\r\n      //书签笔记\r\n      bookmarks: [], //书签\r\n      lastPosition: { chapter: 0, para: 0 }, //最后阅读的位置（书签）\r\n      notes: [], //笔记\r\n      noteRemark: \"\", //笔记评论\r\n      noteColor: \"\", //笔记标记颜色\r\n      // remarkRows: 2, //笔记评论输入框的默认行数\r\n      //进度与搜索\r\n      progress: 0, //当前阅读进度（百分比）\r\n      keywords: \"\", //搜索文本关键词\r\n      tempParaIndex: null, //临时记录段落索引，用于文本连续搜索\r\n      tempStartIndex: -1, //临时记录关键词索引，用于文本连续搜索\r\n      //目录性能优化\r\n      catalogRenderMax: 100, //目录列表要渲染的数量\r\n      catalogScrollPercent: 0, //目录滚动的位置对应的索引\r\n      catalogBeforeHeight: 0, //目录渲染区之前空白的高度\r\n      catalogAfterHeight: 0, //目录渲染区之后空白的高度\r\n      //定时器\r\n      timer: null,\r\n      messageTimer: null,\r\n      wheelTimer: null,\r\n      sizeSettingsTimer: null,\r\n      speechOptionTimer: null,\r\n      timedSpeechInterval: null,\r\n      autoSpeechTimer: null,\r\n      screenSizeTimer: null,\r\n      //其他\r\n      device: \"desktop\",\r\n      menuVisible: false, //弹出菜单显隐\r\n      menuOffsetX: 0, //弹出菜单位置X向偏移\r\n      menuOffsetY: 0, //弹出菜单位置Y向偏移\r\n      menuPlacement: \"bottom\", //菜单弹出位置\r\n      settingsVisible: false, //选项设置弹窗显隐\r\n      catalogVisible: false, //目录弹窗显隐\r\n      voiceVisible: false, //语音朗读弹窗显隐\r\n      searchVisible: false, //搜索弹窗显隐\r\n      progressVisible: false, //阅读进度弹窗显隐\r\n      isWheelLocked: false, //是否锁定阅读界面鼠标响应\r\n      turnLocked: false, //翻页锁定(避免翻页过快或者章和页同时变化时的翻页冲突)\r\n      // isMouseDown: false, //鼠标是否被按下\r\n      //语音朗读\r\n      utterance: window.SpeechSynthesisUtterance ? new SpeechSynthesisUtterance() : null,\r\n      voiceList: [],\r\n      voiceIndex: \"默认\",\r\n      speechOptions: {\r\n        rate: 1,\r\n        volume: 1,\r\n        pitch: 1,\r\n        voiceIndex: 0,\r\n      },\r\n      isSpeaking: false, //语言朗读是否在进行\r\n      isPaused: false, //语言朗读是否处于暂停状态(不能用speechSynthesis.paused代替，因为它永远是false)\r\n      speechTimeLeft: 60, //语音朗读定时剩余时间（分钟）\r\n      timedSpeechOpen: false, //语音朗读定时是否启动\r\n      readingStatus: {\r\n        paraIndex: -1,\r\n        chapterIndex: -1,\r\n        time: 0,\r\n      }, //这个状态用于朗读卡死时重新从当前段落开始朗读\r\n    }\r\n  },\r\n  created() {\r\n    // var url = \"http://192.168.0.113:8080/#/article/book\"\r\n    // window.open(\r\n    //   url,\r\n    //   \"readerWindow\",\r\n    //   \"alwaysRaised=yes,z-look=yes,toolbar=no,location=no,resizable=no,height=960,width=800,,scrollbars=yes,left=380,top=300\"\r\n    // )\r\n  },\r\n  mounted() {\r\n    //读取存储在浏览器中的设置信息\r\n    const sizeSettings = localStorage.getItem(\"SIZE_SETTINGS\")\r\n    if (sizeSettings && sizeSettings.length) this.sizeSettings = JSON.parse(sizeSettings) //设置排版尺寸\r\n\r\n    const colorSettings = localStorage.getItem(\"COLOR_SETTINGS\")\r\n    if (colorSettings && colorSettings.length) this.colorSettings = JSON.parse(colorSettings) //设置页面配色\r\n\r\n    const pageTurning = localStorage.getItem(\"PAGE_TURNING\")\r\n    if (pageTurning && pageTurning.length) this.pageTurning = pageTurning //设置翻页方式\r\n\r\n    const speechOptions = localStorage.getItem(\"SPEECH_OPTIONS\")\r\n    if (speechOptions && speechOptions.length) this.speechOptions = JSON.parse(speechOptions) //设置语音参数\r\n    this.voiceIndex = this.speechOptions.voiceIndex\r\n    this.device = this.store.state.app.device\r\n\r\n    const lastPosition = localStorage.getItem(\r\n      \"LASTPOSITION_\" + this.bookId,\r\n      JSON.stringify(this.lastPosition)\r\n    )\r\n    if (lastPosition) {\r\n      this.lastPosition = JSON.parse(lastPosition)\r\n      this.currentChapter = this.lastPosition.chapter\r\n      this.currentPage = this.getPageIndex(this.lastPosition.para)\r\n    }\r\n    //监听浏览器尺寸\r\n    window.onresize = () => {\r\n      return (() => {\r\n        this.screenWidth = document.body.clientWidth\r\n        this.screenHeight = document.body.clientHeight\r\n      })()\r\n    }\r\n    // 监听键盘按键\r\n    document.onkeydown = (e) => {\r\n      // 注意this的作用域，如果函数定义为function，使用var that = this\r\n      // 如果定义为lambda表达式则不需要\r\n      switch (e.key) {\r\n        case \"ArrowLeft\":\r\n        case \"a\":\r\n          this.handleDebounce(this.prevPage)\r\n          break\r\n        case \"ArrowUp\":\r\n        case \"w\":\r\n          this.handleDebounce(this.prevChapter)\r\n          break\r\n        case \"ArrowRight\":\r\n        case \"d\":\r\n          this.handleDebounce(this.nextPage)\r\n          break\r\n        case \"ArrowDown\":\r\n        case \"s\":\r\n          this.handleDebounce(this.nextChapter)\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    }\r\n    // document.onmousedown = () => (this.isMouseDown = true)\r\n    // document.onmouseup = () => (this.isMouseDown = false)\r\n\r\n    //先取出闭包函数，再给onscroll，不能直接给\r\n    const setRenderArea = this.handleThrottle(this.setRenderArea, 100)\r\n    this.$refs.catalogPane.onscroll = () => {\r\n      setRenderArea()\r\n    }\r\n    // window.onerror = function (message, source, line, column, error) {\r\n    //   alert(message)\r\n    // }\r\n    // console.log(\"测试：\", this.measureText(\"‘\", 20))\r\n  },\r\n  beforeUnmount() {\r\n    this.speechStop()\r\n  },\r\n  methods: {\r\n    //#region 其他\r\n    //恢复默认设置\r\n    resetStyle() {\r\n      this.sizeSettings = {\r\n        fontFamily: \"Arial\",\r\n        fontSize: 24,\r\n        lineHeight: 1.5, //行高（字高倍数）\r\n        paraSpace: 0.5, //段落间距（字高倍数）\r\n        titleScale: 2, //标题字体放大倍数\r\n        paddingTop: 20,\r\n        paddingBottom: 20,\r\n        paddingLR: 20,\r\n        widthPercent: 50,\r\n      }\r\n      this.colorSettings = {\r\n        textColor: this.textColors[0],\r\n        bgColor: this.bgColors[0],\r\n        borderColor: \"#FAFAFA\",\r\n      }\r\n    },\r\n    // 根据设备类型设置页面尺寸\r\n    pageInit() {\r\n      if (this.device === \"desktop\") {\r\n        const percent = this.sizeSettings.widthPercent ? this.sizeSettings.widthPercent : 50\r\n        this.pageWidth = this.screenWidth * (percent / 100)\r\n        this.pageHeight = window.innerHeight - 220\r\n      } else if (this.store.state.app.device === \"mobile\") {\r\n        this.pageWidth = this.screenWidth * 0.95\r\n        this.pageHeight = window.screen.height - 100\r\n        // alert(this.textareaWidth + \",\" + this.pageHeight + \",\" + this.textareaHeight)\r\n      }\r\n      //正文内容（盒子最内侧）宽度，一定要算准，否则分页效果会出问题\r\n      this.textareaWidth = this.pageWidth - this.sizeSettings.paddingLR * 2\r\n      if (this.pageTurning === \"滚动\") {\r\n        this.textareaHeight = 100000\r\n      } else {\r\n        this.textareaHeight =\r\n          this.pageHeight - this.sizeSettings.paddingTop - this.sizeSettings.paddingBottom\r\n      }\r\n      console.log(\r\n        `宽:${this.pageWidth}(${this.textareaWidth}) , 高:${this.pageHeight}(${this.textareaHeight})`\r\n      )\r\n    },\r\n    // 设置目录动态渲染区域的相关参数\r\n    setRenderArea() {\r\n      const h = 30\r\n      const max = this.chapterList.length * h\r\n      const scrollTop = this.$refs.catalogPane.scrollTop\r\n      const len = this.chapterListRendered.length * h\r\n      const before = Math.max(scrollTop - len / 2, 0)\r\n      const after = max - before - len\r\n      // console.log(before, len, after, \"before + len + after =\", before + len + after)\r\n      this.catalogScrollPercent = scrollTop / max\r\n      this.catalogBeforeHeight = before\r\n      this.catalogAfterHeight = after > 0 ? after : 150\r\n      this.$nextTick(() => {\r\n        this.$refs.catalogPane.scrollTop = scrollTop\r\n      })\r\n    },\r\n    // 通过定时器实现防抖\r\n    handleDebounce(fn, wait = 100) {\r\n      clearTimeout(this.timer) //清除定时器\r\n      this.timer = setTimeout(() => {\r\n        fn()\r\n      }, wait)\r\n    },\r\n    // 通过定时器实现节流\r\n    handleThrottle(fn, wait = 100) {\r\n      let lock = true\r\n      return function () {\r\n        if (lock) {\r\n          lock = false //关锁\r\n          setTimeout(() => {\r\n            fn()\r\n            lock = true //开锁\r\n          }, wait)\r\n        }\r\n      }\r\n    },\r\n    // 组合函数并执行\r\n    combineFn(fns, args) {\r\n      fns.forEach((fn, index) => fn(...args[index]))\r\n    },\r\n    // 对$message函数进行封装便于防抖\r\n    showMessage(obj) {\r\n      clearTimeout(this.messageTimer) //清除定时器\r\n      this.messageTimer = setTimeout(() => this.$message(obj), 200)\r\n    },\r\n    // 全屏\r\n    fullscreen(className) {\r\n      // 获取需要全屏展示的div\r\n      let fullarea = document.getElementsByClassName(className)[0]\r\n      if (!document.fullscreenElement) {\r\n        // 全屏\r\n        fullarea.requestFullscreen()\r\n        // alert(fullarea)\r\n      } else {\r\n        // 退出全屏\r\n        if (document.exitFullscreen) {\r\n          document.exitFullscreen()\r\n        }\r\n      }\r\n    },\r\n    //#endregion\r\n\r\n    //#region 翻页\r\n    //上一章\r\n    prevChapter() {\r\n      if (this.currentChapter > 0) {\r\n        this.currentChapter--\r\n        this.clearSelection()\r\n      } else {\r\n        this.showMessage({\r\n          message: \"已到达第一章\",\r\n          type: \"info\",\r\n          duration: 1000,\r\n        })\r\n      }\r\n    },\r\n    // 首页\r\n    firstPage() {\r\n      // eslint-disable-next-line no-unused-expressions\r\n      this.currentPage = 0\r\n      this.clearSelection()\r\n    },\r\n    // 上一页\r\n    prevPage() {\r\n      if (this.currentPage === 0) {\r\n        if (this.currentChapter > 0) {\r\n          this.currentChapter--\r\n          this.$nextTick(() => {\r\n            this.lastPage()\r\n            this.clearSelection()\r\n          })\r\n        } else {\r\n          this.showMessage({\r\n            message: \"已到达第一页\",\r\n            type: \"info\",\r\n            duration: 1000,\r\n          })\r\n        }\r\n      } else {\r\n        this.currentPage--\r\n        this.clearSelection()\r\n      }\r\n    },\r\n    // 下一页\r\n    nextPage() {\r\n      if (this.currentPage === this.pageTotal - 1) {\r\n        if (this.currentChapter < this.chapterList.length - 1) {\r\n          this.currentChapter++\r\n          this.clearSelection()\r\n        } else {\r\n          this.showMessage({\r\n            message: \"已到达最后一页\",\r\n            type: \"info\",\r\n            duration: 1000,\r\n          })\r\n        }\r\n        // return false\r\n      } else {\r\n        this.currentPage++\r\n        this.clearSelection()\r\n      }\r\n    },\r\n    // 尾页\r\n    lastPage() {\r\n      if (this.currentPage === this.pageTotal - 1) {\r\n        return false\r\n      } else {\r\n        this.currentPage = this.pageTotal - 1\r\n        this.clearSelection()\r\n      }\r\n    },\r\n    //下一章\r\n    nextChapter() {\r\n      if (this.currentChapter < this.chapterList.length - 1) {\r\n        this.currentChapter++\r\n        this.clearSelection()\r\n      } else {\r\n        this.showMessage({\r\n          message: \"已到达最后一章\",\r\n          type: \"info\",\r\n          duration: 1000,\r\n        })\r\n      }\r\n    },\r\n    jumpTo(val) {\r\n      this.currentChapter = Math.floor(((this.chapterList.length - 1) * val) / 100)\r\n      this.clearSelection()\r\n    },\r\n    //处理鼠标滚轮事件\r\n    wheelHandle(e) {\r\n      if (!this.isWheelLocked && this.pageTurning != \"滚动\") {\r\n        const debounce = 50\r\n        if (e.deltaY > 0) {\r\n          //向下 wheelDelta <0\r\n          clearTimeout(this.wheelTimer) //清除定时器\r\n          this.wheelTimer = setTimeout(() => this.nextPage(), debounce)\r\n        } else if (e.deltaY < 0) {\r\n          //向上 wheelDelta >0\r\n          clearTimeout(this.wheelTimer) //清除定时器\r\n          this.wheelTimer = setTimeout(() => this.prevPage(), debounce)\r\n        }\r\n      }\r\n    },\r\n    //翻页动画\r\n    animatePage(reverse) {\r\n      let parent = document.querySelector(\".reader-container\")\r\n      let page = document.querySelector(\".reader-body\")\r\n      let oldPage = page.cloneNode(1) //复制节点，作为旧页面\r\n      const width = this.pageWidth\r\n      oldPage.style.position = \"absolute\"\r\n      oldPage.style.width = width + \"px\"\r\n      oldPage.style.left = \"10px\"\r\n      oldPage.style.top = \"30px\"\r\n      oldPage.style.boxShadow = (reverse ? -1 : 1) * 6 + \"px 0px 6px 1px rgb(128 131 137 / 25%)\"\r\n      // oldPage.style.transform = \"rotateX(30deg)\"\r\n      parent.appendChild(oldPage) //旧页面节点加入DOM\r\n      let timeout //翻页动作时长\r\n      let keyframes //动画关键帧\r\n      if (this.pageTurning === \"覆盖\") {\r\n        timeout = 400 //翻页动作时长\r\n        const deltaX = (reverse ? 1 : -1) * width\r\n        keyframes = [\r\n          { transform: \"translateX(0px)\" },\r\n          { transform: \"translateX(\" + deltaX * 0.5 + \"px)\" },\r\n          { transform: \"translateX(\" + deltaX * 0.9 + \"px)\" },\r\n          { transform: \"translateX(\" + deltaX + \"px)\" },\r\n        ]\r\n      } else if (this.pageTurning === \"平移\") {\r\n        timeout = 400 //翻页动作时长\r\n        const deltaX = (reverse ? 1 : -1) * width\r\n        keyframes = [\r\n          { transform: \"translateX(0px)\" },\r\n          { transform: \"translateX(\" + deltaX * 0.5 + \"px)\" },\r\n          { transform: \"translateX(\" + deltaX * 0.9 + \"px)\" },\r\n          { transform: \"translateX(\" + deltaX + \"px)\" },\r\n        ]\r\n        //DOM更新后复制的页面才是新页面\r\n        this.$nextTick(() => {\r\n          let newPage = page.cloneNode(1) //复制节点，作为临时的新页面\r\n          newPage.style.position = \"absolute\"\r\n          newPage.style.width = width + \"px\"\r\n          newPage.style.left = (reverse ? -1 : 1) * width + 10 + \"px\"\r\n          newPage.style.top = \"30px\"\r\n          parent.appendChild(newPage) //临时新页面节点加入DOM\r\n          // 新页面开启动画\r\n          newPage.animate(keyframes, {\r\n            duration: timeout, // 动画时长 (单位毫秒)\r\n            iterations: 1, // 重复次数 (无限循环：Infinity)\r\n            fill: \"forwards\", // 结束时不复位\r\n            delay: 0, // 设置动画延迟时长 (单位毫秒)\r\n            easing: \"ease-out\", // 设置动画 运动速率 (linear: 匀速)\r\n          })\r\n          setTimeout(() => {\r\n            parent.removeChild(newPage) //移除临时新页面\r\n          }, timeout)\r\n        })\r\n      } else if (this.pageTurning === \"拟真\") {\r\n        timeout = 1200 //翻页动作时长\r\n        oldPage.style.transformOrigin = reverse ? \"right\" : \"left\"\r\n        keyframes = reverse\r\n          ? [\r\n              { transform: \"rotateY(0)\" },\r\n              { transform: \"rotateY(100deg)\" },\r\n              { transform: \"rotateY(180deg)\" },\r\n            ]\r\n          : [\r\n              { transform: \"rotateY(0deg)\" },\r\n              { transform: \"rotateY(-100deg)\" },\r\n              { transform: \"rotateY(-180deg)\" },\r\n            ]\r\n      }\r\n      //旧页面开启动画\r\n      oldPage.animate(keyframes, {\r\n        duration: timeout, // 动画时长 (单位毫秒)\r\n        iterations: 1, // 重复次数 (无限循环：Infinity)\r\n        fill: \"forwards\", // 结束时不复位\r\n        delay: 0, // 设置动画延迟时长 (单位毫秒)\r\n        easing: \"ease-out\", // 设置动画 运动速率 (linear: 匀速)\r\n      })\r\n      setTimeout(() => {\r\n        parent.removeChild(oldPage) //移除旧页面\r\n      }, timeout)\r\n    },\r\n    //#endregion\r\n\r\n    //#region 功能操作\r\n    // 点击正文时关闭其他弹窗\r\n    closePopover() {\r\n      this.menuVisible = false\r\n      this.settingsVisible = false\r\n      this.voiceVisible = false\r\n      this.searchVisible = false\r\n      this.progressVisible = false\r\n      this.closeCatalog()\r\n    },\r\n    // 返回\r\n    handleGoBack() {\r\n      this.menuVisible = false\r\n      this.settingsVisible = false\r\n      this.voiceVisible = false\r\n      this.searchVisible = false\r\n      this.progressVisible = false\r\n      this.closeCatalog() //关闭目录\r\n      this.speechStop() //停止语音朗读\r\n      this.changeMode()\r\n    },\r\n    // 打开目录\r\n    openCatalog() {\r\n      // const timeStart = performance.now()\r\n      this.menuVisible = false\r\n      this.settingsVisible = false\r\n      this.voiceVisible = false\r\n      this.searchVisible = false\r\n      this.progressVisible = false\r\n      this.catalogVisible = true\r\n      this.isWheelLocked = true\r\n      //目录自动定位到当前章节所在位置\r\n      this.$nextTick(() => {\r\n        //当前章节百分比\r\n        const percent = this.currentChapter / this.chapterList.length\r\n        //滚动条总高度，30是height(不是字体高度) + 上下margin，\r\n        const scrollMax = this.chapterList.length * 30\r\n        //下面定位到当前章节所在位置，使当前章节出现在大约1/3高度\r\n        this.$refs.catalogPane.scrollTop = percent * scrollMax - (this.pageHeight - 120) / 3\r\n      })\r\n      //读取书签记录\r\n      const bookmarks = localStorage.getItem(\"BOOKMARKS_\" + this.bookId)\r\n      if (bookmarks) this.bookmarks = JSON.parse(bookmarks)\r\n      // console.log(performance.now() - timeStart)\r\n    },\r\n    // 目录中选择了章节\r\n    selectChapter(val) {\r\n      this.currentChapter = val\r\n      this.closeCatalog()\r\n    },\r\n    // 打开选项板\r\n    openSettings() {\r\n      this.settingsVisible = !this.settingsVisible\r\n      this.menuVisible = false\r\n      this.voiceVisible = false\r\n      this.searchVisible = false\r\n      this.progressVisible = false\r\n    },\r\n    // 打开语音朗读面板\r\n    openVoice() {\r\n      this.voiceVisible = !this.voiceVisible\r\n      this.menuVisible = false\r\n      this.settingsVisible = false\r\n      this.searchVisible = false\r\n      this.progressVisible = false\r\n      this.voiceInit()\r\n    },\r\n    // 初始化语音发音人\r\n    voiceInit() {\r\n      if (this.speechOptions && this.speechOptions.voiceIndex) {\r\n        this.voiceIndex = this.speechOptions.voiceIndex\r\n      }\r\n      if (!this.voiceList || this.voiceList.length === 0) {\r\n        this.getVoiceList()\r\n      }\r\n    },\r\n    // 打开搜索面板\r\n    openSearch() {\r\n      this.searchVisible = !this.searchVisible\r\n      this.menuVisible = false\r\n      this.voiceVisible = false\r\n      this.settingsVisible = false\r\n      this.progressVisible = false\r\n    },\r\n    // 打开进度面板\r\n    openProgress() {\r\n      this.progressVisible = !this.progressVisible\r\n      this.menuVisible = false\r\n      this.voiceVisible = false\r\n      this.settingsVisible = false\r\n      this.searchVisible = false\r\n    },\r\n    // 关闭目录面板\r\n    closeCatalog() {\r\n      this.catalogVisible = false\r\n      this.isWheelLocked = false\r\n      this.searchVisible = false\r\n    },\r\n    // 文本搜索\r\n    handleSearch(keywords, reverse = false) {\r\n      let index = -1\r\n      let paraIndex = 0\r\n      let chapterIndex = this.currentChapter\r\n      let paras = this.list //this.chapterList[chapterIndex] ? this.chapterList[chapterIndex].content : []\r\n      //注意：null >= 0 为 true\r\n      if (this.tempParaIndex && this.tempParaIndex >= 0) {\r\n        paraIndex = this.tempParaIndex\r\n      } else if (reverse && this.tempParaIndex === -1) {\r\n        chapterIndex -= 1\r\n        paras = this.chapterList[chapterIndex] ? this.chapterList[chapterIndex].content : []\r\n        paraIndex = paras.length - 1\r\n      } else {\r\n        paraIndex = this.getParaIndexCh(0)\r\n      }\r\n      while (chapterIndex < this.chapterList.length && chapterIndex >= 0) {\r\n        while (paraIndex < paras.length && paraIndex >= 0) {\r\n          //开始查找\r\n          if (reverse) {\r\n            const start =\r\n              this.tempStartIndex === -1 ? paras[paraIndex].length - 1 : this.tempStartIndex\r\n            index = paras[paraIndex].lastIndexOf(keywords, start - 1)\r\n          } else {\r\n            index = paras[paraIndex].indexOf(keywords, this.tempStartIndex + 1)\r\n          }\r\n          //如果找到了\r\n          if (index > -1) {\r\n            this.tempStartIndex = index\r\n            //切换到对应章节\r\n            this.currentChapter = chapterIndex\r\n            //先换章，下一次DOM更新时再换页，否则是先换页再换章\r\n            this.$nextTick(() => {\r\n              //先换页\r\n              this.currentPage = this.getPageIndex(paraIndex)\r\n              //下一次DOM更新时再选中文本\r\n              this.$nextTick(() => {\r\n                const paraIndexOfPage = this.getParaIndex(paraIndex)\r\n                let startOffset = index\r\n                let endOffset = index + keywords.length\r\n                const paraLength = this.pageList[this.currentPage][paraIndexOfPage].length\r\n                //如果终点超出了段落长度，终点在下一页（可能遇到了页面最后一段）\r\n                if (endOffset > paraLength) {\r\n                  //并且起点没超出段落长度，起点在当前页\r\n                  if (startOffset < paraLength) {\r\n                    endOffset = paraLength //只选中关键词前一部分，终点就是段落前一部分结尾\r\n                    //否则说明关键词整个都在下一页\r\n                  } else {\r\n                    //先换页\r\n                    this.currentPage++\r\n                    //下次DOM更新时再选中文本\r\n                    this.$nextTick(() => {\r\n                      const selector = \".main-para:nth-child(1)\"\r\n                      this.getSelection(selector, startOffset - paraLength, endOffset - paraLength)\r\n                    })\r\n                    //避免连续搜索时一直搜到本次的结果，要放在nextTick外面\r\n                    this.tempParaIndex = paraIndex // + (reverse ? -1 : 1)\r\n                    return //要放在nextTick外面\r\n                  }\r\n                }\r\n                const selector = \".main-para:nth-child(\" + (paraIndexOfPage + 1) + \")\"\r\n                this.getSelection(selector, startOffset, endOffset)\r\n                if (this.pageTurning === \"滚动\") {\r\n                  this.$el\r\n                    .querySelector(selector)\r\n                    .scrollIntoView({ behavior: \"smooth\", block: \"center\" })\r\n                }\r\n              })\r\n            })\r\n            //避免连续搜索时一直搜到本次的结果，要放在nextTick外面\r\n            if (reverse && paras[paraIndex].lastIndexOf(keywords, index - 1) === index) {\r\n              this.tempParaIndex = paraIndex - 1\r\n            } else {\r\n              this.tempParaIndex = paraIndex // + (reverse ? -1 : 1)\r\n            }\r\n            return //要放在nextTick外面\r\n          } else {\r\n            paraIndex += reverse ? -1 : 1\r\n            this.tempStartIndex = -1\r\n          }\r\n        }\r\n        chapterIndex += reverse ? -1 : 1\r\n        if (chapterIndex === this.chapterList.length) {\r\n          this.showMessage({ message: \"后面没有了\", type: \"info\", duration: 1000 })\r\n        } else if (chapterIndex < 0) {\r\n          this.showMessage({ message: \"前面没有了\", type: \"info\", duration: 1000 })\r\n        } else {\r\n          paras = this.chapterList[chapterIndex] ? this.chapterList[chapterIndex].content : []\r\n          paraIndex = reverse ? paras.length - 1 : 0\r\n        }\r\n      }\r\n    },\r\n    // 鼠标按键松开\r\n    handleMouseup(e) {\r\n      //如果是鼠标右键\r\n      if (e.button === 2) {\r\n        this.openPopupMenu(e)\r\n      }\r\n    },\r\n    // 打开弹出菜单\r\n    openPopupMenu(e) {\r\n      this.settingsVisible = false\r\n      this.voiceVisible = false\r\n      this.searchVisible = false\r\n      this.progressVisible = false\r\n      this.catalogVisible = false\r\n      // e.offsetX, e.offsetY, e.pageX, e.pageY, e.clientX, e.clientY\r\n      // console.log(e.layerX, e.layerY)\r\n      if (e.layerX || e.layerY) {\r\n        this.menuOffsetX = e.layerX\r\n        this.menuOffsetY = e.layerY\r\n        const menuW = 240\r\n        const menuH = 360\r\n        if (e.layerY > this.pageHeight - menuH) {\r\n          if (e.layerX > this.pageWidth - menuW) this.menuPlacement = \"top-end\"\r\n          else this.menuPlacement = \"top-start\"\r\n        } else {\r\n          if (e.layerX > this.pageWidth - menuW) this.menuPlacement = \"bottom-end\"\r\n          else this.menuPlacement = \"bottom-start\"\r\n        }\r\n      }\r\n      const search = this.searchMarkedPara(this.currentPara)\r\n      if (search > -1) {\r\n        this.noteRemark = this.notes[search].remark\r\n        this.noteColor = this.notes[search].color\r\n      } else {\r\n        this.noteRemark = \"\"\r\n        if (this.noteColor == \"\") this.noteColor = this.markedColors[0]\r\n      }\r\n      this.menuVisible = true\r\n      this.voiceInit()\r\n    },\r\n    // 关闭弹出菜单\r\n    handleMouseDown() {\r\n      //屏蔽正文区域系统右键菜单\r\n      this.$refs.readerBody.oncontextmenu = function () {\r\n        return false //屏蔽右键菜单\r\n      }\r\n      this.menuVisible = false\r\n    },\r\n    // 在笔记列表中查找当前段落，返回在笔记列表中的索引\r\n    searchMarkedPara(index) {\r\n      for (let i in this.notes) {\r\n        const page = this.getPageIndex(this.notes[i].para)\r\n        const para = this.getParaIndex(this.notes[i].para)\r\n        if (\r\n          this.notes[i].chapter === this.currentChapter &&\r\n          ((page === this.currentPage && para === index) ||\r\n            (this.noIndentPara != \"\" &&\r\n              index === 0 &&\r\n              page === this.currentPage - 1 &&\r\n              this.getPageIndex(this.notes[i].para + 1) === this.currentPage))\r\n        ) {\r\n          return i\r\n        }\r\n      }\r\n      return -1\r\n    },\r\n    //添加笔记\r\n    addNote(index, remark = \"\", color = this.markedColors[0], update = false) {\r\n      // const notes = localStorage.getItem(\"NOTES_\" + this.bookId)\r\n      // if (notes) this.notes = JSON.parse(notes)\r\n      const search = this.searchMarkedPara(index)\r\n      if (search > -1) {\r\n        if (update || remark != \"\") {\r\n          let note = this.notes[search]\r\n          note.remark = remark\r\n          note.color = color\r\n          this.updateNote(search, note)\r\n        } else this.deleteNote(search)\r\n      } else {\r\n        const note = {\r\n          chapter: this.currentChapter,\r\n          para: this.getParaIndexCh(index),\r\n          time: new Date().toLocaleDateString().replaceAll(\"/\", \"-\"),\r\n          remark: remark,\r\n          color: color,\r\n        }\r\n        this.notes.push(note)\r\n        localStorage.setItem(\"NOTES_\" + this.bookId, JSON.stringify(this.notes))\r\n        this.setTextStyle()\r\n        this.showMessage({ message: \"笔记已添加\", type: \"success\", duration: 1000 })\r\n      }\r\n      this.closePopover()\r\n    },\r\n    //更新指定笔记\r\n    updateNote(index, note) {\r\n      this.notes.splice(index, 1, note)\r\n      localStorage.setItem(\"NOTES_\" + this.bookId, JSON.stringify(this.notes))\r\n      this.setTextStyle()\r\n    },\r\n    //删除指定笔记\r\n    deleteNote(index) {\r\n      this.notes.splice(index, 1)\r\n      if (this.notes.length > 0) {\r\n        localStorage.setItem(\"NOTES_\" + this.bookId, JSON.stringify(this.notes))\r\n      } else {\r\n        //如果书签列表是空的，则清除存储记录\r\n        localStorage.removeItem(\"NOTES_\" + this.bookId)\r\n      }\r\n      this.setTextStyle()\r\n    },\r\n    handleDeleteNote(para) {\r\n      this.deleteNote(this.searchMarkedPara(para))\r\n      this.closePopover()\r\n    },\r\n    //跳转到指定笔记的位置\r\n    jumpToNote(index) {\r\n      console.log(index, this.notes[index].chapter, this.notes[index].para)\r\n      this.currentChapter = this.notes[index].chapter\r\n      this.$nextTick(() => {\r\n        console.log(this.getPageIndex(this.notes[index].para))\r\n        this.currentPage = this.getPageIndex(this.notes[index].para)\r\n      })\r\n      this.closeCatalog()\r\n    },\r\n    //获取笔记预览内容\r\n    getNotePreview(index) {\r\n      const paras = this.chapterList[this.notes[index].chapter].content\r\n      const paraIndex = this.notes[index].para\r\n      let result = \"\"\r\n      if (paras[paraIndex].length < 40) {\r\n        result = paras[paraIndex] + \"...\"\r\n      } else {\r\n        result = paras[paraIndex].slice(0, 40) + \"...\"\r\n      }\r\n      return result\r\n    },\r\n    //添加书签\r\n    addBookmark() {\r\n      const bookmarks = localStorage.getItem(\"BOOKMARKS_\" + this.bookId)\r\n      if (bookmarks) this.bookmarks = JSON.parse(bookmarks)\r\n      const start = this.hasNoIndentPara() && this.pageList[this.currentPage].length > 0 ? 1 : 0\r\n      const bookmark = {\r\n        chapter: this.currentChapter,\r\n        para: this.getParaIndexCh(start),\r\n        time: new Date().toLocaleDateString().replaceAll(\"/\", \"-\"),\r\n      }\r\n      this.bookmarks.push(bookmark)\r\n      localStorage.setItem(\"BOOKMARKS_\" + this.bookId, JSON.stringify(this.bookmarks))\r\n      this.showMessage({ message: \"书签已添加\", type: \"success\", duration: 1000 })\r\n      this.closePopover()\r\n    },\r\n    //删除指定书签\r\n    deleteBookmark(index) {\r\n      this.bookmarks.splice(index, 1)\r\n      if (this.bookmarks.length > 0) {\r\n        localStorage.setItem(\"BOOKMARKS_\" + this.bookId, JSON.stringify(this.bookmarks))\r\n      } else {\r\n        //如果书签列表是空的，则清除存储记录\r\n        localStorage.removeItem(\"BOOKMARKS_\" + this.bookId)\r\n      }\r\n    },\r\n    //跳转到指定书签的位置\r\n    jumpToBookmark(index) {\r\n      console.log(index, this.bookmarks[index].chapter, this.bookmarks[index].para)\r\n      this.currentChapter = this.bookmarks[index].chapter\r\n      this.$nextTick(() => {\r\n        console.log(this.getPageIndex(this.bookmarks[index].para))\r\n        this.currentPage = this.getPageIndex(this.bookmarks[index].para)\r\n      })\r\n      this.closeCatalog()\r\n    },\r\n    //获取书签预览内容\r\n    getBookmarkPreview(index) {\r\n      const paras = this.chapterList[this.bookmarks[index].chapter].content\r\n      const paraIndex = this.bookmarks[index].para\r\n      let result = \"\"\r\n      if (paras[paraIndex].length < 20) {\r\n        result = paras[paraIndex]\r\n        if (paras[paraIndex + 1]) {\r\n          result += \"\\r\\n\" + paras[paraIndex + 1].slice(0, 20)\r\n        }\r\n        result += \"...\"\r\n      } else {\r\n        result = paras[paraIndex].slice(0, 40) + \"...\"\r\n      }\r\n      return result\r\n    },\r\n    //#endregion\r\n\r\n    //#region 模板内容与样式\r\n    // 改变正文样式\r\n    setTextStyle() {\r\n      const pTags = Array.from(this.$el.querySelector(\".reader-body\").getElementsByTagName(\"p\"))\r\n      pTags.forEach((p, index) => {\r\n        p.innerHTML = this.clearStyle(p.innerHTML)\r\n        const search = this.searchMarkedPara(index)\r\n        if (search > -1) {\r\n          const color = this.notes[search].color ?? this.markedColors[0]\r\n          p.innerHTML = this.insertStyle(p.innerHTML, \"background-color:\" + color)\r\n          // p.innerHTML = p.innerHTML.fontcolor(\"Red\")\r\n        }\r\n      })\r\n    },\r\n    insertStyle(text, style) {\r\n      return `<span style=\"${style}\" key=\"0\">${text}</span>`\r\n    },\r\n    clearStyle(text) {\r\n      // const reg1 = /^(<span style=\".*\" key=\"0\">)|(<font .*=\".*\">) /g\r\n      // const reg2 = /(<\\/span>)|(<\\/font>)$/g\r\n      const reg1 = /^(<span style=\".*\" key=\"0\">)/g\r\n      const reg2 = /(<\\/span>)$/g\r\n      return text.replace(reg1, \"\").replaceAll(reg2, \"\")\r\n    },\r\n    // 取消文字选中\r\n    clearSelection() {\r\n      window.getSelection().removeAllRanges()\r\n    },\r\n    // 选中文本\r\n    getSelection(selector, startOffset, endOffset) {\r\n      //添加$nextTick，否则换页后无法选中。2022-12-05\r\n      this.$nextTick(() => {\r\n        let elm = this.$el.querySelector(selector) //选中元素\r\n        let range = document.createRange()\r\n        let startNode = elm.firstChild //元素内容\r\n        //如果不是文本节点\r\n        // if (startNode.nodeType !== 3) startNode = startNode.firstChild\r\n        range.setStart(startNode, startOffset)\r\n        range.setEnd(startNode, endOffset)\r\n        let selection = window.getSelection()\r\n        selection.removeAllRanges()\r\n        selection.addRange(range)\r\n        range.detach() //从文档中分离\r\n        range = null //解除引用\r\n      })\r\n    },\r\n    // 获取章节标题\r\n    getTitle() {\r\n      if (this.chapterList && this.chapterList[this.currentChapter]) {\r\n        return this.chapterList[this.currentChapter].title\r\n      } else {\r\n        return this.articleData.title\r\n      }\r\n    },\r\n    // 获取段落字号\r\n    getParaFontSize(index) {\r\n      if (index === 0 && this.currentPage === 0) {\r\n        return this.sizeSettings.fontSize * this.sizeSettings.titleScale\r\n      } else return this.sizeSettings.fontSize\r\n    },\r\n    // 计算目录宽度\r\n    getCatalogWidth() {\r\n      if (this.pageWidth < 400) return this.pageWidth\r\n      else return 400\r\n    },\r\n    // 获取当前页字数\r\n    getPageWordNum() {\r\n      if (this.currentPage < 0) return 0\r\n      const lenArray = []\r\n      const currentArray = this.pageList[this.currentPage]\r\n      //遍历Vue中对象(Proxy对象)的方法，不能直接用map,reduce等函数\r\n      for (let i in currentArray) {\r\n        lenArray.push(currentArray[i].length)\r\n      }\r\n      return lenArray.reduce((sum, pre) => sum + pre, 0)\r\n      // return this.pageList[this.currentPage].reduce((sum, pre) => sum + pre.length, 0)\r\n    },\r\n    // 获取本章总字数\r\n    getTotalWordNum() {\r\n      return this.pageList.reduce(\r\n        (sum, pre) => sum + pre.reduce((sum, pre) => sum + pre.length, 0),\r\n        0\r\n      )\r\n    },\r\n    // 判断是否是首行不缩进的段落\r\n    isNoIndent(pageIndex) {\r\n      if (!this.noIndent) return false\r\n      for (let i in this.noIndent) {\r\n        if (pageIndex === this.noIndent[i]) return true\r\n      }\r\n      return false\r\n    },\r\n    // 判断本页是否有首行不缩进的段落\r\n    hasNoIndentPara() {\r\n      if (!(!this.noIndentPara.length || this.noIndentPara.length === 0)) return true\r\n      return false\r\n    },\r\n    //#endregion\r\n\r\n    //#region 转换函数\r\n    /** @description 将段落在当前页的索引转换为段落在当前章的索引 */\r\n    getParaIndexCh(index) {\r\n      // if (this.pageList.length === 0) return 0\r\n      let tempIndex = index\r\n      for (let i = 0; i <= this.currentPage; i++) {\r\n        //如果该页是首段首行不缩进的，则实际段落序号减1\r\n        if (this.isNoIndent(i)) {\r\n          tempIndex--\r\n        }\r\n        tempIndex += (this.pageList[i] ?? \"\").length\r\n      }\r\n      tempIndex -= (this.pageList[this.currentPage] ?? []).length\r\n      return tempIndex\r\n    },\r\n    /** @description 将段落在当前章的索引转换为段落在当前页的索引 */\r\n    getParaIndex(paraIndex) {\r\n      let tempIndex = paraIndex\r\n      for (let i = 0; i < this.pageList.length; i++) {\r\n        //如果该页是首段首行不缩进的，则段落数量加1\r\n        if (this.isNoIndent(i)) {\r\n          tempIndex++\r\n        }\r\n        tempIndex -= this.pageList[i].length\r\n        if (tempIndex < 0) return tempIndex + this.pageList[i].length\r\n      }\r\n    },\r\n    /** @description 根据段落在当前章的索引返回当前页索引 */\r\n    getPageIndex(paraIndex) {\r\n      let tempIndex = paraIndex\r\n      for (let i = 0; i < this.pageList.length; i++) {\r\n        //如果该页是首段首行不缩进的，则段落数量加1\r\n        if (this.isNoIndent(i)) {\r\n          tempIndex++\r\n        }\r\n        tempIndex -= this.pageList[i].length\r\n        if (tempIndex < 0) return i\r\n      }\r\n    },\r\n    // 获取临近的颜色\r\n    getClosedColor(color, delta = 10) {\r\n      const adjust = (base, variation) => {\r\n        let mix = base + variation\r\n        if (mix < 0 || mix > 255) mix = base - variation\r\n        return mix\r\n      }\r\n      let rgb = color.replace(/#/g, \"\").match(/[\\da-z]{2}/gi)\r\n      rgb = rgb.map((item) => adjust(parseInt(item, 16), delta))\r\n      let result = \"#\" + rgb.reduce((sum, pre) => sum + (\"0\" + pre.toString(16)).slice(-2), \"\")\r\n      // console.log(result)\r\n      return result\r\n    },\r\n    // 颜色取反\r\n    reverseColor(color) {\r\n      let colorValue = \"0x\" + color.replace(/#/g, \"\")\r\n      let str = \"000000\" + (0xffffff - colorValue).toString(16)\r\n      return \"#\" + str.substring(str.length - 6, str.length)\r\n    },\r\n    // 颜色平均值取反\r\n    reverseAvgColor(colorA, colorB) {\r\n      let valueA = \"0x\" + colorA.replace(/#/g, \"\")\r\n      let valueB = 0xffffff - (\"0x\" + colorB.replace(/#/g, \"\"))\r\n      let str = \"000000\" + (0xffffff - ((valueA + valueB) / 2).toFixed(0)).toString(16)\r\n      return \"#\" + str.substring(str.length - 6, str.length)\r\n    },\r\n    // 返回本章指定某页某段(包含)之后的文本\r\n    getRestText(paraIndex, pageIndex = this.currentPage) {\r\n      let text = \"\"\r\n      this.pageList.forEach((page, index) => {\r\n        if (index >= pageIndex) {\r\n          page[index].forEach((para, index) => {\r\n            if (index >= paraIndex) text += para\r\n          })\r\n        }\r\n      })\r\n      return text\r\n    },\r\n    /** @description 返回限定长度的字符串，超出部分用...代替 */\r\n    limitText(text = \"\", limit) {\r\n      return text.length > limit ? text.slice(0, limit) + \"...\" : text\r\n    },\r\n    // 获取当前段落的文本\r\n    getCurrentParaText() {\r\n      const chapter = this.chapterList[this.currentChapter]\r\n      if (!chapter) return \"\"\r\n      const para = this.getParaIndexCh(this.currentPara)\r\n      return chapter.content[para]\r\n    },\r\n    //#endregion\r\n  },\r\n\r\n  //#region 计算属性\r\n  computed: {\r\n    // 本章全部文本按段落分到数组\r\n    list: {\r\n      get() {\r\n        //先判断是否有数据，直接return会卡死\r\n        if (this.chapterList && this.chapterList[this.currentChapter]) {\r\n          return this.chapterList[this.currentChapter].content\r\n        } else if (this.articleData && this.articleData.content) {\r\n          return this.articleData.content\r\n        } else return \"\"\r\n      },\r\n    },\r\n    // 本章总页数\r\n    pageTotal: function () {\r\n      return this.pageList.length\r\n    },\r\n    // 首行不缩进的段落文本\r\n    noIndentPara: function () {\r\n      if (this.isNoIndent(this.currentPage)) {\r\n        return this.pageList[this.currentPage][0]\r\n      }\r\n      return \"\"\r\n    },\r\n    // 首行不缩进段落之后的正常缩进的段落数组\r\n    indentParas: function () {\r\n      // let newArr = this.pageList[this.currentPage] //不能这样直接赋值\r\n      let newArr = []\r\n      for (let i in this.pageList[this.currentPage]) {\r\n        newArr.push(this.pageList[this.currentPage][i])\r\n      }\r\n      if (this.isNoIndent(this.currentPage)) newArr.shift()\r\n      return newArr\r\n    },\r\n    chapterListRendered: function () {\r\n      // const t1 = performance.now()\r\n      const total = this.chapterList.length\r\n      const len = this.catalogRenderMax //要渲染的列表长度\r\n      const start = Math.max(Math.floor(this.catalogScrollPercent * total) - len / 2, 0)\r\n      let newList = []\r\n      for (let i = start; i < start + len && i < total; i++) {\r\n        newList.push({ id: this.chapterList[i].id, title: this.chapterList[i].title })\r\n      }\r\n      // console.log(performance.now() - t1)\r\n      return newList\r\n    },\r\n  },\r\n  //#endregion\r\n\r\n  //#region 数据监听\r\n  watch: {\r\n    inReader: {\r\n      handler(val) {\r\n        if (val) {\r\n          //进入阅读器\r\n          const lastPosition = localStorage.getItem(\r\n            \"LASTPOSITION_\" + this.bookId,\r\n            JSON.stringify(this.lastPosition)\r\n          )\r\n          if (lastPosition) {\r\n            this.lastPosition = JSON.parse(lastPosition)\r\n            this.currentChapter = this.lastPosition.chapter\r\n            this.$nextTick(() => {\r\n              this.currentPage = this.getPageIndex(this.lastPosition.para)\r\n            })\r\n          } else {\r\n            this.currentChapter = 0\r\n            this.currentPage = 0\r\n          }\r\n        } else {\r\n          //离开阅读器\r\n          const start = this.hasNoIndentPara() && this.pageList[this.currentPage].length > 0 ? 1 : 0\r\n          this.lastPosition = { chapter: this.currentChapter, para: this.getParaIndexCh(start) }\r\n          localStorage.setItem(\"LASTPOSITION_\" + this.bookId, JSON.stringify(this.lastPosition))\r\n        }\r\n      },\r\n    },\r\n    list: {\r\n      handler(val) {\r\n        this.repaging(val) //生成分页数据\r\n      },\r\n    },\r\n    chapterList: {\r\n      handler() {\r\n        //加载书签和笔记\r\n        const notes = localStorage.getItem(\"NOTES_\" + this.bookId)\r\n        if (notes) this.notes = JSON.parse(notes)\r\n        const bookmarks = localStorage.getItem(\"BOOKMARKS_\" + this.bookId)\r\n        if (bookmarks) this.bookmarks = JSON.parse(bookmarks)\r\n        //初始化目录渲染参数\r\n        const after = this.chapterList.length - this.chapterListRendered.length\r\n        this.catalogAfterHeight = after * 30\r\n      },\r\n      immediate: true, //立即监视\r\n    },\r\n    bookId: {\r\n      handler() {\r\n        this.bookmarks = [] //换书时清空书签列表缓存\r\n        this.notes = [] //换书时清空笔记列表缓存\r\n      },\r\n    },\r\n    sizeSettings: {\r\n      handler() {\r\n        clearTimeout(this.sizeSettingsTimer) //清除定时器\r\n        this.sizeSettingsTimer = setTimeout(() => {\r\n          this.pageInit()\r\n          this.repage(this.list) //重新分页\r\n          localStorage.setItem(\"SIZE_SETTINGS\", JSON.stringify(this.sizeSettings))\r\n        }, 500)\r\n      },\r\n      deep: true, //开启深度监视\r\n    },\r\n    colorSettings: {\r\n      handler() {\r\n        localStorage.setItem(\"COLOR_SETTINGS\", JSON.stringify(this.colorSettings))\r\n      },\r\n      deep: true, //开启深度监视\r\n    },\r\n    speechOptions: {\r\n      handler() {\r\n        clearTimeout(this.speechOptionTimer) //清除定时器\r\n        this.speechOptionTimer = setTimeout(() => {\r\n          this.changeVoice()\r\n          localStorage.setItem(\"SPEECH_OPTIONS\", JSON.stringify(this.speechOptions))\r\n        }, 500)\r\n      },\r\n      deep: true, //开启深度监视\r\n    },\r\n    screenWidth() {\r\n      clearTimeout(this.screenSizeTimer) //清除定时器\r\n      this.screenSizeTimer = setTimeout(() => {\r\n        this.pageInit()\r\n        this.repage(this.list) //重新分页\r\n      }, 500)\r\n    },\r\n    screenHeight() {\r\n      clearTimeout(this.screenSizeTimer) //清除定时器\r\n      this.screenSizeTimer = setTimeout(() => {\r\n        this.pageInit()\r\n        this.repage(this.list) //重新分页\r\n      }, 500)\r\n    },\r\n    currentChapter(newValue, oldValue) {\r\n      // this.closePopover()\r\n      // this.$nextTick(() => this.setTextStyle())\r\n      this.progress = parseFloat(((newValue / this.chapterList.length) * 100).toFixed(1))\r\n      if (this.pageTurning === \"滚动\") {\r\n        this.$refs.readerBody.scrollTop = 0\r\n      } else if (\"覆盖平移拟真\".includes(this.pageTurning) && !this.turnLocked) {\r\n        this.turnLocked = true\r\n        this.animatePage(newValue < oldValue)\r\n        setTimeout(() => {\r\n          this.turnLocked = false\r\n        }, 100)\r\n      }\r\n    },\r\n    currentPage(newValue, oldValue) {\r\n      // this.closePopover()\r\n      // this.$nextTick(() => this.setTextStyle())\r\n      if (\"覆盖平移拟真\".includes(this.pageTurning) && !this.turnLocked) {\r\n        this.animatePage(newValue < oldValue)\r\n      }\r\n    },\r\n    indentParas() {\r\n      this.$nextTick(() => this.setTextStyle())\r\n    },\r\n    pageTurning(newValue, oldValue) {\r\n      if (newValue === \"滚动\" || oldValue === \"滚动\") {\r\n        this.pageInit()\r\n        this.repage(this.list)\r\n      }\r\n      localStorage.setItem(\"PAGE_TURNING\", this.pageTurning)\r\n    },\r\n  },\r\n  //#endregion\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n// 滚动条样式美化\r\n@mixin pretty-scrollbar {\r\n  //滚动条整体样式\r\n  ::-webkit-scrollbar {\r\n    width: 10px;\r\n    height: 10px;\r\n    background: #ccc;\r\n  }\r\n  //滚动条里面轨道\r\n  ::-webkit-scrollbar-track {\r\n    background: #999;\r\n  }\r\n  ::-webkit-scrollbar-track-piece {\r\n    background: #ccc;\r\n  }\r\n  //滚动条里面小方块\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #666;\r\n  }\r\n  ::-webkit-scrollbar-button {\r\n    background-color: #e5e5e5;\r\n  }\r\n  ::-webkit-scrollbar-corner {\r\n    background: #82afff;\r\n  }\r\n  ::-webkit-scrollbar-resizer {\r\n    background: #ff0bee;\r\n  }\r\n  // scrollbar {\r\n  //   -moz-appearance: none !important;\r\n  //   background: rgb(0, 255, 0) !important;\r\n  // }\r\n  // scrollbarbutton {\r\n  //   -moz-appearance: none !important;\r\n  //   background-color: rgb(0, 0, 255) !important;\r\n  // }\r\n  // scrollbarbutton:hover {\r\n  //   -moz-appearance: none !important;\r\n  //   background-color: rgb(255, 0, 0) !important;\r\n  // }\r\n}\r\n\r\n//菜单过渡动画\r\n.catalogFade-enter-to,\r\n.catalogFade-enter-active,\r\n.catalogFade-enter-from {\r\n  pointer-events: none;\r\n  animation-name: catalog_enter;\r\n  animation-duration: 0.3s;\r\n  // animation-fill-mode: forwards; //元素将保留由最后一个关键帧设置的样式值\r\n}\r\n.catalogFade-leave-to,\r\n.catalogFade-leave-active,\r\n.catalogFade-leave-from {\r\n  pointer-events: none;\r\n  animation-name: catalog_leave;\r\n  animation-duration: 0.3s;\r\n}\r\n@keyframes catalog_enter {\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n}\r\n@keyframes catalog_leave {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n  to {\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n//气泡卡片样式\r\n.el-popper + .is-light + .el-popover {\r\n  &.popover-search {\r\n    background-color: rgba(251, 251, 251, 0.1);\r\n    padding: 0;\r\n    text-align: center;\r\n  }\r\n  // &.popover-menu {\r\n  //   background-color: rgba(251, 251, 251, 0.1);\r\n  //   padding: 0;\r\n  //   text-align: center;\r\n  // }\r\n  // &.popover-settings {\r\n  //   // background-color: rgba(251, 251, 251, 0.1);\r\n  //   // padding: 0;\r\n  // }\r\n  background-color: rgba(251, 251, 251, 0.99);\r\n  border-radius: 10px;\r\n  // .el-popper__arrow {\r\n  //   display: none;\r\n  // }\r\n}\r\n\r\n.setting-slider {\r\n  .el-input-number {\r\n    width: 110px;\r\n  }\r\n}\r\n//选项设置界面样式\r\n.theme-setbar {\r\n  margin: 10px 0 60px 0;\r\n}\r\n.text-button {\r\n  margin-right: 2px;\r\n  padding: 8px 10px;\r\n  // border-radius: 0px;\r\n  cursor: pointer;\r\n}\r\n.el-color-picker {\r\n  margin: 0 20px;\r\n}\r\n.color-setbar {\r\n  margin: 0px 0 40px 0;\r\n}\r\n.color-button {\r\n  border: 1px solid #dddddd;\r\n}\r\n\r\n.menu-button {\r\n  margin: 5px 0;\r\n  width: 170px;\r\n}\r\n.menu-button-short {\r\n  margin: 5px 0;\r\n  width: 80px;\r\n}\r\n.popmenu-title {\r\n  background: linear-gradient(to right, #99999960, #cccccc60);\r\n  border-radius: 0px 5px 5px 10px;\r\n  padding-top: 2px;\r\n  span {\r\n    margin-left: 10px;\r\n    font-size: 14px;\r\n  }\r\n}\r\n\r\n//主界面按钮样式\r\n.body-button-container {\r\n  position: relative;\r\n  .body-button {\r\n    // background-color: red;\r\n    position: absolute;\r\n    width: 40px;\r\n    height: 100px;\r\n    -moz-user-select: none; //防止选取元素的文本（Firefox用）\r\n    user-select: none; //防止选取元素的文本（IE和Chrome用）\r\n    color: rgba(255, 255, 255, 0.3); //前景色和透明度\r\n    background-color: rgba(128, 128, 128, 0); //背景色和透明度\r\n    // opacity: 0; //初始透明度设为0\r\n    &:hover {\r\n      // opacity: 0.15; //鼠标悬浮时透明度\r\n      color: rgba(255, 255, 255, 0.5); //前景色和透明度\r\n      background-color: rgba(128, 128, 128, 0.15); //背景色和透明度\r\n    }\r\n    &:active {\r\n      // opacity: 0.3; //鼠标点击时透明度\r\n      color: rgba(255, 255, 255, 0.7); //前景色和透明度\r\n      background-color: rgba(128, 128, 128, 0.3); //背景色和透明度\r\n    }\r\n    &.catalog {\r\n      width: 50px;\r\n      height: 50px;\r\n      left: 0;\r\n      border-radius: 0px 10px 0px 10px;\r\n    }\r\n    &.goback {\r\n      width: 50px;\r\n      height: 50px;\r\n      left: 0;\r\n      border-radius: 10px 0px 10px 0px;\r\n    }\r\n    &.settings {\r\n      width: 50px;\r\n      height: 50px;\r\n      right: 0;\r\n      border-radius: 0px 10px 0px 10px;\r\n    }\r\n    &.voice {\r\n      width: 50px;\r\n      height: 50px;\r\n      right: 0;\r\n      border-radius: 10px 0px 10px 0px;\r\n    }\r\n    &.search {\r\n      width: 100px;\r\n      height: 40px;\r\n      transform: translate(-50%, 0);\r\n      border-radius: 0px 0px 10px 10px;\r\n    }\r\n    &.progress {\r\n      width: 100px;\r\n      height: 40px;\r\n      transform: translate(-50%, 0);\r\n      border-radius: 10px 10px 0px 0px;\r\n    }\r\n    &.home {\r\n      color: rgb(201, 201, 201, 0.6); //前景色和透明度\r\n      background-color: rgba(255, 255, 255, 0.1); //背景色和透明度\r\n      box-shadow: inset 0 0 4px 1px rgb(150 150 150 / 40%); //内阴影\r\n      border: 1px solid #fafafa;\r\n      width: 60px;\r\n      height: 28px;\r\n      transform: translate(-50%, 114%);\r\n      border-radius: 15px 15px 15px 15px;\r\n      &:hover {\r\n        color: rgb(201, 201, 201, 0.3); //前景色和透明度\r\n        background-color: rgba(255, 255, 255, 0.3); //背景色和透明度\r\n        box-shadow: inset 0 0 2px 1px rgb(150 150 150 / 30%); //内阴影\r\n      }\r\n    }\r\n    &.prevpage {\r\n      left: 0;\r\n      transform: translate(0, -50%);\r\n      border-radius: 0px 20px 20px 0px;\r\n    }\r\n    &.nextpage {\r\n      right: 0;\r\n      transform: translate(0, -50%);\r\n      border-radius: 20px 0px 0px 20px;\r\n    }\r\n    &.prevchapter {\r\n      width: 50px;\r\n      height: 40px;\r\n      top: 0;\r\n      transform: translate(-50%, 0);\r\n      border-radius: 0px 0px 10px 10px;\r\n    }\r\n    &.nextchapter {\r\n      width: 50px;\r\n      height: 40px;\r\n      top: 0;\r\n      transform: translate(-50%, 0);\r\n      border-radius: 0px 0px 10px 10px;\r\n    }\r\n    //按钮内部图标样式\r\n    .body-button-icon {\r\n      color: inherit;\r\n      position: absolute;\r\n      left: 50%;\r\n      top: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  }\r\n}\r\n\r\n//目录窗体样式\r\n.catalog-container {\r\n  @include pretty-scrollbar;\r\n  position: absolute;\r\n  // width: calc(50% - 20px);\r\n  // min-width: 320px;\r\n  max-width: 600px;\r\n  padding: 10px 0px 10px 0px;\r\n  resize: horizontal;\r\n  background-color: #8aa6b9;\r\n  // box-shadow: var(--el-box-shadow-light);\r\n  box-shadow: 2px 0px 4px 1px rgb(128 131 137 / 30%); //水平偏移 竖向偏移 模糊距离 阴影大小 颜色\r\n  border-radius: 10px;\r\n  opacity: 0.99;\r\n  text-align: left;\r\n  .catalog-button {\r\n    margin-left: 10px;\r\n    &:hover {\r\n      color: #1e90ff;\r\n    }\r\n  }\r\n  .catalog-title {\r\n    margin-left: 10px;\r\n    font-size: 20px;\r\n    display: inline-block;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n  .catalog-tabs {\r\n    background-color: #a1b3c0; //#a1b3c0\r\n    border: 0;\r\n    //目录条目\r\n    .catalog-item {\r\n      // transform: translate3d(0, 0, 0); //强制GPU加速\r\n      position: relative;\r\n      padding: 6px 0 4px 0;\r\n      font-size: 16px;\r\n      height: 30px; //这里限制一下高度，不要根据字号自动计算\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n      cursor: pointer;\r\n      color: #252525;\r\n      &:hover {\r\n        // color: #1e90ff; //模板中动态绑定了颜色，这里不生效了\r\n        background: #90a9c2;\r\n      }\r\n      //利用前面伪元素留空白（不在元素上直接设margin是因为后面画的线不要空白）\r\n      &:before {\r\n        content: \"\";\r\n        margin-right: 20px; //空出20px\r\n      }\r\n      //后面画线\r\n      &:after {\r\n        display: block;\r\n        content: \"\";\r\n        position: absolute; //定位背景横线的位置\r\n        width: 100%; //宽和⾼做出来的背景横线\r\n        height: 1px;\r\n        transform: ScaleY(0.5); //减0.5变成0.5px的线\r\n        background: #999999;\r\n        top: 29px;\r\n      }\r\n    }\r\n    //书签条目\r\n    .bookmark-item {\r\n      cursor: pointer;\r\n      position: relative;\r\n      padding: 6px 0 4px 0;\r\n      font-size: 15px;\r\n      color: #252525;\r\n      &:hover {\r\n        color: #1e90ff;\r\n        background: #90a9c2;\r\n      }\r\n      .bookmark-item-title {\r\n        margin: 5px 0;\r\n        padding-left: 20px;\r\n        span {\r\n          display: inline-block; //文字超出省略需在块元素中\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n        }\r\n      }\r\n      .bookmark-item-small-text {\r\n        // margin: 5px 0;\r\n        padding-left: 20px;\r\n        padding-right: 10px;\r\n        color: #777777;\r\n        font-size: 12px;\r\n        height: 15px;\r\n        // text-align: right;\r\n      }\r\n      .bookmark-item-preview {\r\n        margin: 5px 0;\r\n        padding-left: 20px;\r\n        padding-right: 10px;\r\n        color: #666666;\r\n        font-size: 14px;\r\n        height: 30px;\r\n        text-indent: 2em;\r\n        // width: 360px;\r\n        // display: -webkit-box;\r\n        // -webkit-line-clamp: 2;\r\n        // -webkit-box-orient: vertical;\r\n        // overflow: hidden;\r\n        // text-overflow: ellipsis;\r\n        // white-space: nowrap;\r\n      }\r\n      //后面画线\r\n      &:after {\r\n        content: \"\";\r\n        display: block;\r\n        position: absolute; //定位背景横线的位置\r\n        width: 100%; //宽和⾼做出来的背景横线\r\n        height: 1px;\r\n        transform: ScaleY(0.5); //减0.5变成0.5px的线\r\n        background: #999999;\r\n        top: 95px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n//阅读器样式\r\n.reader-container {\r\n  @include pretty-scrollbar;\r\n  position: relative;\r\n  padding: 6px 10px 36px 10px; //阅读器边框大小\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  // background: linear-gradient(225deg, #ccc8c8, #f3eeee);//渐变色\r\n  box-shadow: 1px 1px 8px 2px rgb(128 131 137 / 50%); //水平偏移 竖向偏移 模糊距离 阴影大小 颜色\r\n  border-radius: 15px;\r\n  transform-style: preserve-3d;\r\n  -webkit-transform-style: preserve-3d;\r\n  -moz-transform-style: preserve-3d;\r\n  -ms-transform-style: preserve-3d;\r\n  perspective: 5000px; //透视距离\r\n  // 头部样式\r\n  .reader-head {\r\n    // margin-bottom: 4px;\r\n    margin-left: 10px;\r\n    font-size: 15px;\r\n    height: 24px;\r\n    color: gray;\r\n    text-align: left;\r\n    .header-text {\r\n      // float: left;\r\n      margin-left: 10px;\r\n      width: 300px;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n    } //设置头部标签最大宽度，超出部分显示省略号\r\n  }\r\n  // 正文样式\r\n  .reader-body {\r\n    // font-variant-east-asian: traditional;\r\n    // -webkit-font-smoothing: subpixel-antialiased;\r\n    // -moz-osx-font-smoothing: grayscale;\r\n    border-radius: 10px;\r\n    // text-align: left;\r\n    text-align: justify; //文本两端对齐(调试时注释掉以便查看排版)\r\n    text-indent: 2em;\r\n    white-space: pre-wrap; //保留空白符序列，但是正常地进行换行\r\n    word-wrap: break-word; //允许在长单词或URL地址内部进行换行\r\n    word-break: break-all; //允许在单词内换行\r\n    box-shadow: inset 1px 1px 5px 1px rgb(128 131 137 / 50%); //内阴影\r\n    // background-image: radial-gradient(#f5dab8 10%, transparent 0),\r\n    //   radial-gradient(#f5dab8 50%, transparent 0);\r\n    // background-size: 20px 20px;\r\n    // background-position: 0 0, 10px 10px;\r\n    backface-visibility: hidden; //元素背面向屏幕时是否可见\r\n    // transform-origin: left;\r\n    // -ms-transform-origin-x: left;\r\n    // -webkit-transform-origin-x: left;\r\n    // perspective-origin: center;\r\n  }\r\n  // 底部样式\r\n  .reader-foot {\r\n    text-align: left;\r\n    margin-left: 10px;\r\n    .footer-text {\r\n      font-size: 14px;\r\n      color: gray;\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n}\r\n\r\n//电脑端样式\r\n@media screen and (min-width: 1081px) {\r\n}\r\n\r\n//手机端样式\r\n@media screen and (max-width: 1080px) {\r\n  //手机端调整一下app-container\r\n  .app-container {\r\n    padding: 10px 0 0 0;\r\n  }\r\n  .reader-container {\r\n    // 头部样式\r\n    .reader-head {\r\n      font-size: 14px;\r\n      color: gray;\r\n      .header-text {\r\n        width: 260px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","export default {\n  //定义常量（非响应式）\n  beforeCreate() {\n    this.pageTurningModes = [\"无\", \"覆盖\", \"平移\", \"拟真\", \"滚动\"]\n    this.fonts = [\n      \"Arial\",\n      \"楷体\",\n      \"宋体\",\n      \"黑体\",\n      \"方正楷体_GBK\",\n      \"方正楷体_简体\",\n      \"思源宋体_中\",\n      \"思源宋体_细\",\n      \"思源黑体_粗\",\n      \"思源黑体_常规\",\n      \"思源黑体_细\",\n      \"思源黑体_极细\",\n      \"思源柔黑_中\",\n      \"思源柔黑_细\",\n      \"思源柔黑_极细\",\n    ]\n    this.textColors = [\n      \"#000000\",\n      \"#3D3D3D\",\n      \"#555555\",\n      \"#336699\",\n      \"#336666\",\n      \"#990033\",\n      \"#FF6666\",\n      \"#ffd04b\",\n      \"#FFCCCC\",\n      \"#FAFAFA\",\n    ]\n    this.bgColors = [\n      \"#EEE0C6\",\n      \"#CCEACC\",\n      \"#FAFAFA\",\n      \"#EFEFEF\",\n      \"#CCCCCC\",\n      \"#669999\",\n      \"#F0DAD2\",\n      \"#6699CC\",\n      \"#282828\",\n      \"#000000\",\n    ]\n    this.borderColors = [\n      \"#EEE0C6\",\n      \"#CCEACC\",\n      \"#FAFAFA\",\n      \"#EFEFEF\",\n      \"#CCCCCC\",\n      \"#669999\",\n      \"#F0DAD2\",\n      \"#6699CC\",\n      \"#282828\",\n      \"#000000\",\n    ]\n    this.bgTextures = [\n      require(\"../images/paper01.jpg\"),\n      require(\"../images/paper02.png\"),\n      require(\"../images/paper03.png\"),\n      require(\"../images/paper04.png\"),\n      require(\"../images/paper05.png\"),\n    ]\n    this.predefineColors = [\n      \"#ff4500\",\n      \"#ff8c00\",\n      \"#ffd700\",\n      \"#90ee90\",\n      \"#00ced1\",\n      \"#1e90ff\",\n      \"#c71585\",\n      \"rgba(255, 69, 0, 0.68)\",\n      \"rgb(255, 120, 0)\",\n      \"hsv(51, 100, 98)\",\n      \"hsva(120, 40, 94, 0.5)\",\n      \"hsl(181, 100%, 37%)\",\n      \"hsla(209, 100%, 56%, 0.73)\",\n      \"#c7158577\",\n    ]\n    this.markedColors = [\n      \"#ff000020\",\n      \"#ff450060\",\n      \"#ff8c0060\",\n      \"#ffd70060\",\n      \"#90ee9060\",\n      \"#00ced160\",\n      \"#1e90ff60\",\n      \"#c7158560\",\n      \"rgba(255, 69, 0, 0.68)\",\n      \"hsl(181, 100%, 37%)\",\n      \"hsla(209, 100%, 56%, 0.73)\",\n      \"#42b983\",\n    ]\n  },\n}\n","export default {\n  // data() {\n  //   return {\n  //     canvasContext: this.getCanvasContext(),\n  //   }\n  // },\n  beforeMount() {\n    this.canvasContext = document.createElement(\"canvas\").getContext(\"2d\")\n  },\n  methods: {\n    //#region 分页处理\n\n    /** @description 重新分页 */\n    repage(paraList) {\n      // const percent = this.getParaIndexCh(0) / Math.max(this.list.length, 1) //记录当前章节阅读百分比\n      this.repaging(paraList) //更新分页数据\n      // this.currentPage = this.getPageIndex(Math.ceil(this.list.length * percent)) //还原当前章节阅读进度\n    },\n\n    // 页面排版原理：\n    // 1. 行间距上下各一半，按本行字号计算。字号不同的行之间，行间距各取一半相加。\n    // 2. 段间距会取相邻两段的段间距比较，取较大者。\n    /** @description 分页处理过程 */\n    repaging(paraList) {\n      // var timeStart = performance.now()\n      this.pageList = [] //清空页面数组\n      this.currentPage = 0 //当前页面重置为0\n      this.noIndent = [] //清空数组\n\n      const debug = false\n      if (debug) console.log(\">>>>>>>>>>>>> REPAIGING START >>>>>>>>>>>>>\") //调试\n\n      let paras = [] //当前页段落数组\n      let previosHeight = 0 //上一次累计高度\n      let currentHeight = 0 //当前累计高度\n      let paraLines = 0 //段落行数\n      let paraIndex = 0 //本页段落索引（从0开始）\n      let paraText = \"\" //段落文本\n      let indent = 2 //首行缩进（字宽倍数，默认为2）\n\n      const lineWidth = this.textareaWidth\n      const maxHeight = this.textareaHeight //正文区域最大高度（影响文字最大显示行数）\n      const fontSize = this.sizeSettings.fontSize\n      const paraSpace = fontSize * this.sizeSettings.paraSpace //段间距(与页面模板对应)\n      const getFontSize = () => {\n        if (paraIndex === 0) return fontSize * this.sizeSettings.titleScale\n        else return fontSize\n      } //获取字号\n      const getLineHeight = () => {\n        return getFontSize() * this.sizeSettings.lineHeight\n      } //获取行高\n\n      if (debug) console.log(\"lineHeight =\", getLineHeight(), \", maxHeight =\", maxHeight) //调试\n\n      //循环遍历各段落 START\n      while (paraIndex < paraList.length) {\n        if (debug) console.log(\">>>>>> PARA START >>>>>>\") //调试\n        previosHeight = currentHeight //记一下之前的累计高度\n        //开始新段落，如果不是本页首段并且上边距设置大于0，段间距加入累计\n        if (paras.length > 0 || this.sizeSettings.paddingTop > 0) currentHeight += paraSpace\n        //如果上一轮开启了新页面且分配了大段落（超出页面行数限制）给新页面\n        if (paras.length == 1 && currentHeight >= maxHeight) {\n          paraText = paras[0]\n          paras = [] //上一轮分到的段落太大，清空重新分析\n          paraLines = this.getParaLines(paraText, lineWidth, getFontSize(), indent * fontSize) //本次段落行数\n          previosHeight = 0\n        } else {\n          //否则读取新段落\n          indent = 2 //恢复首行缩进为2倍字宽\n          paraText = paraList[paraIndex]\n          paraLines = this.getParaLines(paraText, lineWidth, getFontSize(), indent * fontSize) //本次段落行数\n          currentHeight += getLineHeight() * paraLines //当前累计高度\n        }\n        // if (paraText.indexOf(\"陈二狗靠着墙\")) debug = true\n        if (debug) console.log(\"paraText\", paraText) //调试\n        if (debug) console.log(\"fontSize = \", getFontSize()) //调试\n        if (debug) console.log(\"lineWidth = \", lineWidth) //调试\n        if (debug) console.log(\"lineHeight = \", getLineHeight()) //调试\n        if (debug) console.log(\"paraSpace = \", paraSpace) //调试\n        if (debug) console.log(\"paraLines =\", paraLines) //调试\n        if (debug) console.log(\"previosHeight = \", previosHeight) //调试\n        if (debug) console.log(\"currentHeight1 = \", currentHeight) //调试\n        if (debug && paraText[0] === undefined) {\n          console.log(\"第\", this.pageList.length, \"页 第\", paras.length + 1, \"段之前出现 undefined\")\n        }\n        //如果当前累计高度小于正文区域最大高度\n        if (currentHeight < maxHeight) {\n          //把当前段落的文本添加到当前页面\n          paras.push(paraText)\n          //如果是最后的段落，循环就要终止了，保存最后一部分数据\n          if (paraList.length === paraIndex + 1) {\n            this.pageList.push(paras) //保存数据\n          }\n        } else {\n          //算出底部剩余空间能放多少行\n          const spareLines = Math.floor((maxHeight - previosHeight - paraSpace) / getLineHeight())\n          if (debug) console.log(\"****** spareLines\", spareLines) //调试\n          //三种情况：全部放入下一页；切分；全部放入本页\n          if (spareLines < 1) {\n            if (debug) console.log(\"spareLines < 1\") //调试\n            //全部放入下一页\n            //保存数据，本页分配结束\n            this.pageList.push(paras)\n            //新页面添加段落全部文本，作为开头\n            paras = [paraText]\n            //★如果是最后的段落，循环就要终止了，保存最后一部分数据\n            if (paraList.length === paraIndex + 1) {\n              this.pageList.push(paras) //保存数据\n            }\n            //本段高度计入新页面的currentHeight，如果页面上边距不为0上面还要加个段间距\n            currentHeight =\n              paraLines * getLineHeight() + (this.sizeSettings.paddingTop > 0 ? paraSpace : 0)\n          } else {\n            if (debug) console.log(\"spareLines >= 1\") //调试\n            let sliceIndex = this.getSliceIndex(\n              paraText,\n              lineWidth,\n              getFontSize(),\n              indent * fontSize,\n              spareLines\n            )\n            if (debug) console.log(\"sliceText\", paraText.slice(0, sliceIndex)) //调试\n            if (sliceIndex < paraText.length) {\n              if (debug) console.log(\"sliceIndex < paraText.length\") //调试\n              //切分段落前一部分给本页，作为本页结尾\n              paras.push(paraText.slice(0, sliceIndex))\n              //保存数据，本页分配结束\n              this.pageList.push(paras)\n              //下一页首段首行不缩进，记录其索引\n              this.noIndent.push(this.pageList.length)\n              //下一段首行缩进设为0\n              indent = 0\n              //新页面添加分割段落后一部分的文本，作为开头\n              paras = [paraText.slice(sliceIndex)]\n              //计算本段后一部分的行数\n              paraLines = this.getParaLines(paras[0], lineWidth, getFontSize(), indent * fontSize)\n              //本段后一部分的高度计入新页面的currentHeight，如果页面上边距不为0上面还要加个段间距\n              currentHeight =\n                paraLines * getLineHeight() + (this.sizeSettings.paddingTop > 0 ? paraSpace : 0)\n              //如果本段后一部分高度超过新页面最大高度\n              if (currentHeight >= maxHeight) {\n                paraIndex-- //大段落，下一轮要继续处理，不读取新段落，所以段落索引减1\n              } else {\n                //★如果是最后的段落，循环就要终止了，保存最后一部分数据\n                if (paraList.length === paraIndex + 1) this.pageList.push(paras) //保存数据\n              }\n            } else {\n              if (debug) console.log(\"sliceIndex >= paraText.length\") //调试\n              //全部放入本页\n              paras.push(paraText)\n              //保存数据\n              this.pageList.push(paras)\n              //清空当前页面数据，形成新页面\n              paras = []\n              //重置新页面的currentHeight为0\n              currentHeight = 0\n            } //切分位置判断结束\n          } //空行判断结束\n        } //累计高度判断结束\n        if (debug) console.log(\"currentHeight2 = \", currentHeight) //调试\n        if (debug) console.log(\">>>>>> PARA END >>>>>>\") //调试\n        paraIndex++\n      }\n      //循环遍历各段落 END\n      // var timeEnd = performance.now()\n      // if (this.device === \"desktop\") {\n      //   console.log(\"repaging 耗时\", `${(timeEnd - timeStart).toFixed(2)}ms`)\n      // }\n      // else alert(\"repaging耗时\" + `${(timeEnd - timeStart).toFixed(2)}ms`)\n    },\n\n    /** @description 根据指定的行数获取分割的位置 */\n    getSliceIndex(text, lineWidth, fontSize, indentWidth, limitLines) {\n      return this.calcParaLayout(text, lineWidth, fontSize, indentWidth, limitLines)\n    },\n\n    /** @description 获取段落的行数 */\n    getParaLines(text, lineWidth, fontSize, indentWidth) {\n      return this.calcParaLayout(text, lineWidth, fontSize, indentWidth)\n    },\n\n    /** @description 计算段落布局。如果限定行数，则返回分割的位置，否则返回段落的行数。 */\n    calcParaLayout(text, lineWidth, fontSize, indentWidth, limitLines = 0) {\n      const debug = false //text.indexOf(\"雷达峰有许多神秘的传说\") > -1\n      const nonFrontChars = \",.?;:)}]，。？；：’”）】』》、…\" //不能放在行首的字符\n      const nonBackChars = \"({[‘“（【『《\" //不能放在行末的字符\n      const nonBreakChars = \"—…\" //不能分行断开的字符串\n      const textLength = text.length\n      if (text[0] === undefined) return 0 //特殊情况处理\n      let width = 0\n      let lines = 1\n      let index = 0\n      let preIndex = 0\n      let currentWidth = indentWidth\n\n      /* 性能优化2022-11-09 性能优化约70% */\n      /* 每行开始前预读一批字符，避免从头逐个循环 */\n      //每行初始计算的字符数量，减2是因为可能会遇到特殊字符回退计算的情况\n      const preload = Math.floor(lineWidth / fontSize) - 4\n      index += preload - 2\n      //此处slice的时候index不用加1，因为后面没跟index++，直接计算此时index位的宽度\n      currentWidth += this.measureText(text.slice(preIndex, index), fontSize)\n      /* 性能优化2022-11-09 */\n\n      while (index < textLength) {\n        width = this.measureText(text[index], fontSize)\n        if (debug) console.log(\"text[index]\", text[index]) //调试\n        if (debug) console.log(currentWidth, lineWidth, width) //调试\n        //注意用 <= ，因为极端情况下刚好排满也是不换行的\n        if (currentWidth <= lineWidth - width) {\n          currentWidth += width\n        } else {\n          //准备换行了\n          let temp = 0 //引入temp计数防止死循环\n          //如果行末是不能收尾的特殊字符，则回退一位，直到行末不是特殊字符或者超出限制\n          while (nonBackChars.indexOf(text[index - 1]) > -1 && index > 1 && temp < 5) {\n            if (debug) console.log(\"nonBackChars text[index-1]\", text[index - 1]) //调试\n            index--\n            temp++\n          }\n          temp = 0 //重置temp\n          //如果下一行首位是不能开头的特殊字符，则回退一位，直到下一行首位不是特殊字符或者超出限制\n          while (nonFrontChars.indexOf(text[index]) > -1 && index > 0 && temp < 5) {\n            if (debug) console.log(\"nonFrontChars text[index]\", text[index]) //调试\n            index--\n            temp++\n          }\n          temp = 0 //重置temp\n          //如果下一行首位与本行末是必须在同一行连贯的字符，则回退一位\n          while (\n            nonBreakChars.indexOf(text[index]) > -1 &&\n            text[index] === text[index - 1] &&\n            index > 1 &&\n            temp < 5\n          ) {\n            if (debug) console.log(\"nonBreakChars text[index]\", text[index]) //调试\n            index--\n            temp++\n          }\n          //可以换行了\n          if (debug) console.log(\"lineText\", text.slice(preIndex, index)) //调试\n          if (debug) console.log(\"currentWidth\", currentWidth) //调试\n          preIndex = index\n          if (limitLines > 0 && lines >= limitLines) break\n          lines++ //行数+1\n\n          /* 性能优化2022-11-09 */\n          index += preload\n          //此处slice的时候index要加1，否则后面紧跟的index++会使此时的index被跳过\n          currentWidth = this.measureText(text.slice(preIndex, index + 1), fontSize)\n          /* 性能优化2022-11-09 */\n        }\n        index++\n      }\n      if (debug) console.log(\"lines =\", lines)\n      return limitLines > 0 ? index : lines\n    },\n\n    // 获取Canvas上下文\n    // getCanvasContext() {\n    //   const canvas = document.createElement(\"canvas\")\n    //   const context = canvas.getContext(\"2d\")\n    //   return context\n    // },\n\n    // 利用Canvas测算字符串宽度\n    measureText(val, fontSize) {\n      // 方法一，用Canvas测量字符串宽度\n      const fontFamily = this.sizeSettings.fontFamily\n      const font = `${fontSize}px ${fontFamily}`\n      this.canvasContext.font = font\n      const { width } = this.canvasContext.measureText(val)\n      return width\n      // 方法二，适用于单字节字符宽度等于双字节字符一半的情况\n      // if (!val || !val.length) return 0\n      // let singleArr = val.match(/[^\\x00-\\xff]/gi) //eslint-disable-line\n      // return val.length + (singleArr ? singleArr.length : 0) * fontSize\n    },\n    //#endregion\n\n    //#region 分页处理废弃算法\n    // 分页处理(算法一)\n    // pageDataHandleA(paraList) {\n    //   this.pageList = [] //清空页面数组\n    //   this.currentPage = 0 //当前页面重置为0\n    //   this.noIndent = [] //清空数组\n    //   const lineWords = Math.floor((this.textareaWidth / this.sizeSettings.fontSize) * 2) //行最大字节数\n    //   const lineHeight = this.sizeSettings.fontSize * this.sizeSettings.lineHeight //行高度\n    //   const maxHeight = this.textareaHeight //正文区域最大高度（影响文字最大显示行数）\n    //   const paraSpace = this.sizeSettings.paraSpace * this.sizeSettings.fontSize //段间距\n    //   let paras = [] //当前页累计文本\n    //   let previosHeight = 0 //上一次累计高度\n    //   let currentHeight = 0 //当前累计高度\n    //   let paraLines = 0 //段落行数\n    //   let paraIndex = 0 //本页段落索引（从0开始）\n    //   //这里不要用 while (paraList[paraIndex])，数组元素可能有undefined值，导致循环意外终止\n    //   // paraList[paraIndex] != null && paraList[paraIndex] != undefined\n    //   while (paraIndex < paraList.length) {\n    //     const paraText = paraList[paraIndex]\n    //     paraLines = Math.ceil((this.getByteLength(paraText) + 4) / lineWords) //本次段落行数\n    //     previosHeight = currentHeight //记一下之前的累计高度\n    //     currentHeight += lineHeight * paraLines //当前累计高度\n    //     //如果当前累计高度小于正文区域最大高度\n    //     if (currentHeight < maxHeight) {\n    //       //把当前段落的文本添加到当前页面\n    //       paras.push(paraText)\n    //       //如果是最后的段落，循环就要终止了\n    //       if (paraList.length == paraIndex + 1) {\n    //         this.pageList.push(paras) //保存数据\n    //       }\n    //     } else {\n    //       //本页最后一段能显示的文字数量\n    //       let divideIndex =\n    //         Math.floor((maxHeight - previosHeight - paraSpace) / lineHeight) * lineWords - 4\n    //       //当剩余高度过小出现负数，不再进行段落分割\n    //       if (divideIndex < 0) {\n    //         divideIndex = 0\n    //       } else {\n    //         divideIndex = this.convertByteLength(paraText, divideIndex)\n    //       }\n    //       //当前页面添加分割段落前半部分的文本，作为结尾\n    //       paras.push(paraText.slice(0, divideIndex))\n    //       //添加到页面数组中，保存数据\n    //       this.pageList.push(paras)\n    //       paras = [] //清空当前页面数据，形成新页面\n    //       if (paraText.length > divideIndex + 1) {\n    //         //新页面添加分割段落后半部分的文本，作为开头\n    //         paras.push(paraText.slice(divideIndex))\n    //         //如果段落进行了切割，则下一页首段首行不缩进，记录下一页索引\n    //         if (divideIndex > 0) this.noIndent.push(this.pageList.length)\n    //         //分割段落后半部分的高度作为新页面的currentHeight\n    //         currentHeight =\n    //           Math.ceil(this.getByteLength(paras[0]) / lineWords) * lineHeight\n    //       } else {\n    //         currentHeight = 0 //重置新页面的currentHeight为0\n    //       }\n    //     }\n    //     currentHeight += paraSpace //准备下一段，段间距加入累计\n    //     paraIndex++\n    //   } //循环遍历各段落\n    // },\n    // // 得到字节长度\n    // getByteLength(text) {\n    //   if (!text || !text.length) return 0\n    //   // 方法一（不全面）\n    //   // let singleArr = text.match(/[a-zA-Z0-9,;.!@#-+/\\\\$%^*()<>?:\"“”'{}~]/gi)\n    //   // return text.length * 2 - (singleArr ? singleArr.length : 0)\n    //   // 方法二（不全面，中文标点未识别）\n    //   // let singleArr = text.match(/[\\u4e00-\\u9fa5\\uf900-\\ufa2d]/g)\n    //   // return text.length + (singleArr ? singleArr.length : 0)\n    //   // 方法三(匹配Ascii码大于255的字符，即双字节的字符)\n    //   let singleArr = text.match(/[^\\x00-\\xff]/gi) //eslint-disable-line\n    //   return text.length + (singleArr ? singleArr.length : 0)\n    // },\n    // // 计算出相应文本中对应字节长度的的字符长度\n    // convertByteLength(text, byteLength) {\n    //   let tempLength = Math.floor(byteLength / 2) //当前字符长度\n    //   let tempByteLength = this.getByteLength(text.slice(0, tempLength)) //计算对应当前字符长度的字节长度\n    //   let prevByteLength = 0 //上一轮字节长度\n    //   // console.log(\"byteLength = \", byteLength) //调试\n    //   // console.log(\"tempLength = \", tempLength) //调试\n    //   // console.log(\"tempByteLength = \", tempByteLength) //调试\n    //   // 未超出指定字节长度范围，且字节长度有所增长(避免死循环)\n    //   while (tempByteLength < byteLength - 1 && prevByteLength < tempByteLength) {\n    //     tempLength += Math.floor((byteLength - tempByteLength) / 2) //二分法得出下一轮字符长度\n    //     prevByteLength = tempByteLength //记录上一轮字节长度\n    //     tempByteLength = this.getByteLength(text.slice(0, tempLength)) //计算对应本轮字符长度的字节长度\n    //     // console.log(\"tempLength = \", tempLength, \", tempByteLength = \", tempByteLength) //调试\n    //   }\n    //   return tempLength\n    // },\n    //#endregion\n  },\n}\n","//SpeechSynthesisUtterance的缺陷\n//原理是利用机器自带的TTS引擎或浏览器的在线TTS引擎（chrome用谷歌TTS，edge用Azure TTS）\n//遗憾的是，移动端基本没有本机引擎\n\nexport default {\n  methods: {\n    //#region 语音朗读\n\n    /** @description 获取朗读焦点段落的颜色 */\n    getFocusColor(colorA, colorB, colorC = \"#DD66CC\", delta = 10) {\n      const adjust = (base, variation) => {\n        let mix = base + variation\n        if (mix < 0 || mix > 255) mix = base - variation\n        return mix\n      }\n      const fix = (a, b, c) => {\n        if (Math.abs(a - c) < delta) c = adjust(a, delta)\n        if (Math.abs(b - c) < delta) c = adjust(c, delta)\n        return c\n      }\n      let rgbA = colorA.replace(/#/g, \"\").match(/[\\da-z]{2}/gi)\n      let rgbB = colorB.replace(/#/g, \"\").match(/[\\da-z]{2}/gi)\n      let rgbC = colorC.replace(/#/g, \"\").match(/[\\da-z]{2}/gi)\n      rgbA = rgbA.map((item) => parseInt(item, 16))\n      rgbB = rgbB.map((item) => parseInt(item, 16))\n      rgbB = rgbC.map((item) => parseInt(item, 16))\n      let rgb = [\n        fix(rgbA[0], rgbB[0], rgbC[0]),\n        fix(rgbA[1], rgbB[1], rgbC[1]),\n        fix(rgbA[2], rgbB[2], rgbC[2]),\n      ]\n      // console.log(rgb)\n      let result = \"#\" + rgb.reduce((sum, pre) => sum + (\"0\" + pre.toString(16)).slice(-2), \"\")\n      // console.log(result)\n      return result\n    },\n\n    /** @description 获取段落文本颜色 */\n    getParaTextColor(index) {\n      //用isSpeaking不用speechSynthesis.speaking是因为Vue在某些情况下\n      //不能及时监测到speechSynthesis.speaking值的变化，导致段落文字亮显状态未更新\n      if (\n        this.isSpeaking &&\n        this.readingPara == this.getParaIndexCh(index) &&\n        this.readingChapter == this.currentChapter\n      ) {\n        return this.getFocusColor(\n          this.colorSettings.textColor,\n          this.colorSettings.bgColor,\n          \"#DD66CC\"\n        )\n      }\n    },\n\n    /** @description 获取文字阴影 */\n    getTextShadow(index) {\n      if (\n        this.isSpeaking &&\n        this.readingPara == this.getParaIndexCh(index) &&\n        this.readingChapter == this.currentChapter\n      ) {\n        return \"1px 1px 1px #999999\"\n      } else {\n        return \"0 0 0\"\n      }\n    },\n\n    /** @description 获取段落背景颜色 */\n    getParaBgColor(index) {\n      if (\n        this.isSpeaking &&\n        this.readingPara == this.getParaIndexCh(index) &&\n        this.readingChapter == this.currentChapter\n      ) {\n        return this.getClosedColor(this.colorSettings.bgColor, -20)\n      }\n    },\n\n    /** @description 定时朗读 */\n    timedSpeech() {\n      if (this.timedSpeechOpen) {\n        this.timedSpeechInterval = setInterval(() => {\n          this.speechTimeLeft--\n          if (this.speechTimeLeft <= 0) {\n            this.speechStop()\n            clearInterval(this.timedSpeechInterval)\n            this.timedSpeechOpen = false\n            this.speechTimeLeft == 60\n          }\n        }, 60000)\n      } else {\n        clearInterval(this.timedSpeechInterval)\n      }\n    },\n\n    /** @description 自动语音朗读定时任务\n     * @params defalutDelay 默认延时时间，与性能直接相关\n     */\n    autoSpeechTask(\n      paraIndex = this.readingPara,\n      chapterIndex = this.readingChapter,\n      endFlag = false,\n      defalutDelay = 500\n    ) {\n      let readingTime = 50\n      const readingText = this.chapterList[this.readingChapter].content[this.readingPara]\n      // console.log(\"utterance.text\", this.utterance.text)\n      // console.log(\"readingText\", readingText)\n      //匹配出汉字、数字及部分符号的数量并计算出预计时间（标准速度下）\n      let tempArr = readingText.match(/[$0-9\\u4e00-\\u9fa5\\uf900-\\ufa2d]/g)\n      if (tempArr && tempArr.length) readingTime += tempArr.length * 320\n      //匹配出英文字母数量并计算出预计时间（标准速度下）\n      tempArr = readingText.match(/[a-zA-Z]/g)\n      if (tempArr && tempArr.length) readingTime += tempArr.length * 160\n      //除以朗读速率得出预计总朗读时间\n      readingTime = Math.floor(readingTime / this.utterance.rate)\n      //如果不用正则匹配，可用下面的方法简单估算总朗读时间\n      // let readingTime = Math.floor((readingText.length / this.utterance.rate) * 150)\n      // console.log(\"readingTime\", readingTime)\n\n      //设置定时器延时(延时如果超出段落朗读时间会出问题！所以乘以0.6安全系数)\n      const delay = Math.min(readingTime * 0.6, defalutDelay)\n\n      //读新段落卡住时(可能是网络的原因)自动重新读取\n      if (\n        this.readingStatus.paraIndex == this.readingPara &&\n        this.readingStatus.chapterIndex == this.readingChapter\n      ) {\n        this.readingStatus.time += this.isPaused ? 0 : delay\n        const maxTime = readingTime * 1.2 + 3000\n        // console.log(\"time\", this.readingStatus.time, maxTime)\n        if (this.readingStatus.time > maxTime) {\n          this.readingStatus = { paraIndex: -1, chapterIndex: -1, time: 0 } //重置状态\n          this.speechFromPara(this.getParaIndex(this.readingPara))\n          return\n        }\n      } else {\n        this.readingStatus = {\n          paraIndex: this.readingPara,\n          chapterIndex: this.readingChapter,\n          time: 0,\n        }\n      }\n\n      //清除语音朗读定时器\n      clearTimeout(this.autoSpeechTimer)\n      //开启下一次朗读检查的定时任务\n      this.autoSpeechTimer = setTimeout(() => {\n        this.autoSpeech(paraIndex, chapterIndex, endFlag)\n      }, delay)\n    },\n\n    /** @description 自动语音朗读 */\n    autoSpeech(paraIndex = this.readingPara, chapterIndex = this.readingChapter, endFlag = false) {\n      const debug = false\n      if (debug) console.log(\"autoSpeech readingPara\", this.readingPara)\n\n      //如果当前有播放任务，且后面仍有任务排队，则暂不添加下一段\n      if (speechSynthesis.pending) {\n        if (debug) console.log(\"当前有播放任务，且后面仍有任务排队\")\n        this.autoSpeechTask(paraIndex, chapterIndex)\n        //如果当前有播放任务，后面没有任务排队，则添加下一段\n      } else if (speechSynthesis.speaking) {\n        if (debug) console.log(\"当前有播放任务，后面没有任务排队\")\n        //后面没有任务排队了，说明正在读的index就是最后添加的index\n        this.readingPara = paraIndex\n        this.readingChapter = chapterIndex\n\n        //如果当前章节在朗读章节的前面，则自动转到在朗读章节\n        if (this.currentChapter < this.readingChapter) {\n          if (debug) console.log(\"当前章节在前面\")\n          this.currentChapter = this.readingChapter\n          //章节改变了，等下一次DOM更新数据后再执行\n          this.$nextTick(() => {\n            this.readingPage = this.getPageIndex(this.readingPara)\n            this.currentPage = this.getPageIndex(this.readingPara)\n          }) //自动翻页\n        }\n        //否则如果当前就是朗读章节\n        else if (this.currentChapter === this.readingChapter) {\n          if (debug) console.log(\"当前就是朗读章节\")\n          this.readingPage = this.getPageIndex(this.readingPara)\n          //如果当前页在朗读页前面\n          if (this.currentPage < this.readingPage) {\n            this.currentPage = this.readingPage //自动翻页\n            if (debug) console.log(\"当前页在朗读页的前面 this.currentPage\", this.currentPage)\n          }\n        }\n\n        let chapter = this.chapterList[this.readingChapter].content\n        //如果本章还有下一段\n        if (this.readingPara + 1 < chapter.length) {\n          this.speak(chapter[this.readingPara + 1])\n          this.autoSpeechTask(this.readingPara + 1, chapterIndex)\n        }\n        //否则，如果还有下一章\n        else if (this.readingChapter + 1 < this.chapterList.length) {\n          this.speak(this.chapterList[this.readingChapter + 1].content[0])\n          this.autoSpeechTask(0, this.readingChapter + 1, false, 50)\n        }\n        //否则，后面没有内容了，不继续添加播放队列\n        else {\n          this.autoSpeechTask(paraIndex, chapterIndex, true)\n        }\n      }\n      //如果当前没有播放任务，则开始读取本页readingPage内容\n      else {\n        if (endFlag) {\n          //endFlag参数就为了这里\n          this.isSpeaking = false\n          this.isPaused = false\n          return\n        }\n        if (debug) console.log(\"当前没有播放任务，开始初始内容\")\n        this.speak(this.chapterList[chapterIndex].content[paraIndex])\n        this.autoSpeechTask(paraIndex, chapterIndex)\n      }\n    },\n\n    // 朗读指定文本。根据初步测试，支持文本最大长度为20000左右。\n    speak(text) {\n      //让符号读出来（注意定时任务中的时长计算要相应修改）\n      // text = text\n      //   .replaceAll(\"（\", \"。括号。\")\n      //   .replaceAll(\"）\", \"。\")\n      //   .replaceAll(\"(\", \"。括号。\")\n      //   .replaceAll(\")\", \"。\")\n      //   .replaceAll(\"——\", \"。破折号。\")\n      //   .replaceAll(\"--\", \"。破折号。\")\n      //如果有可发声的字符，则正常朗读\n      if (/[$0-9a-zA-Z\\u4e00-\\u9fa5\\uf900-\\ufa2d]/.test(text)) {\n        this.utterance.text = text\n        speechSynthesis.speak(this.utterance) //下一段加入播放队列\n      }\n      //否则静默朗读一个可发声的字符以跳过本轮朗读任务\n      else {\n        const tempUtterance = new SpeechSynthesisUtterance()\n        tempUtterance.text = \"a\" //朗读内容设置为一个可发声的字符\n        tempUtterance.volume = 0 //音量设为0\n        speechSynthesis.speak(tempUtterance)\n      }\n    },\n\n    /** @description 从指定的段落处开始朗读 */\n    speechFromPara(index) {\n      if (!this.utterance) return\n      if (speechSynthesis.speaking) {\n        this.speechStop() //停止语音朗读\n        this.readingPara = this.getParaIndexCh(index)\n        this.readingPage = this.currentPage\n        this.readingChapter = this.currentChapter\n        this.isSpeaking = true\n        this.isPaused = false\n        this.autoSpeech()\n      }\n    },\n\n    /** @description 开始语音朗读 */\n    speechStart(paraIndex = 0) {\n      if (!this.utterance) {\n        this.showMessage({ message: \"浏览器不支持\", type: \"error\", duration: 1000 })\n        return\n      }\n      this.speechStop() //停止语音朗读\n      this.utterance.text = this.pageList[this.currentPage]\n      this.utterance.lang = \"zh-CN\" //语言(zh-CN、en-US 等)\n      this.utterance.rate = this.speechOptions.rate\n      this.utterance.volume = this.speechOptions.volume\n      this.utterance.pitch = this.speechOptions.pitch\n      this.utterance.voice = this.voiceList[this.voiceIndex]\n      //初始化阅读位置参数\n      this.readingPara = this.getParaIndexCh(paraIndex)\n      this.readingPage = this.currentPage\n      this.readingChapter = this.currentChapter\n      this.isSpeaking = true\n      this.isPaused = false\n      this.autoSpeech()\n    },\n\n    /** @description 获取声音列表并过滤 */\n    getVoiceList() {\n      if (!this.utterance) return\n      //先预执行一次getVoices，延时过后再次调用，否则无法生效(对getVoices的第一个调用将阻塞主线程)\n      speechSynthesis.getVoices()\n      setTimeout(() => {\n        this.voiceList = speechSynthesis\n          .getVoices()\n          .filter((voice) => voice.lang.indexOf(\"zh\") > -1)\n      }, 100)\n    },\n\n    /** @description 改变语音设置 */\n    changeVoice() {\n      this.utterance.lang = \"zh-CN\" //语言(zh-CN、en-US 等)\n      this.utterance.rate = this.speechOptions.rate\n      this.utterance.volume = this.speechOptions.volume\n      this.utterance.pitch = this.speechOptions.pitch\n      this.utterance.voice = this.voiceList[this.voiceIndex]\n      this.speechOptions.voiceIndex = this.voiceIndex\n      //如果语音正在播放或暂停\n      if (speechSynthesis.speaking) {\n        this.speechStop() //停止语音朗读\n        this.isSpeaking = true\n        this.isPaused = false\n        this.autoSpeech()\n      }\n    },\n\n    /** @description 从暂停中恢复朗读 */\n    speechResume() {\n      if (!this.utterance) return\n      speechSynthesis.resume()\n      this.isPaused = false\n    },\n\n    /** @description 暂停语音朗读 */\n    speechPause() {\n      if (!this.utterance) return\n      speechSynthesis.pause()\n      this.isPaused = true\n    },\n\n    /** @description 停止语音朗读 */\n    speechStop() {\n      if (!this.utterance) return\n      this.isSpeaking = false\n      this.isPaused = false\n      clearTimeout(this.autoSpeechTimer) // 先清除语音朗读定时器\n      speechSynthesis.cancel() //删除队列中所有的语音。如果正在播放，则直接停止\n    },\n\n    /** @description 发音名称过滤 */\n    voiceNameFormat(item) {\n      return item.name\n        .replace(\"Microsoft\", \"微软\")\n        .replace(\"Online\", \"在线\")\n        .replace(\" (Natural)\", \"\")\n        .replace(\"Chinese\", \"中文\")\n        .replace(\"Mainland\", \"大陆\")\n        .replace(\"Northeastern Mandarin\", \"东北话\")\n        .replace(\"Zhongyuan Mandarin Shaanxi\", \"陕西话\")\n        .replace(\"Hong Kong\", \"香港\")\n        .replace(\"Cantonese Traditional\", \"广东话\")\n        .replace(\"Taiwanese Mandarin\", \"台湾普通话\")\n        .replace(\"Taiwan\", \"台湾\")\n    },\n\n    //#endregion\n  },\n  watch: {},\n}\n","import { render } from \"./YunReader.vue?vue&type=template&id=af94c1f8\"\nimport script from \"./YunReader.vue?vue&type=script&lang=js\"\nexport * from \"./YunReader.vue?vue&type=script&lang=js\"\n\nimport \"./YunReader.vue?vue&type=style&index=0&id=af94c1f8&lang=scss\"\n\nimport exportComponent from \"D:\\\\WorkSpace\\\\Dev\\\\Projects\\\\YunAdmin\\\\YunAdmin.Web\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementBlock","class","hidden","$props","_createVNode","_component_el_pagination","background","$options","$event","layout","total","_ctx","onSizeChange","onCurrentChange","Math","easeInOutQuad","t","b","c","d","requestAnimFrame","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","move","amount","document","documentElement","scrollTop","body","parentNode","position","scrollTo","to","duration","start","change","increment","currentTime","animateScroll","val","name","props","required","type","Number","page","default","limit","pageSizes","Array","String","Boolean","autoScroll","computed","currentPage","get","this","set","$emit","pageSize","methods","handleSizeChange","handleCurrentChange","__exports__","render","style","_createElementVNode","_hoisted_44","_hoisted_45","_hoisted_46","$data","borderColor","textColor","bgColor","onMousewheel","_toDisplayString","_Transition","_component_el_icon","size","onClick","_component_Back","_component_el_tabs","stretch","_component_el_tab_pane","label","_component_calendar","_hoisted_5","ref","height","_Fragment","_renderList","item","index","key","id","title","_hoisted_6","_component_CollectionTag","_hoisted_8","length","chapter","_component_Remove","time","_component_Edit","_hoisted_15","remark","color","_component_List","_component_CaretLeft","_component_CaretRight","onDblclick","_component_ArrowLeftBold","_component_ArrowRightBold","_component_el_popover","visible","placement","width","reference","_component_VideoPlay","_hoisted_22","_component_el_select","placeholder","onChange","_createBlock","_component_el_option","value","_hoisted_25","_component_el_slider","rate","min","max","step","_hoisted_26","volume","_hoisted_27","pitch","_component_el_divider","_hoisted_28","_component_el_switch","disabled","_component_el_button","plain","round","_component_Tools","_hoisted_34","fontSize","_hoisted_35","lineHeight","_hoisted_36","paraSpace","_hoisted_37","titleScale","_hoisted_38","paddingTop","_hoisted_39","paddingBottom","_hoisted_40","paddingLR","_hoisted_41","widthPercent","_hoisted_42","fontFamily","_hoisted_43","_hoisted_49","i","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_56","_hoisted_58","_component_el_color_picker","predefine","slice","_hoisted_61","_hoisted_64","_hoisted_67","_component_el_radio_group","_component_el_radio_button","_hoisted_68","offset","onHide","_component_Search","icon","_component_el_input","clearable","onKeyup","_component_Odometer","_component_CirclePlus","left","top","_component_CloseBold","resize","autosize","minRows","maxRows","maxlength","floor","onMousedown","onMouseup","_hoisted_88","beforeCreate","pageTurningModes","fonts","textColors","bgColors","borderColors","bgTextures","require","predefineColors","markedColors","beforeMount","canvasContext","createElement","getContext","repage","paraList","repaging","pageList","noIndent","debug","console","log","paras","previosHeight","currentHeight","paraLines","paraIndex","paraText","indent","lineWidth","textareaWidth","maxHeight","textareaHeight","sizeSettings","getFontSize","getLineHeight","getParaLines","undefined","push","spareLines","sliceIndex","getSliceIndex","text","indentWidth","limitLines","calcParaLayout","nonFrontChars","nonBackChars","nonBreakChars","textLength","lines","preIndex","currentWidth","preload","measureText","temp","indexOf","font","getFocusColor","colorA","colorB","colorC","delta","adjust","base","variation","mix","fix","a","abs","rgbA","replace","match","rgbB","rgbC","map","parseInt","rgb","result","reduce","sum","pre","toString","getParaTextColor","isSpeaking","readingPara","getParaIndexCh","readingChapter","currentChapter","colorSettings","getTextShadow","getParaBgColor","getClosedColor","timedSpeech","timedSpeechOpen","timedSpeechInterval","setInterval","speechTimeLeft","speechStop","clearInterval","autoSpeechTask","chapterIndex","endFlag","defalutDelay","readingTime","readingText","chapterList","content","tempArr","utterance","delay","readingStatus","isPaused","maxTime","speechFromPara","getParaIndex","clearTimeout","autoSpeechTimer","autoSpeech","speechSynthesis","pending","speaking","$nextTick","readingPage","getPageIndex","speak","test","tempUtterance","SpeechSynthesisUtterance","speechStart","lang","speechOptions","voice","voiceList","voiceIndex","showMessage","message","getVoiceList","getVoices","filter","changeVoice","speechResume","resume","speechPause","pause","cancel","voiceNameFormat","watch","mixins","ConstantsMixin","RepageMixin","SpeechMixin","data","store","useStore","screenWidth","clientWidth","screenHeight","clientHeight","pageWidth","pageHeight","popoverWidth","pageTurning","currentPara","bookmarks","lastPosition","para","notes","noteRemark","noteColor","progress","keywords","tempParaIndex","tempStartIndex","catalogRenderMax","catalogScrollPercent","catalogBeforeHeight","catalogAfterHeight","timer","messageTimer","wheelTimer","sizeSettingsTimer","speechOptionTimer","screenSizeTimer","device","menuVisible","menuOffsetX","menuOffsetY","menuPlacement","settingsVisible","catalogVisible","voiceVisible","searchVisible","progressVisible","isWheelLocked","turnLocked","created","mounted","localStorage","getItem","JSON","parse","state","app","bookId","stringify","onresize","onkeydown","e","handleDebounce","prevPage","prevChapter","nextPage","nextChapter","setRenderArea","handleThrottle","$refs","catalogPane","onscroll","beforeUnmount","resetStyle","pageInit","percent","innerHeight","screen","h","len","chapterListRendered","before","after","fn","wait","lock","combineFn","fns","args","forEach","obj","$message","fullscreen","className","fullarea","getElementsByClassName","fullscreenElement","exitFullscreen","requestFullscreen","clearSelection","firstPage","lastPage","pageTotal","jumpTo","wheelHandle","debounce","deltaY","animatePage","reverse","parent","querySelector","oldPage","cloneNode","timeout","keyframes","boxShadow","appendChild","deltaX","transform","newPage","animate","iterations","fill","easing","removeChild","transformOrigin","closePopover","closeCatalog","handleGoBack","changeMode","openCatalog","scrollMax","selectChapter","openSettings","openVoice","voiceInit","openSearch","openProgress","handleSearch","list","lastIndexOf","paraIndexOfPage","startOffset","endOffset","paraLength","selector","getSelection","$el","scrollIntoView","behavior","block","handleMouseup","button","openPopupMenu","layerX","layerY","menuW","menuH","search","searchMarkedPara","handleMouseDown","readerBody","oncontextmenu","noIndentPara","addNote","update","note","updateNote","deleteNote","Date","toLocaleDateString","replaceAll","setItem","setTextStyle","splice","removeItem","handleDeleteNote","jumpToNote","getNotePreview","addBookmark","hasNoIndentPara","bookmark","deleteBookmark","jumpToBookmark","getBookmarkPreview","pTags","from","getElementsByTagName","p","innerHTML","clearStyle","insertStyle","reg1","reg2","removeAllRanges","elm","range","createRange","startNode","firstChild","setStart","setEnd","selection","addRange","detach","getTitle","articleData","getParaFontSize","getCatalogWidth","getPageWordNum","lenArray","currentArray","getTotalWordNum","isNoIndent","pageIndex","tempIndex","reverseColor","colorValue","str","substring","reverseAvgColor","valueA","valueB","toFixed","getRestText","limitText","getCurrentParaText","indentParas","newArr","shift","newList","inReader","handler","immediate","deep","newValue","oldValue","parseFloat","includes"],"sourceRoot":""}
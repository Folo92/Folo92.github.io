{"version":3,"file":"js/139.081b16dd.js","mappings":"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","sources":["webpack://yun-admin/./src/views/article/BookChapters.vue","webpack://yun-admin/./src/views/article/BookChapters.vue?64d2"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <!-- ////////// 目录模块 ////////// -->\r\n    <div v-show=\"!inReader\" class=\"chapter-list\">\r\n      <div class=\"chapter-list-container\">\r\n        <!-- 文件选择 -->\r\n        <el-upload\r\n          v-model=\"fileList\"\r\n          ref=\"upload\"\r\n          class=\"upload-demo\"\r\n          action=\"#\"\r\n          :auto-upload=\"false\"\r\n          drag\r\n          :on-change=\"onChange\"\r\n        >\r\n          <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\r\n          <div class=\"el-upload__text\">Drop file here or <em>click to upload</em></div>\r\n          <template #tip>\r\n            <div class=\"el-upload__tip\">txt files with a size less than 50mb</div>\r\n          </template>\r\n        </el-upload>\r\n        <br />\r\n        <el-page-header\r\n          :icon=\"isAsc ? 'SortUp' : 'SortDown'\"\r\n          @back=\"sortChange\"\r\n          style=\"color: #4490f1; font-size: 16px\"\r\n        >\r\n          <template #title>\r\n            <span style=\"color: #4490f1; font-size: 16px\"> {{ isAsc ? \"升序\" : \"降序\" }} </span>\r\n          </template>\r\n          <template #content>\r\n            <div class=\"flex items-center\">\r\n              <span style=\"color: var(--el-text-color-regular); font-size: 16px\">\r\n                {{ bookName }}\r\n              </span>\r\n              &emsp;\r\n              <span\r\n                v-show=\"bookName != ''\"\r\n                class=\"link-type\"\r\n                style=\"font-size: 14px\"\r\n                @click=\"readArticle()\"\r\n                >继续阅读</span\r\n              >\r\n            </div>\r\n          </template>\r\n          <template #extra>\r\n            <el-button>Print</el-button>\r\n            <el-button type=\"primary\" class=\"ml-2\">Edit</el-button>\r\n            <div class=\"flex items-center\">\r\n              <el-button>Print</el-button>\r\n              <el-button type=\"primary\" class=\"ml-2\">Edit</el-button>\r\n            </div>\r\n          </template>\r\n          <!-- <template #default>\r\n          <div>\r\n            Your additional content can be added with default slot, You may put as many content as\r\n            you want here.\r\n          </div>\r\n        </template> -->\r\n        </el-page-header>\r\n        <br />\r\n        <!-- ////////// 表格 ////////// -->\r\n        <el-table\r\n          :key=\"tableKey\"\r\n          :data=\"list\"\r\n          border\r\n          table-layout=\"fixed\"\r\n          :max-height=\"1000\"\r\n          @sort-change=\"sortChange\"\r\n        >\r\n          <!-- 序号列 -->\r\n          <el-table-column label=\"序号\" width=\"60px\" align=\"center\">\r\n            <template v-slot=\"props\">\r\n              {{ props.$index + (listPagination.pageIndex - 1) * listPagination.pageSize + 1 }}\r\n              <!-- {{ props.$index + 1 }} -->\r\n            </template>\r\n          </el-table-column>\r\n          <!-- 章节目录列 -->\r\n          <el-table-column prop=\"title\" label=\"章节目录\" minWidth=\"160px\" align=\"left\">\r\n            <template v-slot=\"{ row }\">\r\n              <span class=\"link-type\" @click=\"readArticle(row)\">\r\n                {{ row.title }}\r\n              </span>\r\n            </template>\r\n          </el-table-column>\r\n          <!-- 操作列 -->\r\n          <el-table-column\r\n            label=\"操作\"\r\n            align=\"center\"\r\n            width=\"120\"\r\n            class-name=\"small-padding fixed-width\"\r\n          >\r\n            <template v-slot=\"{ row }\">\r\n              <el-button type=\"primary\" size=\"small\" @click=\"readArticle(row)\"> 阅读 </el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n\r\n        <!-- ////////// 底部分页栏 ////////// -->\r\n        <pagination\r\n          v-show=\"total > 0\"\r\n          :total=\"total\"\r\n          v-model:page=\"listPagination.pageIndex\"\r\n          v-model:limit=\"listPagination.pageSize\"\r\n          @pagination=\"getList\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- ////////// 阅读模块 ////////// -->\r\n    <div v-show=\"inReader\">\r\n      <YunReader\r\n        ref=\"reader\"\r\n        :changeMode=\"changeMode\"\r\n        :inReader=\"inReader\"\r\n        :bookId=\"encode(bookName)\"\r\n        :bookName=\"bookName\"\r\n        :articleData=\"articleData\"\r\n        :chapterList=\"chapterList\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Pagination from \"@/components/Pagination\"\r\nimport YunReader from \"@/components/YunReader/YunReader.vue\"\r\n\r\nexport default {\r\n  name: \"BookList\",\r\n  components: { Pagination, YunReader },\r\n  data() {\r\n    return {\r\n      fileList: [],\r\n      file: null,\r\n      bookText: \"\",\r\n      chapterList: [], //章节数组{ id: 0, title: \"\", content: \"\" }\r\n      bookName: \"\", //书名\r\n      articleData: \"\", //{ id: \"\", title: \"\", content: \"\" },\r\n      // 分页条件\r\n      listPagination: {\r\n        sort: \"id\", // 默认按id排序（首字母不要大写）\r\n        sortType: \"desc\",\r\n        pageIndex: 1,\r\n        pageSize: 15,\r\n      },\r\n      tableKey: 0, //如果修改表格参数，key值加1即可更新表格显示\r\n      list: [], //表格数据\r\n      total: 0, //总行数\r\n      isAsc: true, //表格是否升序\r\n      inReader: false,\r\n    }\r\n  },\r\n  methods: {\r\n    extractTitles(str) {\r\n      const reg =\r\n        /(正文){0,1}(第)([零〇一二三四五六七八九十百千万a-zA-Z0-9]{1,7})[章节卷集部篇回]((?! {4}).)((?!\\t{1,4}).){0,30}\\r?\\n/g\r\n      let list = []\r\n      let result = null\r\n      result = str.match(reg)\r\n      result && list.push(...result)\r\n      for (let i = 0; i < list.length; i++) {\r\n        list[i] = list[i].replace(\"\\r\", \"\").replace(\"\\n\", \"\").replace(\"\\t\", \"\")\r\n      }\r\n      return list\r\n    },\r\n    getChapters() {\r\n      var timeStart = performance.now()\r\n      const debug = false //调试总开关\r\n      this.list = [] //清空\r\n      // const regex =\r\n      //   /^第(.*?)章|^第(.*?)回|^第(.*?)集|^第(.*?)卷|^第(.*?)部|^第(.*?)篇|^第(.*?)节|^第(.*?)季|^【(.*?)】/\r\n      const regex =\r\n        /^(第)([零〇一二三四五六七八九十百千万a-zA-Z0-9]{1,7})[章节卷集部篇回季](.){0,30}|^【(.{1,30})】$/\r\n      const text = this.bookText\r\n      // console.log(this.extractTitles(text))\r\n      let paraList = text\r\n        .replaceAll(\"\\r\\n\", \"\\n\")\r\n        .replaceAll(\"\\r\", \"\\n\")\r\n        .split(\"\\n\")\r\n        .map((item) => item.trim())\r\n        .filter((item) => item.length > 0)\r\n      // if (debug) console.log(\"paraList\", paraList) //调试\r\n      let start = 0\r\n      let chapters = []\r\n      let titles = []\r\n      //按段落分析，生成临时的标题和章节数组\r\n      for (let i = 0; i < paraList.length; i++) {\r\n        //如果是标题\r\n        // if (regex.test(paraList[i]) && paraList[i].length < 40) {\r\n        if (regex.test(paraList[i])) {\r\n          if (i == 0) {\r\n            //如果第一段就是标题\r\n            titles.push(paraList[i])\r\n          } else {\r\n            const content = paraList.slice(start, i)\r\n            if (titles.length == 0 && start == 0) titles.push(\"前言\")\r\n            titles.push(paraList[i])\r\n            chapters.push(content)\r\n            start = i\r\n          }\r\n        }\r\n        //如果到最后一段了\r\n        if (i == paraList.length - 1) {\r\n          const endChapter = paraList.slice(start, i + 1)\r\n          if (titles.length == 0) titles.push(endChapter[0].slice(0, 10))\r\n          chapters.push(endChapter)\r\n        }\r\n      }\r\n      if (debug) console.log(\"chapters\", chapters) //调试\r\n      if (debug) console.log(\"titles\", titles) //调试\r\n      this.chapterList = [] //清空\r\n      //生成最终的完整章节数据\r\n      for (let i = 0; i < chapters.length; i++) {\r\n        this.chapterList.push({\r\n          id: i,\r\n          title: titles[i],\r\n          content: chapters[i],\r\n          // content: chapters[i].join(\"\\n\"),\r\n        })\r\n      }\r\n      this.listPagination.pageIndex = 1 //重置到列表第一页\r\n      this.getList() //生成列表\r\n      var timeEnd = performance.now()\r\n      console.log(\"getChapters 耗时\", `${timeEnd - timeStart}ms`)\r\n    },\r\n    //获取列表数据\r\n    getList() {\r\n      this.list = [] //清空\r\n      this.total = this.chapterList.length\r\n      const index = this.listPagination.pageIndex\r\n      const size = this.listPagination.pageSize\r\n      if (this.isAsc) {\r\n        const start = (index - 1) * size\r\n        const end = start + size\r\n        for (let i = start; i < end && i < this.total; i++) {\r\n          this.list.push({\r\n            id: this.chapterList[i].id,\r\n            title: this.chapterList[i].title,\r\n          })\r\n        }\r\n      } else {\r\n        const start = this.total - 1 - (index - 1) * size\r\n        const end = start - size\r\n        for (let i = start; i > end && i >= 0; i--) {\r\n          this.list.push({\r\n            id: this.chapterList[i].id,\r\n            title: this.chapterList[i].title,\r\n          })\r\n        }\r\n      }\r\n    },\r\n    //阅读文章\r\n    readArticle(row) {\r\n      // this.articleData = row\r\n      this.inReader = !this.inReader\r\n      // this.$nextTick(() => {\r\n      if (row) this.$refs.reader.currentChapter = row.id\r\n      // })\r\n    },\r\n    beforeAnalysis(file) {\r\n      const isTxt = file.type == \"text/plain\"\r\n      const isLimit50M = file.size / 1024 / 1024 < 50\r\n      // console.log(file.type)\r\n      if (!isTxt) {\r\n        this.$message.error(\"选择的文件只能是 txt 格式!\")\r\n      }\r\n      if (!isLimit50M) {\r\n        this.$message.error(\"选择的文件大小不能超过 50MB!\")\r\n      }\r\n      return isTxt && isLimit50M\r\n    },\r\n    //字符串转base64\r\n    encode(str) {\r\n      let encode = encodeURI(str) // 对字符串进行编码\r\n      let base64 = btoa(encode) // 对编码的字符串转化base64\r\n      // console.log(encode)\r\n      // console.log(base64)\r\n      return base64\r\n    },\r\n    //选了文件\r\n    onChange() {\r\n      // console.log(\"onChange\")\r\n      this.$refs.upload.abort() //取消上传请求\r\n      this.$refs.upload.clearFiles() //清空已上传的文件列表\r\n      var event = event || window.event\r\n      var file = event.target.files[0]\r\n      // var file = this.fileList[0]\r\n      this.file = file\r\n      this.bookName = file.name.split(\".\").slice(0, -1).join(\".\")\r\n      this.beforeAnalysis(file)\r\n\r\n      var reader = new FileReader()\r\n      reader.onload = (e) => {\r\n        const content = e.target.result\r\n        // 使用FileReader以utf-8格式读取文件，根据文件内容是否包含乱码字符�，来判断文件是否为utf-8。\r\n        // 如果存在�，即文件编码非utf-8，反之为utf-8。\r\n        if (content.indexOf(\"�\") === -1) {\r\n          // console.log(\"UTF-8 , getChapters start\")\r\n          this.bookText = content\r\n          this.getChapters()\r\n        } else {\r\n          // console.log(\"Not UTF-8, readAsText gb2312\")\r\n          reader.readAsText(file, \"gb2312\")\r\n        }\r\n      }\r\n      reader.readAsText(file) //默认编码UTF-8\r\n    },\r\n    changeMode() {\r\n      this.inReader = !this.inReader\r\n    },\r\n    sortChange() {\r\n      this.isAsc = !this.isAsc\r\n      this.getList()\r\n      this.listPagination.pageIndex = 1\r\n    },\r\n    goBack() {\r\n      //\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.chapter-list {\r\n  overflow-x: auto;\r\n  .chapter-list-container {\r\n    width: 840px;\r\n    margin: 0 auto;\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./BookChapters.vue?vue&type=template&id=311a4b5e\"\nimport script from \"./BookChapters.vue?vue&type=script&lang=js\"\nexport * from \"./BookChapters.vue?vue&type=script&lang=js\"\n\nimport \"./BookChapters.vue?vue&type=style&index=0&id=311a4b5e&lang=scss\"\n\nimport exportComponent from \"D:\\\\WorkSpace\\\\Dev\\\\Projects\\\\YunAdmin\\\\YunAdmin.Web\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","style","_createElementBlock","_createVNode","_component_el_upload","$data","$event","ref","action","drag","$options","tip","_hoisted_5","_component_el_icon","_component_upload_filled","_hoisted_4","_hoisted_6","_component_el_page_header","icon","onBack","title","_toDisplayString","content","onClick","extra","_component_el_button","type","_hoisted_16","_createBlock","_component_el_table","key","data","border","onSortChange","_component_el_table_column","label","width","align","props","$index","pageIndex","pageSize","prop","minWidth","row","_hoisted_17","size","_component_pagination","total","page","limit","onPagination","_component_YunReader","changeMode","inReader","bookId","bookName","articleData","chapterList","name","components","Pagination","YunReader","fileList","file","bookText","listPagination","sort","sortType","tableKey","list","isAsc","methods","extractTitles","str","reg","result","match","push","i","length","replace","getChapters","timeStart","performance","now","debug","this","regex","text","paraList","replaceAll","split","map","item","trim","filter","start","chapters","titles","test","slice","endChapter","console","log","id","getList","timeEnd","index","end","readArticle","$refs","reader","currentChapter","beforeAnalysis","isTxt","isLimit50M","$message","error","encode","encodeURI","base64","btoa","onChange","upload","abort","clearFiles","event","window","target","files","join","FileReader","onload","e","indexOf","readAsText","sortChange","goBack","__exports__","render"],"sourceRoot":""}
"use strict";(self["webpackChunkyun_admin"]=self["webpackChunkyun_admin"]||[]).push([[387],{2387:function(e,t,i){i.r(t),i.d(t,{default:function(){return E}});var n=i(3396);const o=e=>((0,n.dD)("data-v-fc401da6"),e=e(),(0,n.Cn)(),e),s={class:"components-container"},l=o((()=>(0,n._)("aside",null,[(0,n.Uk)(" Rich text is a core feature of the management backend, but at the same time it is a place with lots of pits. In the process of selecting rich texts, I also took a lot of detours. The common rich texts on the market have been basically used, and I finally chose Tinymce. See the more detailed rich text comparison and introduction. "),(0,n._)("a",{target:"_blank",class:"link-type",href:"https://github.com/Folo92/"},"Documentation")],-1))),a=["innerHTML"];function c(e,t,i,o,c,r){const d=(0,n.up)("tinymce");return(0,n.wg)(),(0,n.iD)("div",s,[l,(0,n._)("div",null,[(0,n.Wm)(d,{modelValue:c.content,"onUpdate:modelValue":t[0]||(t[0]=e=>c.content=e),height:300},null,8,["modelValue"])]),(0,n._)("div",{class:"editor-content",innerHTML:c.content},null,8,a)])}var r=i(7139);const d=["id"],u={class:"editor-custom-btn-container"};function h(e,t,i,o,s,l){const a=(0,n.up)("editorImage");return(0,n.wg)(),(0,n.iD)("div",{class:(0,r.C_)([{fullscreen:s.fullscreen},"tinymce-container"]),style:(0,r.j5)({width:l.containerWidth})},[(0,n._)("textarea",{id:s.tinymceId,class:"tinymce-textarea"},null,8,d),(0,n._)("div",u,[(0,n.Wm)(a,{color:"#1890ff",class:"editor-upload-btn",onSuccessCBK:l.imageSuccessCBK},null,8,["onSuccessCBK"])])],6)}const m={class:"upload-container"},p=(0,n.Uk)(" upload "),f=(0,n.Uk)(" Cancel "),g=(0,n.Uk)(" Confirm ");function b(e,t,i,o,s,l){const a=(0,n.up)("el-button"),c=(0,n.up)("Plus"),d=(0,n.up)("el-icon"),u=(0,n.up)("el-upload"),h=(0,n.up)("el-dialog");return(0,n.wg)(),(0,n.iD)("div",m,[(0,n.Wm)(a,{style:(0,r.j5)({background:i.color,borderColor:i.color}),icon:"UploadFilled",size:"small",type:"primary",onClick:t[0]||(t[0]=e=>s.dialogVisible=!0)},{default:(0,n.w5)((()=>[p])),_:1},8,["style"]),(0,n.Wm)(h,{modelValue:s.dialogVisible,"onUpdate:modelValue":t[3]||(t[3]=e=>s.dialogVisible=e)},{default:(0,n.w5)((()=>[(0,n.Wm)(u,{multiple:!0,"file-list":s.fileList,"onUpdate:file-list":t[1]||(t[1]=e=>s.fileList=e),"show-file-list":!0,"on-remove":l.handleRemove,"on-success":l.handleSuccess,"before-upload":l.beforeUpload,class:"editor-slide-upload",action:"https://httpbin.org/post","list-type":"picture-card"},{default:(0,n.w5)((()=>[(0,n.Wm)(d,null,{default:(0,n.w5)((()=>[(0,n.Wm)(c)])),_:1})])),_:1},8,["file-list","on-remove","on-success","before-upload"]),(0,n.Wm)(a,{onClick:t[2]||(t[2]=e=>s.dialogVisible=!1)},{default:(0,n.w5)((()=>[f])),_:1}),(0,n.Wm)(a,{type:"primary",onClick:l.handleSubmit},{default:(0,n.w5)((()=>[g])),_:1},8,["onClick"])])),_:1},8,["modelValue"])])}var y={name:"EditorImage",props:{color:{type:String,default:"#1890ff"}},data(){return{dialogVisible:!1,listObj:{},fileList:[]}},methods:{checkAllSuccess(){return Object.keys(this.listObj).every((e=>this.listObj[e].hasSuccess))},handleSubmit(){const e=Object.keys(this.listObj).map((e=>this.listObj[e]));this.checkAllSuccess()?(this.$emit("successCBK",e),this.listObj={},this.fileList=[],this.dialogVisible=!1):this.$message("Please wait for all images to be uploaded successfully. If there is a network problem, please refresh the page and upload again!")},handleSuccess(e,t){const i=t.uid,n=Object.keys(this.listObj);for(let o=0,s=n.length;o<s;o++)if(this.listObj[n[o]].uid===i)return this.listObj[n[o]].url=e.files.file,void(this.listObj[n[o]].hasSuccess=!0)},handleRemove(e){const t=e.uid,i=Object.keys(this.listObj);for(let n=0,o=i.length;n<o;n++)if(this.listObj[i[n]].uid===t)return void delete this.listObj[i[n]]},beforeUpload(e){const t=this,i=window.URL||window.webkitURL,n=e.uid;return this.listObj[n]={},new Promise(((o,s)=>{const l=new Image;l.src=i.createObjectURL(e),l.onload=function(){t.listObj[n]={hasSuccess:!1,uid:e.uid,width:this.width,height:this.height}},o(!0)}))}}},w=i(89);const _=(0,w.Z)(y,[["render",b],["__scopeId","data-v-35a5ef40"]]);var v=_;const k=["advlist anchor autolink autosave code codesample colorpicker colorpicker contextmenu directionality emoticons fullscreen hr image imagetools insertdatetime link lists media nonbreaking noneditable pagebreak paste preview print save searchreplace spellchecker tabfocus table template textcolor textpattern visualblocks visualchars wordcount"];var C=k;const j=["searchreplace bold italic underline strikethrough alignleft aligncenter alignright outdent indent  blockquote undo redo removeformat subscript superscript code codesample","hr bullist numlist link image charmap preview anchor pagebreak insertdatetime media table emoticons forecolor backcolor fullscreen"];var S=j;i(1703);let I=[];function O(){return window.tinymce}const T=(e,t)=>{const i=document.getElementById(e),n=t||function(){};if(!i){const t=document.createElement("script");t.src=e,t.id=e,document.body.appendChild(t),I.push(n);const i="onload"in t?o:s;i(t)}function o(t){t.onload=function(){this.onerror=this.onload=null;for(const e of I)e(null,t);I=null},t.onerror=function(){this.onerror=this.onload=null,n(new Error("Failed to load "+e),t)}}function s(e){e.onreadystatechange=function(){if("complete"===this.readyState||"loaded"===this.readyState){this.onreadystatechange=null;for(const t of I)t(null,e);I=null}}}i&&n&&(O()?n(null,i):I.push(n))};var U=T;const x="https://cdn.jsdelivr.net/npm/tinymce-all-in-one@4.9.3/tinymce.min.js";var V={name:"TinyMCE",components:{editorImage:v},props:{id:{type:String,default:function(){return"vue-tinymce-"+ +new Date+(1e3*Math.random()).toFixed(0)}},value:{type:String,default:""},toolbar:{type:Array,required:!1,default(){return[]}},menubar:{type:String,default:"file edit insert view format table"},height:{type:[Number,String],required:!1,default:360},width:{type:[Number,String],required:!1,default:"auto"}},data(){return{hasChange:!1,hasInit:!1,tinymceId:this.id,fullscreen:!1,languageTypeList:{en:"en",zh:"zh_CN",es:"es_MX",ja:"ja"}}},computed:{containerWidth(){const e=this.width;return/^[\d]+(\.[\d]+)?$/.test(e)?`${e}px`:e}},watch:{value(e){!this.hasChange&&this.hasInit&&this.$nextTick((()=>window.tinymce.get(this.tinymceId).setContent(e||"")))}},mounted(){this.init()},activated(){window.tinymce&&this.initTinymce()},deactivated(){this.destroyTinymce()},unMounted(){this.destroyTinymce()},methods:{init(){U(x,(e=>{e?this.$message.error(e.message):this.initTinymce()}))},initTinymce(){const e=this;window.tinymce.init({selector:`#${this.tinymceId}`,language:this.languageTypeList["en"],height:this.height,body_class:"panel-body ",object_resizing:!1,toolbar:this.toolbar.length>0?this.toolbar:S,menubar:this.menubar,plugins:C,end_container_on_empty_block:!0,powerpaste_word_import:"clean",code_dialog_height:450,code_dialog_width:1e3,advlist_bullet_styles:"square",advlist_number_styles:"default",imagetools_cors_hosts:["www.tinymce.com","codepen.io"],default_link_target:"_blank",link_title:!1,nonbreaking_force_tab:!0,init_instance_callback:t=>{e.value&&t.setContent(e.value),e.hasInit=!0,t.on("NodeChange Change KeyUp SetContent",(()=>{this.hasChange=!0,this.$emit("input",t.getContent())}))},setup(t){t.on("FullscreenStateChanged",(t=>{e.fullscreen=t.state}))},convert_urls:!1})},destroyTinymce(){const e=window.tinymce.get(this.tinymceId);this.fullscreen&&e.execCommand("mceFullScreen"),e&&e.destroy()},setContent(e){window.tinymce.get(this.tinymceId).setContent(e)},getContent(){window.tinymce.get(this.tinymceId).getContent()},imageSuccessCBK(e){e.forEach((e=>window.tinymce.get(this.tinymceId).insertContent(`<img class="wscnph" src="${e.url}" >`)))}}};const W=(0,w.Z)(V,[["render",h],["__scopeId","data-v-30605184"]]);var L=W,$={name:"TinymceDemo",components:{Tinymce:L},data(){return{content:"Welcome to the TinyMCE demo!"}}};const D=(0,w.Z)($,[["render",c],["__scopeId","data-v-fc401da6"]]);var E=D}}]);
//# sourceMappingURL=387.d8921a62.js.map
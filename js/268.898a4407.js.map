{"version":3,"file":"js/268.898a4407.js","mappings":"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","sources":["webpack://yun-admin/./src/utils/indexedDB.js","webpack://yun-admin/./src/views/article/MyBookShelf.vue","webpack://yun-admin/./src/components/YunReader/BookShelf.vue","webpack://yun-admin/./src/components/YunReader/BookShelf.vue?7f44","webpack://yun-admin/./src/views/article/MyBookShelf.vue?6676"],"sourcesContent":["if (!window.indexedDB) {\r\n  window.alert(\"你的浏览器不支持IndexedDB的稳定版本。书籍缓存功能将不可用。\")\r\n}\r\n\r\nlet db //全局IDBDatabase对象实例\r\n\r\n/**\r\n * 开启一个读写的事务\r\n * @param {string} dbName 数据库名称\r\n * @param {number} dbVersion 数据库版本\r\n * @param {Array} stores 对象仓库数组\r\n * * [{\r\n * * * storeName: 对象仓库名称\r\n * * * idName: 主键名称\r\n * * * indexName: 索引名称\r\n * * * propName: 索引对应的属性名称(可以是数组)\r\n * * * unique: 是否可以重复\r\n * * },...],\r\n * @returns IDBDatabase对象实例\r\n */\r\nexport function dbInit(dbName = \"db_default\", dbVersion = 1, stores) {\r\n  return new Promise((resolve, reject) => {\r\n    //打开数据库\r\n    const request = window.indexedDB.open(dbName, dbVersion)\r\n    //成功事件，返回数据库对象实例（IDBDatabase对象的实例）\r\n    request.onsuccess = function (event) {\r\n      db = event.target.result\r\n      resolve(event.target.result)\r\n    }\r\n    //数据库升级事件，仅在创建数据库或数据库升级时触发\r\n    request.onupgradeneeded = function (event) {\r\n      //缓存IDBDatabase接口，用于后续创建/删除对象存储空间（对象仓库，类比于关系型数据库的表）\r\n      db = event.target.result\r\n      //创建/删除对象存储空间的操作\r\n      if (stores)\r\n        stores.forEach((item) => {\r\n          if (!db.objectStoreNames.contains(item.storeName)) {\r\n            // 为数据库创建一个对象仓库\r\n            const objectStore = db.createObjectStore(item.storeName, {\r\n              keyPath: item.idName,\r\n              autoIncrement: true,\r\n            })\r\n            //创建索引，第一个参数为索引名称，第二个参数为索引所在的属性，可以使用数组将多个属性设置为一个索引\r\n            //第三个参数为可选参数，指定该属性的值是否要求唯一\r\n            objectStore.createIndex(item.indexName, item.propName, { unique: item.unique })\r\n          }\r\n        })\r\n    }\r\n    request.onerror = function (err) {\r\n      reject(err)\r\n    }\r\n  })\r\n}\r\n\r\nexport async function dbOperation(store, method, data) {\r\n  const methodList = [\"add\", \"get\", \"getAll\", \"put\", \"delete\", \"getByIndex\"]\r\n  if (!methodList.includes(method)) {\r\n    throw new Error(`操作类型错误, 仅支持: ${methodList.toString()} 方法`)\r\n  }\r\n  const readType = [\"get\", \"getAll\", \"getByIndex\"].includes(method) ? \"readonly\" : \"readwrite\"\r\n  const objectStore = db.transaction(store, readType).objectStore(store)\r\n  // alert(\"objectStore.name: \" + objectStore.name)\r\n  // 返回值\r\n  return new Promise((resolve, reject) => {\r\n    //获取IDBIndex对象，参数为索引的名称\r\n    let request\r\n    switch (method) {\r\n      case \"add\":\r\n        request = objectStore.add(data)\r\n        break\r\n      case \"get\":\r\n        request = objectStore.get(data)\r\n        break\r\n      case \"getAll\":\r\n        request = objectStore.getAll(data)\r\n        break\r\n      case \"put\":\r\n        request = objectStore.put(data)\r\n        break\r\n      case \"delete\":\r\n        request = objectStore.delete(data)\r\n        break\r\n      case \"getByIndex\": {\r\n        const index = objectStore.index(data.name)\r\n        request = index.get(data.value)\r\n        break\r\n      }\r\n    }\r\n    // if (method == \"getByIndex\") {\r\n    //   const index = objectStore.index(data.name)\r\n    //   request = index.get(data.value)\r\n    // } else {\r\n    //   request = objectStore[method](data)\r\n    // }\r\n    // alert(store + \",\" + method + \",\" + JSON.stringify(data) + \", request,\", JSON.stringify(request))\r\n    request.onsuccess = (res) => {\r\n      // alert(\"success, \", res.target.result) //调试\r\n      resolve(res.target.result)\r\n    }\r\n    request.onerror = (err) => {\r\n      // console.log(err) //调试\r\n      reject(err)\r\n    }\r\n  })\r\n}\r\n\r\n// export async function dbAdd(store, data) {\r\n//   return new Promise((resolve, reject) => {\r\n//     dbOperation(store, \"add\", data).then((response) => {\r\n//       console.log(\"add\", response)\r\n//       resolve(response)\r\n//     })\r\n//   })\r\n// }\r\n// export async function dbGet(store, key) {\r\n//   return new Promise((resolve, reject) => {\r\n//     dbOperation(store, \"get\", key).then((response) => {\r\n//       console.log(\"get\", response)\r\n//       resolve(response)\r\n//     })\r\n//   })\r\n// }\r\n// export async function dbGetByIndex(store, indexValue) {\r\n//   return new Promise((resolve, reject) => {\r\n//     dbOperation(store, \"getByIndex\", indexValue).then((response) => {\r\n//       console.log(\"getByIndex\", response)\r\n//       resolve(response)\r\n//     })\r\n//   })\r\n// }\r\n// export async function dbGetAll(store) {\r\n//   return new Promise((resolve, reject) => {\r\n//     dbOperation(store, \"getAll\").then((response) => {\r\n//       console.log(\"getAll\", response)\r\n//       resolve(response)\r\n//     })\r\n//   })\r\n// }\r\n","<template>\r\n  <div>\r\n    <BookShelf />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport BookShelf from \"@/components/YunReader/BookShelf\"\r\nexport default {\r\n  name: \"MyBookShelf\",\r\n  components: { BookShelf },\r\n}\r\n</script>\r\n","<template>\r\n  <div class=\"app-container\">\r\n    <!-- ////////// 书架模块 ////////// -->\r\n    <div v-show=\"!inReader\" class=\"bookshelf\">\r\n      <div class=\"bookshelf-container\">\r\n        <!-- 书架标题栏 -->\r\n        <div class=\"bookshelf-title\">\r\n          <span>我的书架</span>&emsp;\r\n          <span v-show=\"keyword\" style=\"font-size: 14px\">当前搜索：{{ keyword }}</span>\r\n          <!-- 按钮 更多 -->\r\n          <el-popover popper-class=\"popover-more\" placement=\"bottom-end\" :width=\"160\" :offset=\"10\">\r\n            <div class=\"bookshelf-menu-item\" @click=\"sortByTime = true\">\r\n              <el-icon :style=\"{ top: '3px', visibility: sortByTime ? 'visible' : 'hidden' }\"\r\n                ><Select\r\n              /></el-icon>\r\n              <span style=\"right: 0\">&nbsp;按访问时间排序</span>\r\n            </div>\r\n            <div class=\"bookshelf-menu-item\" @click=\"sortByTime = false\">\r\n              <el-icon :style=\"{ top: '3px', visibility: sortByTime ? 'hidden' : 'visible' }\"\r\n                ><Select\r\n              /></el-icon>\r\n              <span style=\"right: 0\">&nbsp;按添加顺序排序</span>\r\n            </div>\r\n            <template #reference>\r\n              <el-icon :size=\"20\"><MoreFilled /></el-icon>\r\n            </template>\r\n          </el-popover>\r\n          <!-- 按钮 搜索 -->\r\n          <el-popover popper-class=\"popover-more\" placement=\"bottom-end\" :width=\"200\" :offset=\"10\">\r\n            <el-input\r\n              v-model=\"searchInput\"\r\n              placeholder=\"书名搜索\"\r\n              clearable\r\n              @input=\"inputChange\"\r\n            ></el-input>\r\n            <template #reference>\r\n              <el-icon :size=\"20\"><Search /></el-icon>\r\n            </template>\r\n          </el-popover>\r\n          <!-- 按钮 添加 -->\r\n          <el-icon :size=\"20\" @click=\"selectFile\"><Plus /></el-icon>\r\n        </div>\r\n        <!-- 书架内容 -->\r\n        <div class=\"bookshelf-content\">\r\n          <el-row :gutter=\"30\">\r\n            <!-- 书籍列表 -->\r\n            <el-col\r\n              v-for=\"item in bookListFilted\"\r\n              :key=\"item\"\r\n              :span=\"6\"\r\n              style=\"margin-bottom: 30px\"\r\n            >\r\n              <el-card :body-style=\"{ padding: '0px', height: '220px', position: 'relative' }\">\r\n                <div class=\"cover-head\">\r\n                  <el-button\r\n                    text\r\n                    icon=\"Tickets\"\r\n                    class=\"cover-button\"\r\n                    @click=\"showCatalog(item)\"\r\n                  ></el-button>\r\n                  <el-popconfirm title=\"确定删除吗?\" @confirm=\"deleteBook(item)\">\r\n                    <template #reference>\r\n                      <el-button text icon=\"Delete\" class=\"cover-button\"></el-button>\r\n                    </template>\r\n                  </el-popconfirm>\r\n                </div>\r\n                <img :src=\"require('./images/cover01.jpg')\" class=\"image\" />\r\n                <div class=\"link-type book-name\" @click=\"readBook(item)\">\r\n                  {{ item.bookName }}\r\n                </div>\r\n              </el-card>\r\n            </el-col>\r\n            <!-- 添加书籍 -->\r\n            <el-col :span=\"6\" style=\"margin-bottom: 30px\">\r\n              <el-card\r\n                :body-style=\"{ padding: '0px', height: '220px', position: 'relative' }\"\r\n                @click=\"selectFile\"\r\n              >\r\n                <el-icon :size=\"30\" class=\"add-book-icon\"><Plus /></el-icon>\r\n              </el-card>\r\n            </el-col>\r\n          </el-row>\r\n        </div>\r\n\r\n        <br />\r\n\r\n        <div v-show=\"catalogVisible\">\r\n          <!-- ////////// 页头 ////////// -->\r\n          <el-page-header\r\n            :icon=\"isAsc ? 'SortUp' : 'SortDown'\"\r\n            @back=\"sortChange\"\r\n            style=\"color: #4490f1; font-size: 16px\"\r\n          >\r\n            <template #title>\r\n              <span style=\"color: #4490f1; font-size: 16px\"> {{ isAsc ? \"升序\" : \"降序\" }} </span>\r\n            </template>\r\n            <template #content>\r\n              <div class=\"flex items-center\">\r\n                <span style=\"color: var(--el-text-color-regular); font-size: 16px\">\r\n                  {{ bookName }}\r\n                </span>\r\n                &emsp;\r\n                <span\r\n                  v-show=\"bookName != ''\"\r\n                  class=\"link-type\"\r\n                  style=\"font-size: 14px\"\r\n                  @click=\"readArticle()\"\r\n                  >继续阅读</span\r\n                >\r\n                &emsp;\r\n                <span\r\n                  class=\"link-type\"\r\n                  style=\"font-size: 14px; right: 0\"\r\n                  @click=\"catalogVisible = false\"\r\n                  >关闭</span\r\n                >\r\n              </div>\r\n            </template>\r\n            <!-- <template #extra>\r\n              <el-button>关闭</el-button>\r\n            </template> -->\r\n          </el-page-header>\r\n          <br />\r\n          <!-- ////////// 表格 ////////// -->\r\n          <el-table\r\n            :key=\"tableKey\"\r\n            :data=\"list\"\r\n            border\r\n            table-layout=\"fixed\"\r\n            :max-height=\"1000\"\r\n            style=\"width: 840px\"\r\n            @sort-change=\"sortChange\"\r\n          >\r\n            <!-- 序号列 -->\r\n            <el-table-column label=\"序号\" width=\"60px\" align=\"center\">\r\n              <template v-slot=\"props\">\r\n                {{ props.$index + (listPagination.pageIndex - 1) * listPagination.pageSize + 1 }}\r\n                <!-- {{ props.$index + 1 }} -->\r\n              </template>\r\n            </el-table-column>\r\n            <!-- 章节目录列 -->\r\n            <el-table-column prop=\"title\" label=\"章节目录\" minWidth=\"160px\" align=\"left\">\r\n              <template v-slot=\"{ row }\">\r\n                <span class=\"link-type\" @click=\"readArticle(row)\">\r\n                  {{ row.title }}\r\n                </span>\r\n              </template>\r\n            </el-table-column>\r\n            <!-- 操作列 -->\r\n            <el-table-column\r\n              label=\"操作\"\r\n              align=\"center\"\r\n              width=\"120\"\r\n              class-name=\"small-padding fixed-width\"\r\n            >\r\n              <template v-slot=\"{ row }\">\r\n                <el-button type=\"primary\" size=\"small\" @click=\"readArticle(row)\"> 阅读 </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n\r\n          <!-- ////////// 底部分页栏 ////////// -->\r\n          <pagination\r\n            v-show=\"total > 0\"\r\n            :total=\"total\"\r\n            :autoScroll=\"false\"\r\n            v-model:page=\"listPagination.pageIndex\"\r\n            v-model:limit=\"listPagination.pageSize\"\r\n            @pagination=\"getList\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- ////////// 阅读模块 ////////// -->\r\n    <YunReader\r\n      v-show=\"inReader\"\r\n      ref=\"reader\"\r\n      :changeMode=\"changeMode\"\r\n      :inReader=\"inReader\"\r\n      :bookId=\"bookId\"\r\n      :bookName=\"bookName\"\r\n      :chapterList=\"chapterList\"\r\n      :articleData=\"articleData\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Pagination from \"@/components/Pagination\"\r\nimport YunReader from \"./YunReader\"\r\nimport { dbInit, dbOperation } from \"@/utils/indexedDB\"\r\n\r\nexport default {\r\n  name: \"BookShelf\",\r\n  components: { Pagination, YunReader },\r\n  data() {\r\n    return {\r\n      fileList: [],\r\n      bookList: [], //书籍列表（简要信息）\r\n      sortByTime: true, //根据访问时间动态调整排序\r\n      searchInput: \"\", //搜索框输入的内容\r\n      searchTimer: null, //搜索防抖定时器\r\n      keyword: \"\", //执行搜索的关键词\r\n      bookText: \"\",\r\n      chapterList: [], //章节数组{ id: 0, title: \"\", content: \"\" }\r\n      bookName: \"\", //书名\r\n      bookId: \"\", //书Id\r\n      articleData: \"\", //{ id: \"\", title: \"\", content: \"\" },\r\n      // 分页条件\r\n      listPagination: {\r\n        sort: \"id\", // 默认按id排序（首字母不要大写）\r\n        sortType: \"desc\",\r\n        pageIndex: 1,\r\n        pageSize: 10,\r\n      },\r\n      tableKey: 0, //如果修改表格参数，key值加1即可更新表格显示\r\n      list: [], //表格数据\r\n      total: 0, //总行数\r\n      isAsc: true, //表格是否升序\r\n      inReader: false,\r\n      catalogVisible: false,\r\n    }\r\n  },\r\n  mounted() {\r\n    const stores = [\r\n      {\r\n        storeName: \"book\",\r\n        idName: \"id\",\r\n        indexName: \"bookId\",\r\n        propName: \"bookId\",\r\n        unique: true,\r\n      },\r\n      {\r\n        storeName: \"brief\",\r\n        idName: \"id\",\r\n        indexName: \"bookId\",\r\n        propName: \"bookId\",\r\n        unique: true,\r\n      },\r\n    ]\r\n    dbInit(\"db_YunReader\", 1, stores).then((response) => {\r\n      console.log(\"db\", response) //调试\r\n      dbOperation(\"brief\", \"getAll\").then((response) => {\r\n        if (response) {\r\n          // response.forEach((item) => {\r\n          //   if (!item.accessTime) {\r\n          //     dbOperation(\"brief\", \"put\", {\r\n          //       id: item.id,\r\n          //       bookId: item.bookId,\r\n          //       bookName: item.bookName,\r\n          //       accessTime: new Date(),\r\n          //     })\r\n          //   }\r\n          // })\r\n          this.bookList = response\r\n        }\r\n      })\r\n    })\r\n  },\r\n  methods: {\r\n    // el-upload选了文件\r\n    // onChange() {\r\n    //   this.$refs.upload.abort() //取消上传请求\r\n    //   this.$refs.upload.clearFiles() //清空已上传的文件列表\r\n    //   var event = event || window.event\r\n    //   // var file = event.target.files[0]\r\n    //   this.readFile(event.target)\r\n    // },\r\n\r\n    // 选择文件\r\n    selectFile() {\r\n      if (!window.FileReader) {\r\n        alert(\"浏览器不支持浏览本地文件！\")\r\n        return\r\n      }\r\n      let inputObj = document.getElementsByClassName(\"_add-book-file\")[0]\r\n      if (!inputObj) {\r\n        //如果input不存在则创建一个\r\n        inputObj = document.createElement(\"input\")\r\n        inputObj.setAttribute(\"class\", \"_add-book-file\")\r\n        inputObj.setAttribute(\"type\", \"file\")\r\n        inputObj.setAttribute(\"style\", \"display:none\")\r\n        document.body.appendChild(inputObj)\r\n        inputObj.onchange = () => {\r\n          this.readFile(inputObj) //选中文件时触发\r\n        }\r\n      }\r\n      inputObj.click()\r\n      inputObj.value\r\n    },\r\n    // 读取文件\r\n    readFile(input) {\r\n      let file = input.files[0]\r\n      document.body.removeChild(input) //读取完就移除，否则再选同一个文件会无效\r\n      if (!file) return\r\n      this.bookName = file.name.split(\".\").slice(0, -1).join(\".\")\r\n      this.bookId = this.encode(this.bookName)\r\n      this.checkFile(file)\r\n      let reader = new FileReader()\r\n      reader.onload = (e) => {\r\n        const content = e.target.result\r\n        // 使用FileReader以utf-8格式读取文件，根据文件内容是否包含乱码字符�，来判断文件是否为utf-8。\r\n        // 如果存在�，即文件编码非utf-8，反之为utf-8。\r\n        if (content.indexOf(\"�\") === -1) {\r\n          // console.log(\"UTF-8 , getChapters start\")\r\n          this.bookText = content\r\n          this.getChapters()\r\n        } else {\r\n          // console.log(\"Not UTF-8, readAsText gb2312\")\r\n          reader.readAsText(file, \"gb2312\")\r\n        }\r\n      }\r\n      reader.readAsText(file) //默认编码UTF-8\r\n    },\r\n    // 检查文件格式与大小\r\n    checkFile(file) {\r\n      const isTxt = file.type == \"text/plain\"\r\n      const isLimit50M = file.size / 1024 / 1024 < 50\r\n      // console.log(file.type)\r\n      if (!isTxt) {\r\n        this.$message.error(\"选择的文件只能是 txt 格式!\")\r\n      }\r\n      if (!isLimit50M) {\r\n        this.$message.error(\"选择的文件大小不能超过 50MB!\")\r\n      }\r\n      return isTxt && isLimit50M\r\n    },\r\n    // 字符串转base64\r\n    encode(str) {\r\n      let encode = encodeURI(str) // 对字符串进行编码\r\n      let base64 = btoa(encode) // 对编码的字符串转化base64\r\n      return base64\r\n    },\r\n\r\n    // extractTitles(str) {\r\n    //   const reg =\r\n    //     /(正文){0,1}(第)([零〇一二三四五六七八九十百千万a-zA-Z0-9]{1,7})[章节卷集部篇回]((?! {4}).)((?!\\t{1,4}).){0,30}\\r?\\n/g\r\n    //   let list = []\r\n    //   let result = null\r\n    //   result = str.match(reg)\r\n    //   result && list.push(...result)\r\n    //   for (let i = 0; i < list.length; i++) {\r\n    //     list[i] = list[i].replace(\"\\r\", \"\").replace(\"\\n\", \"\").replace(\"\\t\", \"\")\r\n    //   }\r\n    //   return list\r\n    // },\r\n\r\n    getChapters() {\r\n      var timeStart = performance.now()\r\n      const debug = false //调试总开关\r\n      this.list = [] //清空\r\n      // const regex =\r\n      //   /^第(.*?)章|^第(.*?)回|^第(.*?)集|^第(.*?)卷|^第(.*?)部|^第(.*?)篇|^第(.*?)节|^第(.*?)季|^【(.*?)】/\r\n      const regex =\r\n        /^(第)([零〇一二三四五六七八九十百千万a-zA-Z0-9]{1,7})[章节卷集部篇回季](.){0,30}|^【(.{1,30})】$/\r\n      const text = this.bookText\r\n      // console.log(this.extractTitles(text))\r\n      let paraList = text\r\n        .replaceAll(\"\\r\\n\", \"\\n\")\r\n        .replaceAll(\"\\r\", \"\\n\")\r\n        .split(\"\\n\")\r\n        .map((item) => item.trim())\r\n        .filter((item) => item.length > 0)\r\n      // if (debug) console.log(\"paraList\", paraList) //调试\r\n      let start = 0\r\n      let chapters = []\r\n      let titles = []\r\n      //按段落分析，生成临时的标题和章节数组\r\n      for (let i = 0; i < paraList.length; i++) {\r\n        //如果是标题\r\n        // if (regex.test(paraList[i]) && paraList[i].length < 40) {\r\n        if (regex.test(paraList[i])) {\r\n          if (i == 0) {\r\n            //如果第一段就是标题\r\n            titles.push(paraList[i])\r\n          } else {\r\n            const content = paraList.slice(start, i)\r\n            if (titles.length == 0 && start == 0) titles.push(\"前言\")\r\n            titles.push(paraList[i])\r\n            chapters.push(content)\r\n            start = i\r\n          }\r\n        }\r\n        //如果到最后一段了\r\n        if (i == paraList.length - 1) {\r\n          const endChapter = paraList.slice(start, i + 1)\r\n          if (titles.length == 0) titles.push(endChapter[0].slice(0, 10))\r\n          chapters.push(endChapter)\r\n        }\r\n      }\r\n      if (debug) console.log(\"chapters\", chapters) //调试\r\n      if (debug) console.log(\"titles\", titles) //调试\r\n      this.chapterList = [] //清空\r\n      //生成最终的完整章节数据\r\n      for (let i = 0; i < chapters.length; i++) {\r\n        this.chapterList.push({\r\n          id: i,\r\n          title: titles[i],\r\n          content: chapters[i],\r\n          // content: chapters[i].join(\"\\n\"),\r\n        })\r\n      }\r\n\r\n      // this.updateBookList()\r\n      this.readArticle({ id: 0 })\r\n\r\n      var timeEnd = performance.now()\r\n      console.log(\"getChapters 耗时\", `${timeEnd - timeStart}ms`)\r\n    },\r\n\r\n    // 更新书籍列表\r\n    updateBookList() {\r\n      dbOperation(\"brief\", \"getByIndex\", { name: \"bookId\", value: this.bookId }).then(\r\n        (response) => {\r\n          if (!response) {\r\n            const newBook = {\r\n              bookId: this.bookId,\r\n              bookName: this.bookName,\r\n              chapterList: JSON.stringify(this.chapterList),\r\n            }\r\n            const newBrief = {\r\n              bookId: this.bookId,\r\n              bookName: this.bookName,\r\n              accessTime: new Date(),\r\n            }\r\n            dbOperation(\"book\", \"add\", newBook)\r\n            dbOperation(\"brief\", \"add\", newBrief)\r\n            this.bookList.push(newBrief)\r\n          } else {\r\n            this.$message({ message: \"选择的书已在列表中\", type: \"info\", duration: 1000 })\r\n          }\r\n        }\r\n      )\r\n    },\r\n\r\n    //阅读文章\r\n    readArticle(row) {\r\n      // this.articleData = row\r\n      this.$refs.reader.turnLocked = true //翻页动画锁定\r\n      // this.$refs.reader.currentPage = 0\r\n      this.inReader = !this.inReader\r\n      this.$nextTick(() => {\r\n        if (row) {\r\n          this.$refs.reader.currentChapter = row.id\r\n        }\r\n      })\r\n      setTimeout(() => {\r\n        this.$refs.reader.turnLocked = false //翻页动画打开\r\n      }, 100)\r\n    },\r\n    readBook(item) {\r\n      dbOperation(\"book\", \"getByIndex\", { name: \"bookId\", value: item.bookId }).then((response) => {\r\n        if (response) {\r\n          dbOperation(\"brief\", \"put\", {\r\n            id: item.id,\r\n            bookId: item.bookId,\r\n            bookName: item.bookName,\r\n            accessTime: new Date(),\r\n          })\r\n          item.accessTime = new Date()\r\n          this.bookId = item.bookId\r\n          this.bookName = response.bookName\r\n          this.chapterList = JSON.parse(response.chapterList)\r\n          this.listPagination.pageIndex = 1 //重置到列表第一页\r\n          this.getList() //生成列表\r\n          this.$refs.reader.turnLocked = true //翻页动画锁定\r\n          this.inReader = !this.inReader\r\n          setTimeout(() => {\r\n            this.$refs.reader.turnLocked = false //翻页动画打开\r\n          }, 100)\r\n        }\r\n      })\r\n    },\r\n    showCatalog(item, val = true) {\r\n      this.catalogVisible = val\r\n      if (val) {\r\n        dbOperation(\"book\", \"getByIndex\", { name: \"bookId\", value: item.bookId }).then(\r\n          (response) => {\r\n            if (response) {\r\n              this.bookId = response.bookId\r\n              this.bookName = response.bookName\r\n              this.chapterList = JSON.parse(response.chapterList)\r\n              this.listPagination.pageIndex = 1 //重置到列表第一页\r\n              this.getList() //生成列表\r\n            }\r\n          }\r\n        )\r\n      }\r\n    },\r\n    // 删除书籍\r\n    deleteBook(item) {\r\n      dbOperation(\"brief\", \"getByIndex\", { name: \"bookId\", value: item.bookId }).then(\r\n        (response) => {\r\n          //删除书籍最后位置、书签的记录，笔记暂不考虑在此处删除\r\n          localStorage.removeItem(\"LASTPOSITION_\" + item.bookId)\r\n          localStorage.removeItem(\"BOOKMARKS_\" + item.bookId)\r\n          //刚添加的书没有id，所以获取数据库自动生成的id后再执行删除\r\n          dbOperation(\"brief\", \"delete\", response.id)\r\n          dbOperation(\"book\", \"delete\", response.id).then(() => {\r\n            let index = 0\r\n            for (let i in this.bookList) {\r\n              if (this.bookList[i].id == item.id) {\r\n                index = i\r\n                break\r\n              }\r\n            }\r\n            this.bookList.splice(index, 1)\r\n          })\r\n        }\r\n      )\r\n    },\r\n\r\n    // 改变模式（列表或阅读）\r\n    changeMode() {\r\n      this.inReader = !this.inReader\r\n    },\r\n    // 获取列表数据\r\n    getList() {\r\n      this.list = [] //清空\r\n      this.total = this.chapterList.length\r\n      const index = this.listPagination.pageIndex\r\n      const size = this.listPagination.pageSize\r\n      if (this.isAsc) {\r\n        const start = (index - 1) * size\r\n        const end = start + size\r\n        for (let i = start; i < end && i < this.total; i++) {\r\n          this.list.push({\r\n            id: this.chapterList[i].id,\r\n            title: this.chapterList[i].title,\r\n          })\r\n        }\r\n      } else {\r\n        const start = this.total - 1 - (index - 1) * size\r\n        const end = start - size\r\n        for (let i = start; i > end && i >= 0; i--) {\r\n          this.list.push({\r\n            id: this.chapterList[i].id,\r\n            title: this.chapterList[i].title,\r\n          })\r\n        }\r\n      }\r\n    },\r\n    // 目录顺序切换\r\n    sortChange() {\r\n      this.isAsc = !this.isAsc\r\n      this.getList()\r\n      this.listPagination.pageIndex = 1\r\n    },\r\n    // 搜索框内容变化\r\n    inputChange(val) {\r\n      clearTimeout(this.searchTimer)\r\n      this.searchTimer = setTimeout(() => {\r\n        this.keyword = val\r\n      }, 500)\r\n    },\r\n  },\r\n  computed: {\r\n    // 过滤后的书籍列表\r\n    bookListFilted() {\r\n      const newList = this.bookList.filter((item) => {\r\n        return this.keyword == \"\" || item.bookName.indexOf(this.keyword) > -1\r\n      })\r\n      //sort会改变原数组\r\n      newList.sort((a, b) => {\r\n        return this.sortByTime ? b.accessTime - a.accessTime : a.id - b.id\r\n      })\r\n      return newList\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n:root {\r\n  --text-hover-color: #20a0ff;\r\n  --bg-hover-color: #eee;\r\n}\r\n// .popover-more {\r\n//   //\r\n// }\r\n.bookshelf-menu-item {\r\n  padding: 5px;\r\n  text-align: center;\r\n  &:hover {\r\n    color: var(--text-hover-color);\r\n    background-color: #eee;\r\n    cursor: pointer;\r\n  }\r\n}\r\n.app-container {\r\n  padding: 20px;\r\n  .bookshelf {\r\n    overflow-x: auto;\r\n    .bookshelf-container {\r\n      width: 840px;\r\n      margin: 0 auto;\r\n      .bookshelf-title {\r\n        color: #777777;\r\n        background: linear-gradient(to right, #e6e6e6, #e1e1e1);\r\n        padding: 10px 30px 10px 30px;\r\n        border-radius: 10px 10px 0 0;\r\n        .el-icon {\r\n          float: right;\r\n          top: -1px;\r\n          margin-left: 20px;\r\n          &:hover {\r\n            color: var(--text-hover-color);\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n\r\n      .bookshelf-content {\r\n        padding: 30px 30px 0 30px;\r\n        border: 1px dotted #cccccc;\r\n        border-radius: 0 0 10px 10px;\r\n        // box-shadow: inset 0 0 6px 2px rgb(150 150 150 / 50%);\r\n\r\n        .el-card {\r\n          background: #e7ecef;\r\n          // border: 2px ridge #fff;\r\n          border-radius: 5px;\r\n          &:hover {\r\n            box-shadow: 0 0 15px 10px rgb(150 150 150 / 30%);\r\n            .cover-head {\r\n              visibility: visible;\r\n            }\r\n          }\r\n          .cover-head {\r\n            visibility: hidden;\r\n            position: absolute;\r\n            left: 0;\r\n            right: 0;\r\n            .cover-button {\r\n              color: #999999;\r\n              font-size: 16px;\r\n              // text-decoration: underline;\r\n              // text-underline-offset: 2px;\r\n              width: 36px;\r\n              height: 30px;\r\n              &:hover {\r\n                color: var(--text-hover-color);\r\n              }\r\n              &:nth-child(2) {\r\n                float: right;\r\n                &:hover {\r\n                  color: #ff0000;\r\n                  background: #ffaaaa50;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          .image {\r\n            width: 100%;\r\n            display: block;\r\n          }\r\n          .book-name {\r\n            font-size: 16px;\r\n            text-align: center;\r\n            height: 80px;\r\n            padding: 12px;\r\n          }\r\n          .add-book-icon {\r\n            position: absolute;\r\n            top: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n            right: 0;\r\n            margin: auto;\r\n            color: #777777;\r\n            &:hover {\r\n              color: var(--text-hover-color);\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./BookShelf.vue?vue&type=template&id=54a165a8\"\nimport script from \"./BookShelf.vue?vue&type=script&lang=js\"\nexport * from \"./BookShelf.vue?vue&type=script&lang=js\"\n\nimport \"./BookShelf.vue?vue&type=style&index=0&id=54a165a8&lang=scss\"\n\nimport exportComponent from \"D:\\\\WorkSpace\\\\Dev\\\\Projects\\\\YunAdmin\\\\YunAdmin.Web\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./MyBookShelf.vue?vue&type=template&id=589ddee6\"\nimport script from \"./MyBookShelf.vue?vue&type=script&lang=js\"\nexport * from \"./MyBookShelf.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\WorkSpace\\\\Dev\\\\Projects\\\\YunAdmin\\\\YunAdmin.Web\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["db","dbInit","dbName","dbVersion","stores","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","event","target","result","onupgradeneeded","forEach","item","objectStoreNames","contains","storeName","objectStore","createObjectStore","keyPath","idName","autoIncrement","createIndex","indexName","propName","unique","onerror","err","async","dbOperation","store","method","data","methodList","includes","Error","toString","readType","transaction","add","get","getAll","put","delete","index","name","value","res","alert","_createElementBlock","_createVNode","_component_BookShelf","class","_createElementVNode","style","_hoisted_5","_toDisplayString","$data","_component_el_popover","placement","width","offset","reference","_component_el_icon","size","_component_MoreFilled","onClick","top","visibility","_component_Select","_hoisted_7","_hoisted_8","_component_Search","_component_el_input","$event","placeholder","clearable","onInput","$options","_component_Plus","_component_el_row","gutter","_Fragment","_renderList","_createBlock","_component_el_col","key","span","_component_el_card","padding","height","position","_component_el_button","text","icon","_component_el_popconfirm","title","onConfirm","src","require","bookName","_hoisted_12","_hoisted_13","_component_el_page_header","onBack","content","_hoisted_19","_component_el_table","border","onSortChange","_component_el_table_column","label","align","props","$index","pageIndex","pageSize","prop","minWidth","row","_hoisted_20","type","_component_pagination","total","autoScroll","page","limit","onPagination","_component_YunReader","ref","changeMode","inReader","bookId","chapterList","articleData","components","Pagination","YunReader","fileList","bookList","sortByTime","searchInput","searchTimer","keyword","bookText","listPagination","sort","sortType","tableKey","list","isAsc","catalogVisible","mounted","then","response","console","log","this","methods","selectFile","FileReader","inputObj","document","getElementsByClassName","createElement","setAttribute","body","appendChild","onchange","readFile","click","input","file","files","removeChild","split","slice","join","encode","checkFile","reader","onload","e","indexOf","getChapters","readAsText","isTxt","isLimit50M","$message","error","str","encodeURI","base64","btoa","timeStart","performance","now","debug","regex","paraList","replaceAll","map","trim","filter","length","start","chapters","titles","i","test","push","endChapter","id","readArticle","timeEnd","updateBookList","message","duration","newBook","JSON","stringify","newBrief","accessTime","Date","$refs","turnLocked","$nextTick","currentChapter","setTimeout","readBook","parse","getList","showCatalog","val","deleteBook","localStorage","removeItem","splice","end","sortChange","inputChange","clearTimeout","computed","bookListFilted","newList","a","b","__exports__","BookShelf","render"],"sourceRoot":""}